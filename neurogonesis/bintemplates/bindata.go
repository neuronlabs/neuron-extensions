// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/00_imports.tmpl
// templates/01_initialize_collections.tmpl
// templates/02_collection.tmpl
// templates/03_collection-structure.tmpl
// templates/04_collection-builder.tmpl
// templates/05_model.tmpl
// templates/06_primary.tmpl
// templates/07_fielder.tmpl
// templates/08_single-relationer.tmpl
// templates/09_multi-relationer.tmpl
// templates/10_model-definition.tmpl
// templates/11_single-file-models.tmpl
// templates/12_single-file-collections.tmpl
// templates/13_collection-definition.tmpl
// templates/14_collection-package-structure.tmpl
// templates/15_collection-package.tmpl

package bintemplates


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataTemplates00importstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\xca\xcc\x2d\xc8\x2f\x2a\x29\x56\x52\xd0\xad\xad\xe5\xaa\xae\xd6\x55\xc8\x4c\x53\xd0\xf3\x84\x08\x82\xc5\x20\x0a\x14\x34\xb8\xaa\xab\x8b\x12\xf3\xd2\x53\x15\x54\xa0\x22\x56\xb6\x08\x85\xb5\xb5\x0a\x0a\x0a\x0a\x4a\xd5\xd5\x50\xc9\xda\x5a\x25\xae\xea\xea\xd4\xbc\x14\x90\x11\x9a\x60\x73\xa1\x1c\x18\xbb\xb6\x16\x10\x00\x00\xff\xff\x08\x20\xfd\xe4\x84\x00\x00\x00")

func bindataTemplates00importstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates00importstmpl,
		"templates/00_imports.tmpl",
	)
}



func bindataTemplates00importstmpl() (*asset, error) {
	bytes, err := bindataTemplates00importstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/00_imports.tmpl",
		size: 132,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1597612013, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates01initializecollectionstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xb1\x4e\xc4\x30\x10\x44\xfb\x7c\xc5\x28\x7d\x7c\x3d\x2d\x47\x71\xcd\x1d\x45\x7a\xb4\xc4\x9b\xb0\xc2\x5e\x47\xf6\x9e\x10\x58\xfe\x77\x94\xa4\x38\x44\xb7\x7a\x33\x23\xed\xab\xd5\xf3\x2c\xca\xe8\x45\xc5\x84\x82\xfc\xf0\xdb\x94\x42\xe0\xc9\x24\x69\xe9\x31\xb4\xd6\x9d\x4e\x78\x4e\x9e\xb1\xb0\x72\x26\x63\x8f\xf7\x6f\x28\xdf\x73\x5a\x92\x72\x91\xe2\x70\xbe\xe1\x7a\x1b\xf1\x72\xbe\x8c\x6e\xeb\x8f\x1f\x52\x30\x4b\x60\x7c\x51\xf9\x33\x24\x7b\xda\xe2\x5a\x61\x12\xb9\x18\xc5\x15\xad\x75\xdd\x4a\xd3\x27\x2d\x8c\x5a\xdd\xeb\x71\x5e\x29\x72\x6b\x5d\xad\x32\xc3\x5d\xe2\x9a\xb2\x15\xec\xc0\x38\xae\x81\x6c\x7b\xfa\xc0\x3d\xdc\x91\xb0\xfa\x7f\x8d\x87\xcb\xf0\x30\xcc\xc3\x7c\xd7\x1d\xf6\x70\xfb\x00\xac\x1e\xad\xfd\x06\x00\x00\xff\xff\xc4\xb5\xbf\x6c\x0f\x01\x00\x00")

func bindataTemplates01initializecollectionstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates01initializecollectionstmpl,
		"templates/01_initialize_collections.tmpl",
	)
}



func bindataTemplates01initializecollectionstmpl() (*asset, error) {
	bytes, err := bindataTemplates01initializecollectionstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/01_initialize_collections.tmpl",
		size: 271,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1597612013, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates02collectiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xbb\x4e\xc3\x40\x10\x45\x7b\x7f\xc5\x95\x7b\x3b\x3d\x2d\xa1\xa0\x49\x28\xfc\x03\x83\x7d\x63\x46\xec\x4b\xde\x41\x08\x8d\xf6\xdf\xd1\x92\x02\x44\x37\xd2\x39\x23\x9d\xeb\xbe\xf1\xa6\x89\x18\xd7\x1c\x02\x57\xd3\x9c\x46\x4c\xad\x0d\xa7\x13\x1e\xf3\x46\xec\x4c\x3c\xc4\xb8\xe1\xf5\x0b\x89\x1f\x47\xde\x73\x62\xd5\x3a\xe3\x7c\xc5\xe5\xba\xe0\xe9\xfc\xbc\xcc\xdd\x5f\xde\xb4\xe2\xa6\x81\xf8\x94\xfa\xe7\x51\xec\xa1\x63\x77\x98\x46\x56\x93\x58\xd0\xda\x30\x14\x59\xdf\x65\x27\xdc\xe7\x97\xfb\x79\x91\xc8\x4e\xdc\x8d\xb1\x04\x31\x62\xd4\x58\xf2\x61\x75\xc4\xfc\x9f\xfc\x26\x4f\x3f\x2b\xf4\x5e\xdf\x3d\xf7\x09\x4c\x5b\x6b\xdf\x01\x00\x00\xff\xff\x7d\x2e\x09\x85\xe1\x00\x00\x00")

func bindataTemplates02collectiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates02collectiontmpl,
		"templates/02_collection.tmpl",
	)
}



func bindataTemplates02collectiontmpl() (*asset, error) {
	bytes, err := bindataTemplates02collectiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/02_collection.tmpl",
		size: 225,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598963720, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates03collectionstructuretmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdf\x6f\xdb\x38\x12\x7e\xcf\x5f\x31\x6b\xec\xae\xa5\xc2\x55\xfa\x70\xb8\x07\x03\x3e\xa0\x69\xb6\x7b\xc6\xa1\xbd\xbd\x24\xbd\x03\x2e\x08\x0a\xd9\x1c\xc7\x44\x64\x52\x25\xe9\x24\x3e\x41\xff\xfb\x81\x3f\xf4\x5b\xb2\x1c\xdb\x75\x8b\x45\x5f\x62\xd8\x22\x67\x3e\x7e\xf3\x71\x38\x1c\x25\x49\x08\x2e\x28\x43\x18\xcc\x79\x14\xe1\x5c\x51\xce\x5e\x4b\x25\xd6\x73\xb5\x16\x38\x80\xd7\x69\x7a\x76\x76\x7e\x0e\x49\x12\xbc\xcb\x07\x04\x1f\xc3\x15\xa6\x29\x50\x09\x6a\x89\xf0\x65\x8d\x62\x03\x4b\x8c\x62\x14\xa0\x96\xa1\x82\x58\xf0\x47\x4a\x50\xc2\x8a\x13\x8c\x40\xc6\x38\xa7\x0b\x3a\x07\x12\xaa\x70\x16\x4a\x84\xb7\x7f\x4c\x83\x33\xb5\x89\xb1\xdd\xb0\x05\x00\xc9\x19\x00\xc0\xea\xda\x7e\x7b\xb5\x0a\xe3\x98\xb2\xfb\xe0\x83\x36\x6a\x7f\x3c\xb3\xe8\x4a\xbf\xc0\x3d\x2a\x0b\x4b\x2a\x2e\x90\x64\x10\xcc\xc3\xe0\x6c\xb1\x66\x73\xf0\xaa\x4e\xaf\x70\x8e\xf4\x11\x45\x9a\xc2\xab\x36\x38\x7e\xd9\xbe\xe7\xb7\x02\x71\x58\x05\xaa\xb5\x60\xd0\x65\x3f\x58\x15\xb0\xf7\x43\xb2\x2a\x21\xf9\x4c\x66\x39\xa3\xc1\xe5\x85\x0f\x5e\x1b\xb2\x11\xa0\x10\x5c\xf8\x0e\x21\x5d\xf4\xa2\x83\x9f\x26\xc0\x68\xe4\x26\xbc\x60\x59\x23\x3d\xcd\x4c\x4a\xcb\x91\x33\x08\x60\x3c\x81\xcf\x64\x66\x91\x7d\x08\x63\xcf\x2f\x83\xf4\x7e\x4d\x12\xfb\xdd\x2e\x34\x49\xfd\x0c\xad\x9e\xdb\x05\x88\xd1\xc8\x18\x2f\xf9\xec\x5d\xdc\x24\x83\x55\x0e\x58\x65\x01\x56\x53\x37\xdc\xe0\x91\x30\xe7\xec\x11\x85\x13\x15\x65\xf1\x5a\x81\x8c\xe8\x1c\x81\x1b\x2a\x4b\xa8\x81\x32\xc5\xe1\xf6\xae\x12\x85\x3d\x03\x9d\xb9\xf7\xac\xc7\x20\x08\x5e\x55\x9d\xf9\xe0\xd5\x3c\x65\x21\xe6\x6b\xa5\xa7\x8c\x27\xb0\x0a\x1f\xb0\x3e\x6a\x04\x11\x32\x6b\xd5\xb7\x24\x2f\xb8\x00\xaa\x87\x8b\x90\xdd\x67\x4b\x2c\xb8\xb6\xe6\x6e\xe9\x1d\x4c\xec\xb3\x5b\x7a\x57\x22\xdc\x31\x68\x47\x39\xee\xde\x0b\xbe\xea\x66\xaf\x02\x27\xe3\xac\xb6\xba\x7d\x77\x6a\xe1\xb9\x20\xae\x46\x92\xd7\x70\xd6\x49\x5c\x6d\xdc\x51\xa8\x0b\xbc\xba\xf7\x1e\x32\xff\x65\xd2\xeb\x5c\x60\xa8\xb0\x9c\x70\xb5\x6f\xfd\xed\x38\xc4\x19\x2f\x5e\x35\xa3\x8c\x6c\xba\x91\xad\xea\xab\xd9\x31\xf3\x2f\xd6\x34\x22\xc6\x8b\xe5\xe0\x31\x14\x16\xac\x13\x43\x7d\x6b\xb8\x2d\xae\x59\xb5\x9e\x7c\xf8\x1b\xbc\x29\x11\x58\x9e\xbc\x4d\xce\x6e\xb6\x9f\x4f\x34\x81\x71\xf8\x8b\xf8\xb8\xe5\x14\xf6\x6b\x3e\x6c\xa4\x56\x39\xb6\x22\x30\xed\x09\xad\x3b\xd9\x94\x52\x1b\x99\x59\x58\x33\x4b\x8e\x9e\x47\x66\x96\x2f\x2f\x37\x58\x5e\x68\x10\x04\x7e\x59\x0d\xbf\x6e\x63\x3a\x71\x66\xc7\x99\x7d\x03\x6e\xac\xff\xa4\x65\x01\xbd\x53\xcf\x3b\x6b\x08\x9e\xa8\x5a\x66\x87\x38\x81\xe1\x5c\x3d\x0f\xf5\x46\x56\xf8\xbc\xf7\x11\x9a\x81\xf0\xe6\x1a\x88\xb3\xf5\xce\x7e\x8e\xe0\x87\xee\x4e\xaa\x3b\x17\x87\x11\x9c\x44\x7f\x53\x26\x51\x28\xa0\xe6\x43\xb6\x9e\x99\x79\xf0\xf7\x54\x97\x75\x71\xb0\xb6\x4c\xa5\x54\x14\x4a\x65\x7d\x4c\x26\x15\x81\x38\x6a\xcc\x04\x19\xfc\x47\x84\xb1\x67\x28\x0c\x7e\x13\xe2\xa3\x3b\xba\x47\x30\x60\x5c\x2d\x29\xbb\x07\xc5\xdd\xf2\x07\xfe\xb1\xc2\xda\x53\x1a\x55\xab\xa2\x72\x78\xb7\xd6\x05\x15\x41\xef\x28\xe6\x2d\x42\xae\x9c\x6a\x64\x16\x14\x71\x6a\xd7\x9e\x91\x9e\x55\xcd\xa7\x98\x84\x0a\x61\x6d\x3e\x1a\xaa\x71\x20\x8e\x22\x1e\xeb\xe9\x60\xf1\x78\x94\xa9\xbf\xfe\xa5\x59\x6e\xf7\xab\xe8\xcd\xe8\x3b\x16\xd2\x9b\x7a\x85\xfd\xbd\x68\xa9\x08\x5b\xaf\x96\x2e\x31\x42\x85\x40\xcc\x47\xb7\x96\x0e\x56\x92\xf5\x73\x2c\x25\xfd\x10\xd2\x69\x84\x54\x44\xad\x57\x48\x57\xb8\x10\x28\x97\xdf\xb4\x92\x72\x18\x8e\x7a\xd8\xed\x51\x30\x1d\x7c\x20\x0a\xbb\x8e\xef\xe0\x44\xfc\x86\xda\x2b\x05\x73\xbb\xf8\xce\x92\xe4\x67\x6e\x2f\xa7\x81\xe9\xca\x25\x89\xf5\xfe\xb3\xc0\x28\xd4\xf4\x98\x47\x66\x52\x70\xe5\x7e\x92\xb6\x7f\x97\x24\x74\x51\x8c\x0b\xa6\xf2\xda\xf4\x2f\xf4\xb3\xf3\x73\x78\x4b\x48\x92\x14\x4f\x9d\x70\x43\x42\xac\xbc\x87\xcd\x87\x43\xc8\x7e\x90\x4b\x1a\x1b\x56\x72\x89\xdb\x2b\xf0\xd0\x72\x32\x2c\x34\xae\xc1\x77\xeb\xbc\xfe\x34\xd3\x68\x2b\xb6\x17\x28\x3f\xb7\x5d\xb9\xc5\xe7\xe8\xdd\xbe\x28\x1c\x5c\x84\x12\x3f\xb1\x27\x11\xc6\x31\x92\x9b\x4d\xdc\x56\x15\x5a\xc3\x93\x6e\x95\x6d\xdd\x00\x39\x51\x7a\xb6\x31\x55\xd9\x00\x6e\x93\xe5\x08\xf7\xdf\x67\xf9\x2a\x33\x7d\x66\x9e\x7b\x36\x5c\x77\xa0\x0e\xdf\x74\x19\xa4\xf7\x14\x23\x92\xfb\x74\x18\x72\xd5\x5e\x6c\xa6\x8c\xe0\xb3\x57\x0e\x8c\xf9\x25\xdd\xad\x2b\xd8\xee\x73\x97\x83\xa6\xa0\xbd\xb5\xbd\x53\xe8\xa6\xec\xb3\x6c\xde\x6e\xf7\x7c\x5c\xb5\x53\xf6\x45\x5b\xb2\xc1\xfa\x88\x4f\xd7\x73\x1e\x63\xd1\x00\x30\xdc\xfa\x15\xc4\x6f\x89\xb9\x4e\xf1\x07\x77\x75\xf3\x72\x7d\x9b\x2b\xd8\x55\x79\x58\x4e\xcc\x4f\xfc\x61\xab\x5a\x2e\x51\x2d\x0a\xc5\x4c\x99\x42\xc1\xc2\x68\x04\x83\xcb\x0b\x20\x1c\x25\x1b\x2a\xa0\xab\x38\xc2\x15\x32\x05\x4d\x47\xba\xe4\x46\xb1\x08\x75\xfe\x80\x5f\x6e\x06\x7a\xe3\xb5\x74\xb0\x2a\x6b\xb0\x78\xdf\x12\x92\xe7\x25\x9b\xef\xbe\x8c\xea\x8a\xa8\xb2\xe9\x72\x5f\x92\x20\x23\xf9\x9b\x88\x77\x11\x86\xa2\x99\x14\x32\xd3\x30\xd7\xcf\xf7\x4a\x5d\x76\x9f\x04\xf0\x9e\x8b\xca\x28\x09\x7c\x01\x6a\x13\xe3\x58\xfb\xbf\xc0\x88\xb3\x7b\x79\xc3\x47\xf0\xf7\x50\xfe\x93\xa1\xf9\xfc\x10\xb2\x8d\xa6\x7f\xc1\x05\xd2\x7b\x06\x0f\xb8\x01\x2a\x81\x71\x05\x6c\x1d\x45\xe1\x2c\x42\x50\xcb\x90\x19\x5c\x3a\x27\x1a\xac\x4f\x7c\x1d\x91\x8c\xb2\xd0\xc5\xe9\xd0\x9c\xd9\x43\xd0\x1e\x75\x43\x3d\x83\x76\xdc\x75\xbe\x76\x2e\x69\x14\x90\xd9\x0a\xbf\x5a\x26\x69\x78\x34\xa8\xa7\xd9\x0e\x78\x71\xd9\xba\xa5\x66\xa8\x59\x2e\xd5\x0d\xb5\x2c\x22\x7b\xb3\x48\x61\xa5\xd4\xc9\xb1\xab\x37\xda\xd8\x25\xa9\xb8\x81\xdb\xd3\x4a\xf5\xba\x71\xe2\xcc\xe2\x10\xba\x86\x96\xfe\x52\xcb\x2e\xb2\x48\x27\xb6\x82\x3a\x3f\x87\xdf\x51\xb5\xd4\x3a\xf9\x2b\xc3\x03\x6a\x9d\x83\x4b\x9d\x56\x68\x47\x2b\x75\x4c\x7e\x95\x68\xde\x87\x48\x25\x28\xbb\xf7\x35\xd4\xae\xba\xf0\xf6\x2e\x49\x5e\x83\x4b\xbb\x7d\x15\x52\xb3\xe5\xb1\xbd\x44\xca\xde\xda\x1d\x52\x27\xe9\x83\x60\x89\xf3\x07\xed\x2d\x16\x74\x15\x8a\x8d\xc9\xb9\xcb\x50\xc2\xff\x50\x70\x78\x0c\xa3\x35\x06\x15\x40\xc1\x54\xfe\x61\x87\xfe\x03\x37\xff\x45\xc1\x3d\x7f\x07\x70\xd9\xc6\xfe\x4d\x08\x43\xe2\xbf\xb5\xe1\x11\x0c\x6c\xd4\xe5\xd8\x88\xa6\xc6\xfb\xb0\x82\xc9\x40\xa9\x21\x3b\x69\x11\xd6\xf2\x9a\xf4\x34\x95\x58\xcd\x71\x7e\xd5\x5c\x18\x35\xc2\xed\x5d\xfe\xc2\xda\x3a\x36\x68\x9a\x55\x9b\x49\x9b\x65\xc0\xc5\x05\x67\x49\x63\xcf\xb7\x5f\x91\x54\x5e\xd3\xb7\x95\xd3\xd9\x2e\x68\x54\xd5\x0e\xd0\xa4\xea\x37\xb0\xe3\x9d\xad\x14\x30\x92\x58\x9e\xc4\x05\x7c\x1e\xd9\xb9\xcd\x22\x31\xdf\x71\xd5\xae\xbf\x74\x8c\xdb\x04\xdc\xe2\xee\x62\xa3\x35\xe4\x19\xab\x7e\x65\x6a\x23\x0d\xf7\x48\x77\x51\xd6\xee\x94\x3d\x86\x11\xb5\x14\x39\x08\xfa\x92\x60\xdc\x8c\x61\xf8\x8b\x1c\xc2\x82\xaf\x19\xc9\x1b\x19\x46\x67\xe3\x6a\x4a\x6c\xd9\xfc\xc3\x81\x63\xa0\x8a\x35\xad\x7c\xcb\xe9\xd5\x13\x19\xb1\x8b\x93\x23\x47\x86\xdf\x78\xe7\x51\x91\x80\xcc\xe5\x49\x66\xc1\xef\xa8\x6a\x69\x3e\xdf\x3c\xb5\x33\x38\x31\x0b\xa8\xa7\x40\x07\xb6\x38\x19\x5f\xbe\x75\x7a\xaf\x68\x5b\xae\xdb\x35\xeb\xe6\x0d\xf3\x56\x7a\x93\xb4\xf8\xa7\x0a\x6b\xfb\xb5\x95\x61\x8b\x35\x83\xb5\x31\x98\x91\xb4\xfc\x2a\xa9\x07\x9c\x40\xb9\x8e\x6a\xaf\xc0\x7b\x92\x7f\xe7\xc5\xa9\xa0\xbe\xef\x0a\xa5\x7d\x56\xaf\x4e\xe6\x2d\xf9\xf6\x7b\x79\x5b\x69\xa0\x0d\x15\x1c\x34\xc8\xaa\x95\x10\xf2\xf6\xcd\xdd\x0e\x8e\x6a\x06\x0d\xa1\xae\x9e\xb8\x6e\xad\x27\xe4\x11\xea\x89\xc3\x7b\x27\xad\xd8\x8e\x56\x50\x74\xeb\xc8\xdc\x1a\x32\xea\xd3\x14\x5e\x50\x49\x9c\xb6\xd7\xf2\xd5\x6a\x88\x3f\x59\xf9\xf0\xed\x7b\x38\xbb\x76\x4e\x8c\x28\xf5\x9d\xbb\x3b\xc1\xd1\x05\x94\x9e\x1d\x27\x96\x79\x9a\x6b\xdd\xef\x56\xc3\xd5\xf8\xe5\x01\x36\xa7\xd1\xc0\x6f\xe1\xf7\x1a\x95\xda\xe5\xa6\x66\xc7\x9d\xa2\xff\x63\x3d\x15\xd7\xb4\xf1\x0e\xb7\x34\x3b\xc7\x22\xbe\x6e\x9c\xdd\xdd\x0d\x20\xbf\x3d\x81\x9f\xba\x3d\x7a\x70\xf3\x70\xd7\x33\x70\x67\x59\xbe\x50\x9a\x9c\x99\xff\x53\x3c\x92\x42\xa1\x52\xd9\x6d\x6b\x7d\xfe\x10\x74\x77\x47\xb3\x5e\x49\x14\xfd\xcd\xfc\xd7\xff\x07\x00\x00\xff\xff\x89\x74\xbc\x3e\x97\x2d\x00\x00")

func bindataTemplates03collectionstructuretmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates03collectionstructuretmpl,
		"templates/03_collection-structure.tmpl",
	)
}



func bindataTemplates03collectionstructuretmpl() (*asset, error) {
	bytes, err := bindataTemplates03collectionstructuretmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/03_collection-structure.tmpl",
		size: 11671,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1599143291, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates04collectionbuildertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5d\x6f\xdc\xb8\xce\xbe\xcf\xaf\xe0\x06\x5b\xd8\x0e\x12\xa7\x2f\xf0\xe2\x5c\x0c\x90\x8b\xa6\x5f\x28\xb0\xbb\x3d\xa7\xe9\x62\x2f\x82\x60\xa1\xb1\xe8\x19\x9d\xda\xd2\x1c\x49\x4e\x33\x30\xe6\xbf\x1f\x88\x92\xbf\xe6\x7b\x32\x2d\x9a\xe0\xf4\x62\x91\xad\x2d\x93\xd4\x43\xf2\x21\x45\x4d\x5d\x73\xcc\x85\x44\x38\xcd\x54\x51\x60\x66\x85\x92\x17\xe3\x4a\x14\x1c\xf5\x29\x5c\x2c\x16\x27\x75\xfd\xab\xaa\x2c\x8c\xae\x20\xa5\x7f\x5f\x5e\x42\x5d\xa7\xaf\xdb\xd5\xe9\xbf\x2a\xd4\xf3\x6b\xff\xc9\x62\x01\xc2\x80\x9d\x22\xfc\xc7\x3d\x85\x20\x09\x2a\x83\x1c\xac\x82\x4c\x23\xb3\x08\x4c\x72\xc0\x07\xcc\x2a\x8b\x4e\x9e\x5b\x2b\xd0\x40\xae\x34\x7d\x5b\xd7\xe9\xef\x8a\x63\xf1\x07\x2b\x71\xb1\x28\xdd\xff\xa6\x27\x76\x3e\xc3\xed\x9a\x8d\xd5\x55\x66\xa1\x3e\x01\x80\x56\x33\x67\x96\x8d\x99\xc1\x34\xac\xa3\x97\xa8\xb5\xfb\x4f\xe9\x93\xc5\x89\x33\xe0\x26\x53\x33\x04\x8d\xb6\xd2\xd2\xc0\x44\xdc\xa3\x0c\x1b\x30\xee\x4d\x7a\x92\x57\x32\x83\x78\xa8\xfd\x13\x66\x28\xee\x49\xf3\xd9\x36\xbb\x12\x2f\x3e\x4e\xe0\x8c\x64\xa6\x5e\x9b\x37\xd3\xeb\x04\x0f\xf2\x7a\xe9\x69\xd8\x4a\x1a\xc4\x04\x9b\xdf\x6a\xdd\x5a\x4c\x7b\x71\xb8\x33\x0b\x2a\xcb\x2a\xad\x91\x03\xaf\xb4\x90\x93\xbe\x23\xdc\x3f\x67\x5a\x65\x68\xcc\xb1\x5b\x7a\xab\x75\x9c\x78\xbd\x61\x27\x22\x87\x4d\xc2\x52\x87\xf7\x2f\x57\x20\x45\x11\x16\x0f\xb6\xbe\xf9\x23\x5a\xbb\x38\x18\x28\x32\x2e\xc0\xf4\xda\x3e\xb4\x30\xb9\xd8\xca\x94\xb4\xf8\x60\x41\xe5\x03\x3f\x37\x9f\x1e\x09\xcb\x6b\xfb\x10\x27\x8d\x8e\xf4\x75\xd0\x75\xb8\xab\x49\x4e\xb3\x03\x55\x49\x3b\xd8\x83\xac\xca\x31\x6a\xb7\x05\xca\x0d\x10\xd2\x58\x26\xb3\x90\x41\x33\xad\xee\x05\x47\xee\x77\x76\xf4\x8e\x9c\xf6\x38\x81\x58\x48\xfb\x8f\xff\x3f\xf7\x2e\x4f\x8e\xf4\xf9\xcb\xf3\xef\xe1\xf6\x60\x6a\x80\xed\x83\x34\xa8\x2d\x48\xfc\x0a\xd1\x90\x50\xa2\x16\xb0\xd8\x24\x20\xa4\x55\x84\xaa\xb1\x4a\x1f\x9d\xea\x5e\xeb\xd3\x4d\x8d\xc6\xbe\x00\xd2\x9f\x33\xee\xf8\xb8\xa2\x3f\x0d\xf3\x6d\x84\xeb\x68\xd6\xf0\xea\x9e\x47\x34\x35\xb6\x3a\xa4\x1c\x54\xef\x84\xe4\x6d\x16\xb2\xa2\x58\xaa\x52\x3e\x15\x03\x07\x97\xcc\x66\x53\x34\xae\xe2\xf5\x48\xe6\x58\xf4\x9c\x05\x0e\xbb\xdb\xbb\xb3\xa1\xee\x6f\x84\xa3\x14\xc5\xde\x48\xd2\x86\xc8\x04\x43\xda\x5d\x7f\xb0\x17\xac\x7e\x13\x8d\x9d\x3b\xcd\x19\x6a\x0d\x18\x8f\xae\xa0\x64\x5f\xd0\x03\x01\x1d\x12\xe0\xa0\x28\x50\xc6\x3d\xeb\x12\xaf\xcb\x11\xa3\x70\x1f\x6a\x26\x27\xd8\x37\xbf\xa7\xd8\x8b\xbf\x15\x77\x70\xd5\x5f\x71\x2b\xee\xd2\x78\x45\x53\xb2\x1a\x57\x65\xc0\x43\x8a\x22\xe4\xd7\x27\xcc\x35\x9a\x29\x68\xff\x17\x0d\x08\x39\xab\xec\x6a\x8a\x79\x22\xcf\x05\x16\xdc\xa4\xf0\xc1\x42\x29\x26\x53\x0b\x63\x57\xb0\xca\xb1\x6b\xd0\xbe\x0a\x3b\x25\x9e\x12\x32\x2b\x2a\xc7\xef\x1a\x0b\xe6\x60\x3e\x3a\x2d\x83\x95\x3f\x88\xb5\x76\x04\x4c\x6b\x5c\x80\xf4\x3d\x76\xc5\xd0\x08\x39\x29\x96\xfb\xc5\x80\xe5\x20\x11\x07\x59\xe8\x8a\x43\x4e\x50\x86\xf2\x69\x40\x2a\x0b\xb9\xaa\x24\xa7\xc7\x0e\x4d\x67\xce\xb0\xbf\x72\xf5\xd6\x4b\x78\xab\x35\x41\xf8\x87\xfa\x84\xa6\x2a\xec\xb1\xf8\xbf\x47\xaa\xb0\x3f\x3e\xab\x09\x8f\xc3\xf2\x99\x6c\x7f\x64\x3a\xf7\xd3\x66\x5d\x86\xf5\x33\xe9\x0d\x16\x68\x11\x38\xfd\x31\xcb\x2e\xef\x3a\xa0\xcd\x6e\x3f\xce\x47\x5e\xff\xf3\x28\x5d\x8d\xad\x01\xba\x77\xa2\xb0\xa8\x81\x71\xee\xdb\xc7\x28\xa7\x07\x11\x84\xc6\xe7\x9b\x96\x28\x27\x39\xf6\x0a\xc0\xff\x49\xfd\xc3\x10\xe0\x5b\x3e\x7e\x1c\x94\x3b\x78\xa4\x07\xe1\x9e\xf5\xa9\xb7\x83\x64\x5f\xe8\x03\xd2\x7f\x4d\x51\x63\x38\xe4\x9a\x70\xb2\x20\xde\x0e\x8d\x55\x03\xbc\x3b\xff\x46\xf7\xac\xa8\xd0\x44\xc7\x42\x4e\x3a\x1b\xc4\x8d\x75\x67\xbe\x73\xf0\xb2\x21\x4d\x53\x21\x2d\xea\x9c\x65\x58\x2f\xbe\x97\x07\xbe\xb5\x0b\xfa\x3b\x6a\xb6\x92\xa6\xe9\x41\xce\xa8\x6b\x5f\xe8\x7f\x6d\x8a\x24\x0d\x30\x88\x32\xd2\x4f\x4d\xdd\x84\x45\x73\x54\xa0\x8a\x5a\xd7\xed\xea\x34\x50\x50\x53\x6c\xdb\xd6\xb8\x59\xe0\x9a\xe2\x30\xab\x58\x36\x24\x50\x52\x57\x6c\x5e\x49\x50\x33\xf7\x8a\x15\x9d\x80\x77\x54\xea\xd1\x46\xe0\x07\x30\x3e\x35\x7d\x03\xe0\x12\x33\xec\x33\x68\x59\xa9\xf9\x5d\xd4\x6c\xc6\xc1\x45\xce\xf2\xdb\xd5\xf3\xca\xda\xad\x2f\x16\x71\x5d\x5b\xf5\x9b\xfa\x8a\xfa\x35\x2b\xb1\x80\xe5\xf7\x8d\xfd\x2e\xc6\x7c\xd4\xf9\xf0\xda\xa5\xb0\x17\x62\x5b\x42\x61\x7b\x98\x6d\x71\x7d\x9f\x30\xbd\xbd\x87\x95\xb3\x30\x63\xf1\x91\x72\x43\x03\xa5\x36\x5e\xae\xe7\x1f\x24\xc7\x87\xb8\x0f\x16\x3d\x69\x9a\xc1\x4d\x15\x70\xe7\x56\xaf\x20\x8c\x70\xd2\xbf\x34\x9b\xe5\x71\xc9\x66\x33\x21\x27\xae\xd1\xf8\xe0\xf2\x57\xb2\xe2\x1c\x4e\xdf\xa3\xb5\x42\x4e\x5c\xf3\xb8\xec\x8d\x08\xc6\x73\x10\xce\x16\xea\x74\x7d\x5f\x13\x05\xbd\x83\x46\x33\x67\xa2\x40\x3e\x82\x17\xf7\xa7\x84\x4c\xf2\x48\x78\x2f\x2f\x21\x9b\x62\xf6\xa5\x17\xb6\x68\xdb\x09\x5e\x17\xa6\x6e\xed\x3d\xd3\x30\x8c\x7b\xb8\xbd\x3b\x6b\x36\xe9\x51\xa6\xe7\x6d\xab\xfe\xf7\xb9\x97\xd9\x75\xec\xfb\x86\x63\x87\xba\xe9\xe4\x9e\x83\xfa\x42\xa2\x9a\x8f\x5a\x0a\x98\x8a\x59\x9c\xf8\x7f\x22\xef\x39\x3d\x4e\x52\xfa\xf2\x7a\xee\xe4\xc7\x64\x4c\x07\x95\xc8\xe1\x17\xf5\xa5\xa7\x6b\x4f\x2f\x6f\x76\xf2\x3d\x2b\x84\xd7\x1f\x0c\x3e\x25\x95\x23\x88\x5e\x98\x68\xd8\xa1\x36\x18\x0f\xc2\xe0\x9a\x19\xfc\x53\x7e\xd5\x6c\x36\x43\xfe\x79\x3e\xeb\x0e\x15\xa7\x01\xca\x64\x60\xec\xbe\xce\xee\x1c\xde\xcf\xa9\xe0\xc4\x2b\x70\xea\x24\x8f\x87\xcf\xcf\xfb\xd0\x27\x87\xb2\x7f\x60\xa4\xb8\xcb\xdf\xa1\xf4\x03\x2b\x41\x5d\x5f\x00\x4a\x1e\x98\xfe\x37\x51\x0a\x0b\x06\xad\xa7\xdb\x92\x3d\x88\xb2\x2a\x7b\x03\x35\x35\xfe\x37\x66\xd6\x04\xe1\xc8\x5d\x5e\xb9\x95\x74\xfa\x0f\xb3\xd3\x73\x7f\xb2\xeb\x1f\x0d\x44\xde\xeb\xa4\x68\x66\x0c\x53\x66\x80\x15\x1a\x19\x9f\x03\x17\x79\x8e\x1a\xa5\x05\x9a\x62\xab\x1c\x66\x6c\x22\xe4\x12\x93\x3f\xae\xfe\xd3\x96\xe2\x82\x36\x46\xad\xe9\x73\x29\xf3\x3d\xc3\x0f\xed\xb3\x3e\xe6\xb9\xcb\xf5\xd6\x8f\xbe\xd3\xd2\x74\x18\x8b\x0c\x28\x7a\x4d\xc7\x68\xc3\xe6\x54\x4e\xcd\x17\x31\x03\x66\xa0\x64\x72\x1e\x9c\x1c\x19\xc8\xb5\x2a\x03\x5f\xcd\x94\x11\x56\xe9\xb9\x13\x3f\xc6\x5c\x69\x84\x31\x4e\x84\x94\x8e\x71\xbb\x7a\xec\x17\xd3\xa1\x0f\x22\x6f\x46\x04\x2f\x9b\x4b\x0f\xe3\xba\x06\x66\x40\x95\xc2\x53\x35\xe5\x69\xb3\x2c\x2b\x58\x65\x30\x7d\x52\xd1\xe3\x6d\x8b\x3d\x62\xcf\x2b\x7e\x06\xa6\x1f\x1a\x41\x37\xe8\x5e\x75\x67\xa2\xae\xf1\x22\x3f\x3a\x1f\xb8\xf8\x08\x55\xc5\xb7\x71\x45\xa1\xbe\x22\xef\x2d\x35\x24\x64\xe4\x5e\xc2\x45\x7b\x24\x4d\xff\xa9\x45\xc9\xf4\xbc\x69\x04\x2f\xd7\xbc\xc1\x4a\x2b\xe9\xdf\x77\xad\x6a\x5b\xf1\xc2\xea\xc0\xb2\xe1\xd2\x8d\x34\xf8\x35\x7d\xc9\xcd\x93\xa1\x44\x94\x9c\xbe\x3b\xf2\xde\x8a\xf6\x17\x87\x0d\x2f\x35\x7a\x3f\x34\x40\x5c\x47\x41\x66\xdd\xa0\x3d\xbc\x97\x08\x1b\xda\xda\x2a\xec\x9c\x4b\xad\xeb\x14\x0f\x6f\x19\xbe\x67\xbb\x40\x8b\xba\x7e\x70\x44\x53\xc7\x95\x83\x4a\x74\x7a\xbe\xad\x3f\xd8\xbb\x37\x68\xdd\xd1\x76\x05\xcd\x93\xe3\xfa\x81\x7e\x10\xde\xa0\x3d\xf4\x20\xe8\xaa\x85\xe6\xa8\xaf\xe7\x5d\xb2\x1b\xa5\x6d\x13\x04\x74\xfd\xd3\xbf\xeb\x85\xeb\xb9\x3b\x92\xb1\xaa\x08\x6b\x1c\x9c\xca\x89\x40\x0e\xcc\x64\x28\xb9\x73\x03\x7c\x90\xfe\x29\x11\x81\x13\xc8\xb1\x79\xe9\x94\x32\xce\x21\xba\x88\x9a\x5a\xd2\x72\x0c\x48\x57\x23\x44\x8a\x29\x44\x17\x82\x47\x29\x7c\x9e\x62\x90\xa4\xf2\x3e\x17\x51\xdb\x83\x1d\x27\x89\x89\x14\xb9\xc8\x98\xcc\xb0\x59\xe9\xf4\xba\x32\x43\x9f\x6f\x22\x29\xa5\xed\x68\x2f\x92\xa9\x6b\x91\x87\x05\xe9\x8d\xd2\x96\x8d\x0b\xdc\xcc\x3e\x1d\xcb\x7c\x2b\xba\x09\x7e\x7a\x8a\x7c\xe3\x40\x0c\x48\x75\x97\x0f\xe1\x36\x5f\x69\xeb\x6f\x1d\xbc\xdd\xfd\x0b\x87\xdd\xcc\x23\xf2\xee\xd3\x04\xae\xae\xe0\xe5\xa3\x29\x62\x17\x43\x64\x4c\x3a\x56\xa0\xc6\xa9\x1f\x37\x64\x2a\x93\x80\xe5\xcc\xce\x83\xc1\xbb\x49\xe3\x58\xba\x70\x0c\xee\xd5\x77\x30\x52\x00\xf4\xa1\x21\x63\x6e\x5f\xde\x39\x60\x5c\x32\x0d\xa1\xf1\x9f\x87\xab\x9a\xf4\x4d\x9b\x7e\x43\x31\x2d\x37\xc1\x55\x90\xf7\x7f\xa3\xbb\x35\x06\xfd\x8f\xd7\x80\xad\x87\xc4\xbd\xbd\xda\xe5\x49\xef\x16\x8d\x7c\x4b\x4f\xeb\x5e\x7d\x1e\x0d\x11\x6f\xfd\x3f\xf2\x7e\x1d\xb6\x83\xbb\x5a\xc1\xc0\x1c\x9d\xfa\xd5\x32\xb1\xe5\x84\xb8\xcf\xa8\xd0\x13\xe4\x45\xb7\x8a\x26\x84\xa3\x2b\x88\xb7\xcc\x25\x92\xe5\x8f\x7c\x31\x53\x34\x8f\x8a\x67\x5a\x48\x9b\xc3\xe9\xdf\x2f\xcc\xe9\x50\x6e\xd2\x4c\x26\x5f\x71\xbe\x3a\xec\xf1\x85\xcc\x97\x07\x1e\x66\x3d\xeb\x56\x49\xbe\x7a\x11\xbd\x3a\x12\xfa\x56\x93\xc4\xb5\xa6\xf6\x67\x65\xcd\xde\x17\x0b\xf0\x95\xa6\x1b\xa2\x99\x9b\x42\x64\xce\x96\x34\xa5\x62\xb2\x58\x9c\xed\x18\x6e\xac\xb9\xaa\xfc\x0e\xe3\xc4\x95\x3b\x98\x27\x33\x52\x0c\xc6\xef\x31\x35\x9c\x6c\x9b\x1a\xb6\x21\x7f\xdc\xf8\xb0\x49\x53\x91\x13\xe9\xac\x78\x96\xb2\x67\x5f\xcc\x1b\xdc\x5e\x71\xde\xa6\x5f\x6f\x1a\xb4\x36\xa2\x92\x60\xc0\x05\x60\x61\x3a\x75\x2b\xbf\x17\x68\x20\xfa\xdd\x5f\x74\xba\xd2\xbb\x5e\xde\xda\x5f\x0d\x6c\x08\xe6\xb5\xbf\x1f\x58\xbb\xf6\x56\xdc\x3d\xf2\x4a\x6f\x03\x18\x5e\x63\x4b\x76\xdd\xb0\xab\x3f\xf8\xda\x9b\xe0\xdc\x27\x97\x67\xf0\xf9\xe3\x9b\x8f\xa3\x30\xdd\x0d\xa3\x89\xf6\x4b\x41\xbf\x7d\xa1\x16\xd3\x2a\x18\x23\xd0\xa0\xe5\xec\xf2\x07\xf1\xe3\x0d\xda\x35\xcc\x47\x73\xa1\xa7\xc6\x8f\x6b\x4d\xfd\xc9\x8f\x3f\xf9\xf1\xb1\xfc\x78\x83\xf6\x27\x3f\xee\x00\xe3\x47\xf0\xa3\x1f\xda\x7a\x76\xd4\x58\xaa\x7b\xe4\xc7\x31\xa4\x1f\x18\x3b\x41\x6b\x58\xcc\x6b\x78\x7a\x74\xb7\xc9\xe0\xad\xbf\xa0\x79\x24\x45\xd1\xaf\x68\x9e\x31\x4b\xbd\x3c\x7f\x5a\x44\x75\x48\xe2\x79\x3f\xaf\xe6\x5e\xb2\x94\x62\xe1\xff\xfe\x1b\x00\x00\xff\xff\xd5\xb5\xaa\xd2\x70\x32\x00\x00")

func bindataTemplates04collectionbuildertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates04collectionbuildertmpl,
		"templates/04_collection-builder.tmpl",
	)
}



func bindataTemplates04collectionbuildertmpl() (*asset, error) {
	bytes, err := bindataTemplates04collectionbuildertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/04_collection-builder.tmpl",
		size: 12912,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1599143887, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates05modeltmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x3d\x4e\xc6\x30\x10\x44\x7b\x9f\x62\xe4\x3e\xfe\x7a\x5a\x3e\x0a\x9a\x84\x22\x17\x58\xf0\x24\xac\x88\x7f\x14\x1b\x21\x64\xf9\xee\xc8\xa1\x41\xa2\x5b\xe9\xcd\x4a\xef\xb5\x36\xc1\x73\xd3\x48\xd8\x90\x3c\x0f\x8b\xa9\x77\x73\xbb\xe1\x31\x79\x62\x67\xe4\x29\x95\x1e\xaf\xdf\x88\xfc\x3c\xd3\x9e\x22\x8b\x16\x87\xfb\x82\x79\x59\xf1\x74\x7f\x5e\xdd\xd8\xaf\xef\x5a\xb0\xe9\x41\x7c\x49\xf9\xf3\x28\xf5\x61\xe0\xd6\x50\x35\xb0\x54\x09\x19\xbd\x1b\x93\xe5\xed\x43\x76\xa2\x35\xf7\xf2\x7b\xce\x12\x38\xc8\x98\x32\xe4\x43\x2a\x61\x35\xe4\x74\xd6\x62\xe1\xf0\x8f\x5d\xc2\xd3\xa5\xaf\x55\x53\xb4\x70\xbd\x9b\x91\xc4\xe8\x47\xc7\x4f\x00\x00\x00\xff\xff\x31\x40\xd6\x3f\xde\x00\x00\x00")

func bindataTemplates05modeltmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates05modeltmpl,
		"templates/05_model.tmpl",
	)
}



func bindataTemplates05modeltmpl() (*asset, error) {
	bytes, err := bindataTemplates05modeltmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/05_model.tmpl",
		size: 222,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598954715, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates06primarytmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xdb\x6f\xd4\xb8\x17\x7e\x9f\xbf\xe2\x10\x41\x27\xa9\xa6\x01\x5e\x8b\xfa\x00\x3f\x2e\xbf\x6a\xb7\x08\xd1\xb2\x48\x8b\x50\x15\x92\x93\x8e\x45\xe2\x04\xdb\x33\x50\x45\xfe\xdf\x57\xbe\x24\x71\xee\xc3\xa5\x5a\x96\x27\xc6\xb1\xbf\xf3\xf9\xdc\xfc\xd9\xad\xaa\x04\x53\x42\x11\xbc\x92\x91\x3c\x62\xb7\x1e\x9c\x48\xb9\xaa\xaa\x13\xb8\x5f\xec\x04\x9c\x9e\x41\xa8\x47\x1e\x3e\x84\xff\x15\x79\x49\x32\x04\x41\x72\x84\x78\x8b\xf1\x67\x20\x29\x54\x55\xf8\x3a\xca\x51\x4a\x20\x79\x99\x61\x8e\x54\x70\x35\x78\x11\x95\x25\xa1\x37\x52\x5e\x14\x09\x66\x40\xa8\x40\x96\x46\x31\x86\xab\x7d\xc4\xe0\x7a\x64\xca\x19\x1c\x35\x60\x95\x5c\x29\x93\xe7\xfc\x8d\xa1\xf5\x07\xde\xfe\x8d\xac\x38\xd0\x06\xe4\x28\xb6\x45\x12\xae\xd2\x1d\x8d\xc1\xaf\xaa\xf0\x2d\xc6\x48\xf6\xc8\xa4\x84\xe3\xc6\x48\x30\xc0\xf7\x03\xf8\x54\x14\x19\x54\x2b\x00\x00\x86\x62\xc7\xa8\x32\x64\x67\x85\xe7\x5c\xcd\x92\x72\x65\xe8\xbd\x42\xd1\xae\xff\x2b\xca\x76\xf8\xab\x09\x0e\x2d\xf8\x41\x0b\x53\xc9\x01\xd3\x16\x27\x74\x78\x1b\xb8\x31\xd6\x97\x82\x11\x7a\x73\xf7\xdc\x1d\x3b\x7e\x00\x3e\xd7\x3f\x37\x80\x8c\x15\x2c\xb0\xbb\xa8\x2a\x92\x42\xc3\xd9\xac\x78\x85\x42\x20\xd3\x29\xd8\xd9\x28\x18\x04\x64\xe0\x73\xcc\x30\x16\x05\x83\x86\x08\x74\x36\x1e\x8c\x63\x4a\xb9\x01\x4a\x32\x6b\xf9\x04\x30\xe3\x08\x2e\x81\x73\x7e\x85\xdf\xc4\x45\xc4\xf8\x36\xca\x1c\x0e\x24\xd1\xbc\x55\x6d\x2c\x38\x3c\xb4\x8b\x15\x8e\x1f\x98\xc5\xa9\x5e\x7b\xef\x4c\xd9\xb6\xfb\x76\x36\xe6\x79\xd6\x27\x3c\x7c\xcf\xa2\x32\xf5\xdd\x40\xbc\x60\xec\x25\xc1\x2c\xd1\x5e\xdc\x80\x47\xe8\x3e\xca\x48\x02\xb6\x74\x21\x55\x1f\x61\xaf\xbe\x9e\xc2\x83\x3d\x88\x02\xca\x88\x71\xb4\xbe\x0a\xe1\x05\x63\xea\x83\xb7\x59\x22\xae\x49\x18\xc2\x1d\xbf\x1b\x20\x9f\x24\xc1\xa2\xef\x8c\xab\x87\x81\x9b\x77\x98\x59\xe5\x8f\xc1\xf7\x90\x7a\x9e\xea\x3b\x4a\x27\xed\x73\xd5\xdb\x88\x20\x05\xdd\x80\x97\xeb\x34\x5e\x37\x09\xba\x86\x6d\xc4\xa1\xef\xc3\xcf\x58\xfb\x51\xdc\x96\x38\x70\xa1\x17\xb4\xa4\x68\x32\x5e\x52\x4f\x93\x84\x21\xe7\x77\x5a\x4e\xd6\xc6\x5c\x33\x38\xfa\x81\x6e\xf0\xff\x88\x6f\xa3\x4f\x19\xde\x7d\x3f\xe8\x58\x1a\xdd\x46\xb7\x1b\x9c\xf3\x37\x85\x9e\xd3\x96\x61\xba\x94\x4d\x70\x36\x51\x65\x4b\x9e\x69\xf3\xbe\xaa\x90\x26\x8d\xc9\x3e\xa5\x67\xb7\x02\x2f\x33\x12\x0f\x92\xd3\xd6\xc9\xc4\x16\xa4\x3c\xd6\xb8\x52\x2e\x10\xa9\x93\x6d\x2c\xff\x7f\x16\xbb\xb7\xbd\x91\x64\x50\x47\xdd\xdd\x27\x42\x63\x65\xfe\x60\x53\x7d\xf3\x4b\xbb\x5f\x2d\x06\x3c\x4a\x32\x4f\x6d\x74\xc2\x13\x7e\xeb\x89\xfa\xeb\xd5\x6d\x89\x33\x2b\x02\xbb\x62\x64\xe5\x2b\x14\xe6\xec\x9f\xe5\x52\x03\x58\x7f\x5e\xba\x3b\xfd\xd5\x6e\xbc\x1c\x6a\x83\xbd\x09\x57\xeb\xc6\xc0\xf4\xc8\xc3\x4b\xca\x20\x0c\x0a\x67\xb1\xd2\x9a\x7e\xed\x44\xad\x1e\x1a\x2b\x25\x92\xc2\xf5\x7e\x03\xc5\x67\x75\x8c\x6a\xa3\xa1\x3f\x88\x53\xf0\x44\x4d\xf8\x1e\x16\xd7\xfb\x29\x12\x7a\xef\x11\x4d\xc0\xa7\x85\xe8\x1c\x54\xaa\x80\x83\x39\xb7\xc8\xe6\x7c\x9b\xa3\xfc\x2c\xe2\xf8\xa3\xb4\x8f\xe6\x78\x5b\xb7\x55\x15\x8b\xe8\x0d\xc2\xfd\xaf\x2c\x2a\x4b\x4c\xb4\x36\xaf\x91\xde\x9b\x31\x65\x9f\x1f\xc6\xbb\x86\x19\xa3\x4b\x52\xad\xfe\x67\x5c\xa2\xfe\x09\xcc\x4b\x23\x82\xb8\xee\x81\x9d\x25\x8a\x09\x3c\x96\xd2\xbf\xde\x07\x0e\xb2\x9e\xd3\x71\x46\x67\x55\xeb\x10\x05\xee\xac\xeb\x74\xc0\xef\x83\xea\x8d\xb7\x61\xea\x51\xeb\x36\x7a\xf7\x97\xd3\xfc\x33\x04\x3f\x43\xda\x3a\xfe\x69\x26\x90\xd1\x48\x68\x4c\x1e\xc0\x63\x07\xe3\x04\x4c\xa7\x38\x74\x85\xba\x63\xe9\x6b\x55\x54\x4f\xd1\x22\x84\x43\x5a\x30\xb8\x21\x7b\xa4\x46\x9a\x84\x33\x15\x44\x68\x82\xdf\xa6\x8c\xc1\xa3\xff\x46\xb4\x7b\x8a\xef\xa7\xe2\x3d\x1a\xeb\x5a\xbd\x1d\xd6\xb0\x7a\xf7\x92\x38\xa2\xb4\xe7\x9c\xe6\x98\x3a\x88\xa4\x86\x30\xbd\x7a\xf4\x84\x77\x10\x7b\x77\x01\x0d\x36\x79\x1f\x28\x59\xb1\x27\x09\x26\x8d\xa8\xb5\x57\x81\xf5\x83\xab\xb5\xce\x21\xb1\xc5\xde\x65\x41\x8d\x6a\x61\x6c\x66\x79\x9b\x86\xc0\xde\x80\x76\x7a\x57\x73\xba\x8d\x86\xe9\xfb\xd2\x97\x7f\x25\x22\xde\xc2\xb5\xb6\xa3\xf3\xa7\x4d\x63\xb5\xac\xbd\x14\xda\xb6\xd7\xa2\xba\x8d\xaf\x97\xe0\x35\x97\x38\xe2\xa8\xc2\xd1\x2c\x92\xf2\xf4\x27\x52\x7e\xba\x83\xd4\xec\x7f\xdb\xb4\x1f\x23\xe8\xa6\x7f\x93\xe5\x09\xa6\xd1\x2e\x13\xa7\x0b\x29\x78\x67\xe9\xd7\x5e\xcc\xbc\x0d\x38\xc5\xd1\x51\xbd\x94\x64\x33\x0a\xeb\x0e\x1f\x33\xa6\xec\x58\xc9\x65\x04\xff\x9c\xda\x32\x6b\x2e\xbb\xcf\x19\x22\x2f\x9d\xb7\x04\x8b\xf2\x46\x5d\x38\x19\x78\x1a\xd9\x9b\x40\x68\x65\xd4\xdc\x73\x02\x32\xd6\x3f\xc1\x7c\x75\xee\x5b\x13\xdd\xfe\x3d\x6a\x28\x70\xce\xb3\x25\x15\x33\xd0\x6f\xbe\xc8\xcb\x60\xbc\x59\x2c\xa3\x09\x5b\x1b\xdd\x74\x1d\xa8\xa3\xc9\x87\x9b\x77\x34\x1f\x3e\xdd\xa4\x87\xbe\xdc\x34\xab\xf5\xdb\xcd\x87\x8f\x9f\x6e\x85\x8d\x75\x10\x3c\x59\xf2\xf9\xef\xfa\x7c\x33\xe6\x35\x25\x89\x87\xcf\x36\x13\x22\xb9\xa7\x6d\x66\xfa\xe7\x01\x9a\x57\xef\x74\x96\xde\xe1\x60\xf3\x58\xd3\x67\xd6\x30\x66\xff\xee\x43\xd2\x25\x8a\x97\xac\xc8\xdd\xee\xa5\x7e\xdb\xa2\x77\x1e\xd1\x0f\xe8\x57\x6a\xa1\x6f\xc8\x0e\x3a\x60\xb7\x53\x91\xd4\x74\xe1\xc9\x07\x93\x19\xff\xbc\x26\x99\x46\x74\x0f\x00\x85\x61\x00\x45\x01\x1c\x05\xa4\xac\xc8\x3d\x37\x21\xd5\x40\xad\x5d\xf5\xcc\xd0\x77\xd8\xd7\xa4\xee\x75\x94\xea\x90\xcb\x73\x14\x83\x12\xd3\x64\x5e\x17\xe2\x22\x12\xf1\xd6\x25\x65\x08\x25\x05\x72\xba\x16\x90\xab\xcf\xfa\x44\x22\xb4\xdc\x89\x53\x78\x70\xe5\x6d\xcc\x1c\x97\xe7\x71\xd7\xc3\x67\x70\xac\x98\xf7\x13\xcd\xc6\x4e\xb0\x5d\x2c\xda\x12\xe7\x70\x83\x82\x6b\x1b\xe6\x90\x50\xa7\x1d\x2f\x31\x26\x29\xc1\x04\xd6\x3a\x3b\xd6\x07\x84\xb2\x87\xeb\x9b\xb4\x3a\x76\x37\xee\xcc\x09\xc0\x77\x1e\x00\x7a\x4f\xec\x56\x75\x19\x1d\x76\xae\xee\x0a\x1f\x1e\x7d\xec\x2b\x2d\x83\xaf\x54\x96\x03\x3b\xd4\x56\x0e\x88\x94\xa7\x4a\xfe\x35\x83\xce\x13\xd3\x92\x3c\x76\x17\x6c\x86\xb7\xde\x29\x55\x42\x49\x36\xff\x52\x7e\x6e\xea\x51\xa7\x83\xde\xc0\x98\x42\xd1\xc6\x95\x42\xe1\x6b\x47\xa5\x5a\x45\xd2\x11\x24\x2d\x4d\x3f\xa8\x13\x44\xae\x56\xe6\x8c\x7f\x8b\x59\xa4\x9a\x03\xaf\xff\x54\xf6\x27\xe1\xa2\x1e\xd4\x0c\x38\x64\x84\x0b\x0e\x3b\x4a\xbe\xec\x10\x98\xfd\x66\x4c\xf1\xe5\x1c\x18\x02\xfa\x01\x7c\xf8\x38\x54\x36\x9d\x67\xb3\x91\x09\x95\x6e\x39\x36\xd0\x0d\x0d\x15\xeb\x77\x9a\x5a\x8f\x75\x1d\xf3\xa3\xaa\x6a\x66\x4b\x59\xc9\x4d\x13\x20\xe5\x86\xb6\x8b\x35\xff\xfb\x27\x00\x00\xff\xff\xd9\x04\x47\x41\x59\x1c\x00\x00")

func bindataTemplates06primarytmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates06primarytmpl,
		"templates/06_primary.tmpl",
	)
}



func bindataTemplates06primarytmpl() (*asset, error) {
	bytes, err := bindataTemplates06primarytmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/06_primary.tmpl",
		size: 7257,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1599069382, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates07fieldertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x5b\x8f\xdb\xb8\x15\x7e\x9f\x5f\x71\x6a\x6c\xc6\x92\xe1\xc8\xc9\xab\x17\x29\xb0\x97\x74\x1b\x14\xc9\x06\x75\xda\x02\x1d\x0c\x06\x1c\xeb\x78\x4c\xac\x4c\x79\x49\x5a\xbb\x53\x41\xff\xbd\x20\x45\xeb\x42\x51\xb7\x38\xce\x78\x17\xe3\xb7\xb1\xc4\x73\xfd\xce\x77\x0e\x69\x4e\x9a\x86\xb8\xa1\x0c\x61\xb2\xa1\x18\x85\xc8\x27\xf0\x32\xcb\xae\xd2\xf4\x25\x7c\x13\x1f\x24\x2c\xdf\x40\xa0\xbf\x59\x2c\xe0\x87\x78\xb7\xa7\x11\x82\xa4\x3b\x84\xf5\x16\xd7\xbf\x00\xdd\x40\x9a\x06\x1f\xc8\x0e\xb3\x0c\xe8\x6e\x1f\xe1\x0e\x99\x14\x90\xa6\x6a\x75\xf0\x9e\xec\xf7\x94\x3d\x64\xd9\xdf\x72\xe1\x40\x99\x44\xbe\x21\x6b\x0c\xae\x12\xc2\xe1\xae\xf5\xc5\x37\x70\x5d\x08\x4e\xb3\x2b\xa5\xfe\x27\x94\xfa\xa9\xf8\x2e\x0c\x39\x0a\x01\x0f\x28\x05\xc8\x2d\x02\x31\x5f\xc4\x1b\xd8\xf3\x38\xa1\x21\x86\x30\xd5\xfe\x4c\x83\xab\xcd\x81\xad\xc1\x4b\xd3\xe0\x9f\xb8\x46\x9a\x20\xcf\x32\x98\x15\xb2\xfd\x86\x58\x4f\x2f\x54\xaf\xd4\x2d\x5b\x49\x7e\x58\xe7\xaf\xfa\xe0\x15\x8e\xa4\xd9\x1c\x90\xf3\x98\xfb\x90\x5e\x01\x80\xf8\x8d\xca\xf5\x16\xb4\x90\xe0\x1d\x0b\xf1\xf7\x9b\x57\xb7\xf9\x23\x48\x53\x4e\xd8\x03\xc2\x37\xb9\x0a\x15\xdb\x5c\xb5\x8e\xb0\x7a\x63\x4d\x04\xaa\x98\x54\x96\x67\xd9\x12\x16\x8b\xf2\xcb\xdc\x6e\xfd\xb6\xfa\x70\x94\x07\xce\x54\xb4\xb4\xb9\xa5\x93\x81\xb5\x62\x0e\x8c\x46\xc6\x0c\x64\xa1\x52\x99\x4b\x31\x12\x18\x8d\x8c\x27\x22\xf8\x0f\x27\xfb\x8d\x67\x47\xe0\x2d\xe7\xef\x58\x42\x22\x1a\xbe\x8f\x43\x8c\xb4\xe9\x73\x98\x14\x21\xa7\xf9\xc3\xdc\xf7\x25\x4c\x5f\x88\x29\x6c\x62\x0e\x0f\x34\x41\x06\x3b\xb5\x66\x59\xc2\x65\x3a\x99\x43\x69\x9f\xe7\xfb\x57\xf5\x34\xff\x17\x79\xfc\x6f\x12\x1d\x70\x1c\xae\xc4\xe0\x84\x17\x0a\x4e\xcc\xf8\x57\x4f\x79\x9a\x2e\x66\x56\xfa\xd3\x94\x6e\x00\x7f\x35\x6a\x02\xe5\x1a\x4c\x18\x8d\x26\x59\xa6\x1f\x1d\xa5\x8b\x8f\xb1\xf6\x23\xcb\x3c\x8d\x02\xf5\xd8\x3c\xfb\xf4\xb8\xc7\xd6\xb7\x7d\xf3\x76\x63\x95\xd2\x64\x56\xb9\xd5\x1f\x57\x6a\xf8\xcd\x16\x85\xdb\x35\xe3\x6b\xc2\x1c\x40\xd5\x7f\x85\xb8\x21\x87\x48\x2e\xed\xe5\x5f\x18\xb8\xc0\xc8\x0e\x73\xf4\x36\x10\xaa\xb4\x66\x06\xa7\xef\x44\x81\xa2\x91\xcc\xd7\x07\xd0\x8a\xe4\x61\xd0\xbc\x8f\xe3\xe8\x89\x31\x69\xa7\xf2\x9d\x68\x4d\x66\x8d\x75\x36\x24\x12\xf8\xb5\xd2\x97\x27\x6e\x75\x6e\x82\x69\x28\x18\x94\x45\x1d\x82\x27\x63\x94\x9e\xe6\x01\x6f\xec\x2a\x1d\x51\xa0\x5f\xb3\x36\xeb\xbc\x50\xb6\x94\xbf\x13\xb1\x25\xf7\x11\x6a\xf9\x9f\x91\xf5\x21\x5d\xa5\xa9\xe3\x8f\xd7\x59\x1c\xec\x5f\xa3\x6c\x3d\xf0\xf5\x82\xe5\x8d\x0a\xbe\xb1\xd3\xc5\xd6\x47\x4e\x28\x73\xd6\x44\x53\xd3\x9e\xef\x1f\x25\xae\x22\xba\xc6\xda\x3b\x15\xd9\x42\x72\xca\x1e\xbc\x96\x1e\x36\x2b\x7b\x57\xb7\xfd\x7e\xdd\x40\x35\x0b\x63\x24\x5a\xb5\x9e\xaa\xce\xa1\x4d\xad\x7b\xfa\x51\x6d\x3a\x78\x56\x3b\x53\x41\xfd\x71\x0b\xa9\x6c\x87\x7f\x8e\xa1\x7c\x75\xc6\x44\xaf\x46\x26\x7a\x0e\x49\x6e\x45\x99\x6d\x1f\x3c\xe4\xfc\x02\xb8\x33\xe6\x4d\xfa\xf4\x08\x0b\xcb\x6f\x73\x02\xf3\xca\x61\xf9\x3b\xce\xc9\xe3\x8a\xfe\x0f\xe1\x95\xef\xdb\x5c\x9b\x7b\xea\xe4\xd3\x21\x3d\xbb\x4a\x2c\x56\x67\x1c\x42\xbf\x74\x03\x77\xc9\x1c\xe2\x5f\x54\x84\xb4\x29\x81\x67\xed\x17\xfc\x6f\xd5\xe3\xf1\x96\xdd\x25\xbd\x86\xe9\x80\xaa\xd8\x79\x2c\x96\x56\x00\xfd\x66\x98\x2b\x76\x2f\x16\xf0\xc3\xf1\x78\x82\x4a\xa0\x02\x58\xcc\x5e\xee\xcd\x8b\xb9\x23\xc3\x9c\xfc\x9e\x08\x3c\xcd\xd1\xeb\x41\x9e\x96\x8c\x5f\x40\x49\x39\xed\xb9\xf0\x64\x47\xc2\xca\x58\xfe\xf4\x47\x22\xc9\x3d\x11\xf8\x21\x96\x1f\x0e\x51\xe4\xf9\x70\x7d\x7d\x2a\x9a\x5c\x13\xe0\x67\x22\xab\xde\x33\x9b\x4d\x9d\x6e\xe0\x01\x19\x72\xba\xb6\x32\x73\x73\x5b\x2d\x7b\x67\x4e\x6a\x5b\xd1\x4a\x75\x35\xfa\x77\xff\xb4\x03\x27\x4d\x3c\xea\x23\x71\xb7\x57\xe6\xa7\xa9\xd0\x4e\x56\x8a\x07\x5e\xeb\xa3\x2d\x7b\xc5\x20\x50\x29\xb1\xb5\x95\xb6\x67\x76\xc0\xd5\x47\xd1\xfe\xdd\x1c\xa8\xc4\x9d\x32\x29\xa7\x40\x13\xe6\x46\x14\x5b\x66\x1e\xba\x81\x08\x99\x67\x56\xf9\xf0\xd7\x12\x15\x45\xa8\xb3\xcc\x11\x88\x81\x7b\x81\xb2\x13\x54\x9b\x98\x8c\x63\xd8\x11\xf6\x98\xa3\x40\x68\x4f\xe4\x16\x8b\xa6\x66\x45\x68\xe2\x77\xc6\x66\x48\xd6\x4f\xcf\x7c\x42\x78\x9e\xfd\x96\xd4\x7f\xa1\xc4\x8f\x49\x3e\x1d\x91\xfc\x1a\x21\xd5\x62\xa7\x89\x89\xe6\x67\x14\x2a\x8f\x7b\x0c\x57\x15\x07\xfd\xb6\x58\x96\x2c\xab\x8c\x18\x4c\xb2\xd0\x05\xc7\x56\xd1\x5a\xb2\x30\xe6\x29\xe1\x6f\x23\xdc\x19\x0b\xbb\xf4\xa8\xd0\x39\xb5\xc0\x38\x6e\xa9\x2d\x19\x84\x36\xf5\x99\x0d\xc1\x80\x72\x89\x85\x5e\xff\xbb\x73\xb8\x4b\xfc\x16\xab\x3a\xe2\x09\x03\xb1\x68\xec\x38\xd5\x0c\x27\xd0\x06\x1a\x39\x26\xb6\x03\x02\xe6\xdf\xd0\xdb\xe6\x6c\xf2\xe5\x82\xd6\x2f\xbe\x3b\x18\xad\x4f\xd7\x31\x93\x94\x1d\xb0\x87\x19\x8c\x91\x24\x92\xc8\x19\x91\xba\xe8\x84\xaa\x1a\xaf\xf8\x4a\x80\x55\x94\xee\x72\x2e\x89\x00\x7f\x05\x2f\x42\x06\x9e\x25\xd6\xf7\xe1\x55\xc7\xda\xe3\x32\x7b\x15\xbc\x76\xae\x29\x26\xba\xe2\x75\x90\xda\xf8\x63\x27\xb0\x22\x1d\x0c\x63\x09\xaa\xe6\x7a\xdb\x06\x78\xd5\x4e\x10\xd0\x80\x9d\xe2\x95\x3e\xe8\x95\x43\x80\x15\x5c\xa5\xca\x6b\xaf\x0e\x13\xe3\x06\xdd\x7c\x9d\xaa\xd5\xbd\xe6\x5c\xfc\x71\x43\x6f\xdb\xba\x19\x7c\x21\x66\x78\xba\xd0\x39\x3a\x9b\xca\xf2\x59\x63\xd9\xa2\xf3\x29\xa9\xe6\xa4\x91\xaf\x7e\xee\xab\x8a\x7d\x09\xd3\x17\x9f\xa6\xf6\xec\xf7\x42\x4c\xcc\x81\x80\xeb\x40\x78\x70\xa0\xcd\x69\xc1\x5d\x52\xd2\x83\xd4\xec\xe7\x1a\x12\xcc\xe1\x41\x8d\x36\xd4\x3a\x9b\x48\x5c\x8a\x8e\x07\x0b\xb5\x57\xb3\x6c\x79\x6e\xaa\x79\x26\x9a\x67\xa2\xb9\x54\xa2\x69\x87\x79\x5b\x01\xcd\x86\x56\x50\x57\x3d\xcc\x9e\x0b\xa2\x23\x29\x6e\xfe\x6c\x79\x62\x76\x9c\x8d\x5f\x00\xab\x9f\x0b\x6b\x07\x59\x05\x7e\x4d\xb7\xfa\x4f\xb7\x9a\xe1\xa8\xc2\xb8\xb2\xf3\xac\xf7\x81\xe3\x24\x8b\x21\xfc\x96\xbf\x93\x4f\xb2\x41\x45\x8c\xe9\x2f\xc7\xe7\xaa\xb3\xf4\x48\x6d\x39\xc4\x34\x12\xda\x4e\x2f\x87\x6c\x9f\x7a\x0e\xb0\x1a\xa5\xff\x79\xa7\x18\x69\xea\x04\xf5\xa8\x53\xc9\x0e\x3e\x72\x1f\x89\xf4\x9f\x59\x1a\x6c\x34\x8f\x2e\x6b\x5b\x9f\x23\x4b\x58\x3b\x19\x6b\xfb\x53\xdf\xf6\xb8\x97\xbc\x76\x42\x65\xfc\xa6\xc7\x0d\x07\xb3\xdb\x71\xa9\x6e\xdb\xf3\x5c\x16\x46\x5a\xa8\x6f\x14\x4a\x5a\x11\xe2\x22\xb7\x4e\x84\x5c\x08\x9f\x39\xc3\x52\x1b\x67\x0d\x00\xec\x79\xb6\x63\x8e\x75\x42\xa4\x2a\x7f\xd0\x14\x3b\x16\x3c\x43\xea\xf8\x72\x81\xe3\xf6\xd6\x8e\x59\xef\xe0\x32\x6a\x60\x19\x1f\x0f\x57\xd7\xea\x6a\xde\x17\x02\xf2\x46\xd5\xb5\x5f\x99\x38\x7e\xb3\x98\xc1\xa7\x9f\x7f\xfc\x79\x09\x02\xa5\x56\x26\xd6\x84\x31\xe4\x40\xc4\xb1\x3c\x94\x45\x3a\x2d\xd6\xbd\xc4\x34\xed\xbc\xf0\xf1\xd4\xc1\x68\xb9\x22\xa2\xff\x3a\xff\x1d\xac\xca\x1d\x02\x65\x75\x79\x57\x44\xcb\x6c\xbb\x46\x00\x95\x9b\x93\x2b\x94\x1f\x39\xdd\x11\xfe\xf8\x0f\x7c\x5c\xe9\x3b\x3b\xbd\xf7\x0a\xb4\x61\xe5\x4f\xfe\xb0\x43\xb9\x8d\xc3\xfe\xcb\x05\x1f\x09\x17\xf9\x85\x2c\x51\xd1\x34\xe2\x96\x41\x7e\xa7\xe8\xa2\x2e\x97\x54\x99\x26\x77\x6a\x85\xd2\xa6\xd6\xe2\x06\x8a\xf1\x40\x07\x82\xc3\x44\x7b\x35\x71\x2d\xb7\xea\x47\x57\x80\xf9\x05\xbe\xa0\xb5\x4f\xf8\xbb\xfc\x17\xdb\x11\x2e\xb6\x24\xaa\xfe\x16\xad\x1e\xbc\x2f\xbe\x7e\x69\xc9\xea\xeb\x03\x09\xe1\x70\x5f\x8b\x43\xc9\x7a\x57\x36\x33\x5e\xab\x37\xbb\xdb\x5f\x85\x44\xbb\xf9\xb1\x83\x43\xd4\xb4\xc6\x79\x2e\xa5\xc5\x7e\xa5\xa6\xaa\xbf\x57\x5d\xa1\x25\x28\x82\xa8\x02\xe7\xdd\xdc\xde\x3f\x4a\xf4\x74\x6e\x7c\xff\x5b\xad\xf8\x2f\x1d\x97\xe8\x26\x93\xfe\x5b\x41\x35\x16\xaa\x93\x8f\xfd\x7b\xe9\x34\xc7\xba\xaa\xec\x64\x0a\x32\x86\xbd\x02\x8b\x01\x4e\x00\x6f\x39\x5f\xc2\x8b\x64\x32\x1f\x72\x9f\x09\x39\x77\xd1\xf6\xbd\x9c\x9f\x33\x9c\xef\x2b\xc1\xf4\xed\x14\xfe\xb9\x22\x69\x1f\x4e\xb8\x2b\x6a\xc8\x64\xd0\x33\x18\xd4\x2f\x55\xde\x4b\x7f\xee\xbc\x15\x39\x90\x22\x72\xa6\xf9\xa9\x49\x54\xcf\xfc\xf0\xcc\x0f\x43\xf6\x0a\x45\x43\xcb\xd5\xaa\x5e\xa6\xe2\xdb\xd2\xca\x06\x5c\xe1\x15\x95\xc9\x23\xdf\xbc\x1e\x05\x7b\x02\x23\x5c\xcb\x98\x43\xcd\x1d\xa8\xb8\xe2\xf7\x76\xd0\x91\xf5\x57\xab\x36\x93\x96\xfe\x21\xf7\x58\x81\xe5\x55\x2a\xbd\xde\x15\xb8\xa4\x45\xa6\x1d\x16\x37\x84\x5a\x11\xf4\x21\x96\xf9\x68\x31\x37\xff\x42\xe8\x40\x4f\x18\xa3\x60\x53\x09\x5b\x92\x1c\x51\xa3\xa6\x72\x89\x3c\x98\xf4\x8e\xb5\x17\x77\x1f\xb6\xb0\xf3\xff\x01\x00\x00\xff\xff\x91\x2f\x13\xd3\x3c\x39\x00\x00")

func bindataTemplates07fieldertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates07fieldertmpl,
		"templates/07_fielder.tmpl",
	)
}



func bindataTemplates07fieldertmpl() (*asset, error) {
	bytes, err := bindataTemplates07fieldertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/07_fielder.tmpl",
		size: 14652,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1599063149, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates08singlerelationertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x5d\x8b\xd3\x4c\x14\xbe\xcf\xaf\x38\x94\x7d\xb7\x4d\x49\xd3\xf7\xba\xd2\x1b\x17\x95\x82\x2b\xb2\x5d\xf4\x42\x44\x86\xe4\xa4\x3b\xec\x64\x26\x4c\x26\x5d\x65\x98\xff\x2e\x33\x93\x4c\x9a\xb4\xba\xb5\xa8\x98\x8b\xd2\xe6\x7c\x3c\xcf\xf9\x78\x4e\xb5\xce\xb1\xa0\x1c\x61\x52\x53\xbe\x63\xb8\x90\xc8\x88\xa2\x82\xa3\x9c\xc0\xc2\x98\x48\xeb\x05\x5c\x89\x46\xc1\x6a\x0d\xa9\x7b\xb3\x5c\xc2\x8d\x28\x2b\xca\x10\x14\x2d\x11\xb2\x07\xcc\x1e\x81\x16\xa0\x75\xfa\x8e\x94\x68\x0c\xd0\xb2\x62\x58\x22\x57\x35\x68\x6d\xa3\xd3\x5b\x52\x55\x94\xef\x8c\xd9\x3a\x98\xbb\x80\x02\x94\x2b\x94\x05\xc9\x30\x8d\xf6\x44\xc2\x97\xe7\x23\xd6\x70\x1d\xa0\xb4\x89\x2c\xa1\x37\xa8\x3a\x87\x5b\x91\x23\xbb\x94\x41\xd1\xf0\x0c\x66\x5a\xa7\x77\x98\x21\xdd\xa3\x34\x06\xe6\x01\x2c\x3e\xc2\x99\x75\xed\xb2\x5e\x23\x18\x25\x9b\x4c\xbd\xa6\xc8\xf2\xd8\xa6\x1c\x5a\x5d\x74\x02\x28\xa5\x90\x31\xe8\x08\x00\xa0\x7e\xa2\x2a\x7b\x80\x2e\x65\xba\xe1\x39\x7e\xfd\xf4\xff\xe7\xd6\xac\xb5\x24\x7c\x87\x70\x15\x30\xed\x48\x3a\x3a\xb5\x9d\x8d\xd6\xb4\x00\x2e\x54\xef\x93\x6e\xea\x2d\xa3\x19\xba\xc9\xd9\x2c\x19\xa9\xd1\xb6\x64\x88\x62\xcc\x0a\x96\xcb\xc1\x7b\x5f\xb2\x8b\xf1\xe8\xb4\x18\xa4\x7d\x2f\x5c\xdf\x42\x62\xfb\xb8\x25\x70\x85\xf6\xfd\x4b\x8f\x93\xc2\x7a\x0d\x9c\xb2\xb6\xae\xee\x91\xa8\x1a\xc9\xad\x21\xb1\x1f\xc1\x66\xec\x0a\x22\xcf\x0f\x70\x5a\xd7\x93\xe5\x1e\xf0\xba\xd6\xda\xc5\x9d\xc3\xa9\xc7\x74\x41\xbe\x9b\xed\x17\xf7\x3a\xc7\x82\x34\x4c\xad\xc6\x24\x1c\x5f\x37\xc7\x3a\xfd\x28\x49\x55\x1c\xcd\xfa\x95\x94\x1b\xbe\x27\x8c\xe6\xdd\xb0\xdc\x56\x24\x30\xa9\xa4\xd8\xd3\x1c\x73\xa0\xde\x1e\x66\xbf\x82\xe9\x7f\xf5\x14\x0a\x21\xa1\xb4\x9b\x62\x7f\xdf\x4f\x27\x49\x70\x48\x60\xb0\xa4\xb1\x63\x65\x22\xaf\x86\xed\x5f\x52\xc3\x18\xe7\x3c\x35\x24\xbe\xa4\x23\x26\x2e\x45\xec\x5b\xf9\xdb\x14\x11\x85\xdd\xfd\x33\xb2\xa0\x45\x5b\xcd\xc9\x95\x7e\x6e\x41\x47\xce\xe7\x28\x67\x40\xe6\x25\xa9\xf1\xfe\x5b\xe5\xef\xe0\x30\x17\xb2\x1a\x2f\x85\x38\x54\xdf\x40\x11\x3f\xd0\x6b\x2f\x55\x70\xb0\xee\x0c\xf4\x35\xdb\xbc\x76\x32\x33\x25\xde\x8a\x27\x94\x37\xa4\x44\x06\x43\xdc\xd8\x0b\x6e\x14\x64\x65\x29\x1e\x6d\xac\x6b\x72\x3a\x9b\x9f\xae\x3e\x7e\x61\xdd\xc6\xbd\x3f\xb3\x9d\x3f\x1f\xd1\xbc\xbf\x21\x87\xd4\xce\xe8\xc5\xf8\x50\xfc\xe2\x8d\xf8\x40\x58\x83\xa7\x6e\x84\xdf\xb7\xbd\x35\xfb\xb3\xe0\xce\x44\x90\xc0\x71\x95\x93\x56\x71\xf1\x25\xe7\xed\xdf\xb9\x6c\xe1\x6f\xe0\x7b\x00\x00\x00\xff\xff\x73\x95\xb7\x0b\xb4\x08\x00\x00")

func bindataTemplates08singlerelationertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates08singlerelationertmpl,
		"templates/08_single-relationer.tmpl",
	)
}



func bindataTemplates08singlerelationertmpl() (*asset, error) {
	bytes, err := bindataTemplates08singlerelationertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/08_single-relationer.tmpl",
		size: 2228,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1599063149, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates09multirelationertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x4c\x8d\x6d\x2c\x05\xb2\x92\x5e\x0d\xb8\x40\xba\x68\x8b\x00\x49\x51\x6c\xb6\xed\xc1\x30\x16\xaa\x34\x4a\x88\x48\xa4\x40\xd1\x4e\x17\x04\xff\x7b\xc1\x0f\xc9\xa6\x24\x6f\x94\xac\xb3\x48\x8a\xe6\x14\x8b\xe4\xcc\xf0\xcd\x9b\x47\x72\xa4\xcc\x30\x27\x14\x61\x5a\x6e\x0a\x41\xe6\x1c\x8b\x44\x10\x46\x91\x4f\x61\xae\xd4\x44\xca\x39\xbc\x63\x1b\x01\x8b\x25\xc4\xe6\xcb\xd9\x19\xbc\x67\x65\x45\x0a\x04\x41\x4a\x84\xf4\x0e\xd3\x7b\xc8\x19\x07\x71\x87\x20\xa5\x9e\x1d\x5f\x27\x55\x45\xe8\xad\x52\xd7\xda\xea\x87\xd6\x28\x10\x2a\x90\xe7\x49\x8a\x40\xca\xaa\xc0\x12\xa9\x30\x43\xf1\x64\x9b\x70\xf8\xf4\xe8\xfa\x25\x9c\x48\x19\xff\x96\x94\xa8\x94\x54\x13\x1d\xcd\x45\x96\x35\x13\xae\x59\x86\xc5\xce\x72\x3d\x3e\x9c\x78\x92\x6f\x68\x0a\x81\x94\xf1\x07\x4c\x91\x6c\x91\x2b\x05\xa7\xad\xaf\xb0\xe7\x26\x68\xa0\xd2\xb3\x7c\x2f\x37\x82\x6f\x52\xf1\x0b\xc1\x22\x8b\xa0\x34\x31\xf5\x02\xd1\x5f\x43\x40\xce\x19\x07\x39\x01\x00\xa8\x1f\x88\x48\xef\xa0\x31\x1b\x5f\xd2\x0c\xff\x59\x9d\xaf\xdd\xb0\x94\x3c\xa1\xb7\x08\xef\x5a\xbf\x3a\x25\x4d\x48\xb5\xce\x8d\x94\x24\xdf\x8d\xc7\x97\xf5\x4d\x41\x52\x34\x59\xd3\x16\xd2\xa4\x36\x09\xf2\x3d\x28\xb5\x80\xb3\x33\xef\xbb\xdd\xb2\x59\x63\x3d\xef\x8c\xea\x21\xed\x38\x10\xec\x8a\x3d\x20\x7f\x9f\x94\x58\xec\xf9\xfc\x29\xa9\xf1\xe3\xe7\x0a\x43\x1b\x8f\xb7\x4e\xa9\x08\xd8\xbd\x5e\x6d\x30\x89\x83\xd3\x7d\xa7\x7a\xe5\x1f\xf4\x81\x27\x55\x85\x99\x36\xa1\x54\xd8\x86\x40\x72\xf8\x8e\xdd\x3b\x24\x9a\x3f\x8e\x62\xc3\xa9\xc5\xb0\x8e\xff\xe2\x49\x95\x07\x5d\x9c\x7f\xe6\xfc\x92\x6e\x93\x82\xb4\xc9\xfb\x33\x29\x36\x18\xc1\xb4\xe2\x6c\x4b\x32\xcc\x80\xd8\x71\xd8\xea\x01\x10\x9f\x2b\x5c\xc0\xec\xfb\x8f\x33\x68\x49\x9d\xeb\x4c\x2e\x60\xd6\xc7\x68\x36\x75\x09\xde\x85\xba\x8f\x5b\x27\x1d\xbf\x33\xc3\xb7\x36\x21\x6e\x67\x2e\xe6\x1d\xef\xe2\xbe\x23\x58\x2e\x81\x92\xa2\x83\x80\xc0\xb2\xd2\x78\xee\xcf\xb7\xd0\x49\xe5\x4d\x1c\xe7\x02\x4e\xb4\xc1\xc1\x9d\x00\xd2\xcc\x8b\xfb\xe0\xe6\x94\x3a\x95\x12\x69\x66\xd2\x3f\xc6\xa9\x4e\x38\xcd\x82\x43\x06\x9f\x66\x2f\xb2\x81\x51\x26\x3c\x5b\x9a\x5c\x0d\x01\x86\xec\xfa\x34\x0d\x5d\xc1\xb9\x3d\xb7\xff\x98\xcf\x19\xe6\xc9\xa6\x10\x8b\xc9\xd7\xd1\xd0\xa9\x43\x9f\x86\x4d\x28\x8e\x84\x0d\x07\xad\x8c\xcc\x5a\x41\xea\x30\xcf\xc6\xe6\x42\xa1\xa4\x98\x58\x6d\xfc\x15\x85\x27\x5a\xf5\x0b\x89\x63\xcf\xcf\x38\x75\x0c\x21\x28\x6d\x58\xab\xf5\xa0\x42\x46\x1a\x56\x0b\x6d\xf8\xfa\x65\xb2\x63\x76\x80\x74\x5e\x09\xe9\xd4\x7e\x6a\x0e\x88\xc5\x12\x6c\xe0\xa3\xaa\xc6\x97\x01\x87\x61\x5b\x4a\xf6\xf7\x17\x95\x69\x0e\x58\xd4\xd8\x0b\x87\xbc\x48\x1c\x27\xc1\x18\x63\x2b\xb2\x0e\x0f\x06\xab\xeb\xf4\x39\x55\x49\x89\xe5\xd0\xd1\x4b\xb3\xb6\xa5\x69\xb6\x68\x4b\x75\x1a\xb5\x13\xb4\x0a\xed\x6d\x76\xa0\x44\x1b\x68\x0e\x97\xea\x85\xf8\x46\xb5\x7a\x21\xc6\x5e\x65\x88\x2e\x04\xed\x6a\x57\xb7\xff\xbd\xaa\x3d\xfa\x21\xfd\x15\x4c\x34\x7b\x88\x60\x6a\x81\xd7\xd7\x70\x96\x43\xc5\xea\x9a\xfc\x5d\xa0\xad\xd3\x18\xae\x1d\x05\x9d\x39\x77\x3c\x44\x60\x92\x36\xb0\xf5\xe9\x70\x91\x75\x0f\x78\x92\xbb\x7c\xff\x08\x05\xd2\x23\x1d\xcf\x21\xcc\xe1\x87\xb7\x88\x8f\x0b\x72\xfc\xe5\xe2\xa4\x45\xe5\x10\x6e\xc1\x53\x80\x3b\x6c\x26\x74\x56\x56\x06\x84\xb5\x95\x94\x37\xa5\x94\x9d\xdd\x3f\x55\x2d\xaf\x90\xbe\xbc\x52\x5e\x21\x1d\x7d\xa5\x21\x54\x44\xff\xab\x9f\xcf\xae\xf3\x1d\x2f\x1f\x13\x1e\xb7\xe2\x88\xa2\xf3\xec\x9a\x38\x7f\x3d\x77\x07\x4b\xfb\x9b\x6f\x74\x9f\xef\xf9\x79\x52\xb7\xa3\x86\x38\x8e\xdf\x72\xc7\xa3\x79\x57\x97\xc9\x3d\x06\xfa\x69\xf2\xf8\xcd\x7e\xf0\x39\x39\xd4\xd4\x88\x0c\xb3\x2d\x4e\x7b\xf7\xdd\xce\x23\xf4\xb1\x1e\x8b\x67\x34\xec\xdf\xe3\x7b\xcf\x8a\xe6\xbe\xd6\x6d\x0b\x1c\xa9\x41\x03\x87\x9a\x34\xf0\x6a\x1b\x35\xbe\x0e\xb5\x6a\x38\xe2\x74\xf7\xe0\xde\x29\xa4\x0f\xe5\xb0\x1c\x1a\x56\x32\x2a\x08\xdd\xa0\x1f\x89\x63\x4f\xaf\xbf\xb3\x22\x6b\x58\x1e\xa3\xab\xf1\xdc\x0e\xd5\xb3\x7a\x47\x83\x2f\xcc\x91\x96\x3a\x86\xf6\x85\xfa\x15\xf4\x64\xea\x2f\xf7\x64\xda\xed\xdc\x08\x4e\xe8\x6d\x10\x1e\xec\xcf\xb8\x3c\xfd\x1b\x00\x00\xff\xff\xd7\x61\xce\x82\x82\x17\x00\x00")

func bindataTemplates09multirelationertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates09multirelationertmpl,
		"templates/09_multi-relationer.tmpl",
	)
}



func bindataTemplates09multirelationertmpl() (*asset, error) {
	bytes, err := bindataTemplates09multirelationertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/09_multi-relationer.tmpl",
		size: 6018,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1599142075, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates10modeldefinitiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x0e\xc2\x30\x0c\x45\x77\x4e\xf1\x95\xdd\x3d\x06\x1b\x0b\x9c\x20\x52\x7e\x90\x25\x27\xad\x42\x18\x50\xd4\xbb\xa3\x06\x94\x01\xd1\x6e\xb6\xff\xfb\xcf\xad\x09\x02\xa3\x66\xc2\xa5\x39\xd0\xa4\x6f\x5a\x75\xce\x0e\xb2\xae\xa7\xd6\x50\x99\x16\xf3\x95\x70\x4b\xd1\xe4\xcb\xcb\x61\x42\x8f\x34\x62\x3a\x2b\x2d\xb0\xe0\x97\x8d\x9f\xfb\x60\x05\xcc\x61\xb4\x6e\x9a\xef\xc6\x2b\xcd\x6f\xaf\xfe\xd4\x1f\x1d\x90\x32\x88\x1d\xd1\xe5\x69\x55\x0f\x3c\x69\xcb\x8f\x35\xdf\xe9\x1d\x00\x00\xff\xff\xdd\x47\x50\x16\x0c\x01\x00\x00")

func bindataTemplates10modeldefinitiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates10modeldefinitiontmpl,
		"templates/10_model-definition.tmpl",
	)
}



func bindataTemplates10modeldefinitiontmpl() (*asset, error) {
	bytes, err := bindataTemplates10modeldefinitiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/10_model-definition.tmpl",
		size: 268,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1597612013, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates11singlefilemodelstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x3f\x4b\x04\x31\x10\xc5\xfb\x7c\x8a\xc7\x22\x56\x6e\xb6\x3f\xb8\xca\xb3\xb0\xf0\xce\xe2\x3a\x11\x19\xdd\xb9\x35\xb8\xf9\x43\x12\x15\x19\xf2\xdd\x25\xc9\x15\x87\x60\x37\xe4\x37\x6f\xe6\xbd\x8c\xc8\x88\x99\x4f\xc6\x31\x86\x64\xdc\xb2\xf2\x78\x32\x2b\x8f\xd6\xcf\xbc\xa6\x01\x63\x29\x6a\x9a\x70\xeb\x67\xc6\xc2\x8e\x23\x65\x9e\xf1\xfa\x03\xc7\x9f\xd1\x2f\xde\x71\x32\x49\x63\x77\xc0\xfe\x70\xc4\xdd\xee\xfe\xa8\x6b\xff\xf1\xdd\x24\xd4\x41\xf8\xa6\x74\x21\xa4\xbc\xa9\x58\x04\xd9\x58\x4e\x99\x6c\x40\x29\x4a\x05\x7a\xfb\xa0\x85\x21\xa2\x1f\x7b\xb9\x27\xcb\x95\x88\x64\xb6\x61\xa5\xcc\x18\x8c\x0d\x3e\xe6\x34\x40\x57\x32\x4d\xd8\x57\x13\xee\xe5\xa1\x99\x45\xca\x3e\x72\x02\xad\xeb\xc5\xc6\x1e\x04\xc6\x21\x57\x4f\xe7\x45\x5a\x7d\x51\xfc\x23\xdf\xe2\xe9\xd9\x52\x08\xc6\x2d\xba\x3d\x09\xea\xef\x44\x72\x0b\xe3\xaa\xcd\xc1\x66\x8b\xce\x52\x29\x0a\x00\xae\x45\x3a\xd2\xdd\xb0\x94\x1b\x11\x76\x73\x29\xaa\x28\x91\x7f\xc4\x35\xf3\x65\xb0\xc6\xc7\x76\x07\x93\x8d\x77\xc3\x59\xd2\xda\x46\xf4\x79\xe7\xaa\x9e\xe4\x37\x00\x00\xff\xff\x9d\x86\x26\xa3\xb6\x01\x00\x00")

func bindataTemplates11singlefilemodelstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates11singlefilemodelstmpl,
		"templates/11_single-file-models.tmpl",
	)
}



func bindataTemplates11singlefilemodelstmpl() (*asset, error) {
	bytes, err := bindataTemplates11singlefilemodelstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/11_single-file-models.tmpl",
		size: 438,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598966105, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates12singlefilecollectionstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\xbd\x6e\xc3\x30\x10\x83\x77\x3f\x05\x61\x74\x95\xb2\x07\xe8\x94\x74\xe8\x92\x74\xf0\x0b\x5c\x6d\x46\x3d\x54\x3f\x86\xa5\xa2\x28\x04\xbf\x7b\x21\x67\xb0\x37\x02\x24\x3f\xf0\xae\x56\x83\x89\x0f\x8d\x44\x9f\x35\x3a\x4f\xf3\x50\x4f\x33\x26\xef\x39\x16\x4d\x31\xf7\x30\xeb\xda\x9d\x4e\xb8\xa4\x89\x70\x8c\x5c\xa4\x70\xc2\xe7\x1f\x22\x7f\x96\xe4\x52\x64\xd6\x6c\x71\xbd\xe3\x76\x1f\xf0\x76\x7d\x1f\x6c\xcb\x0f\x5f\x9a\xd1\x68\xf8\x95\x7c\x28\x4a\x39\x37\xbb\x56\x14\x0d\xcc\x45\xc2\x8c\x75\xed\xba\x59\xc6\x6f\x71\x44\xad\xf6\xe3\x29\x6f\x12\xd8\x9c\x5a\x0b\xc3\xec\xa5\x10\xbd\x86\x39\x2d\x25\xf7\xb0\x4f\x67\x91\xe8\x88\x97\x7d\x30\xce\xaf\xb0\x97\x7d\x7f\x63\x1f\x01\x7b\xd2\x6c\x97\x6b\x93\xfd\x91\xb0\x15\x0c\x18\xa7\x5d\x6d\x4f\xf8\x0f\x00\x00\xff\xff\xa9\x2d\xfd\x9e\x2e\x01\x00\x00")

func bindataTemplates12singlefilecollectionstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates12singlefilecollectionstmpl,
		"templates/12_single-file-collections.tmpl",
	)
}



func bindataTemplates12singlefilecollectionstmpl() (*asset, error) {
	bytes, err := bindataTemplates12singlefilecollectionstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/12_single-file-collections.tmpl",
		size: 302,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598954715, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates13collectiondefinitiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xca\xb1\x0a\x85\x30\x0c\x46\xe1\xbd\x4f\x11\xba\xf7\xbe\xd3\xb5\xfd\x85\x40\x6c\xa5\x26\x53\xc8\xbb\x8b\xe2\xe2\xe0\x76\x38\x7c\xee\x0d\x2b\x77\x50\xae\x43\x04\x55\x79\xf4\x72\x2f\xbe\x32\x53\x89\x48\xee\x8a\x6d\x97\xbf\xbe\xd9\xa1\xd3\xaa\xda\x44\xa6\x1f\x45\xa4\x2f\xb7\x18\x4b\xc3\x7c\x94\x7b\x21\xf4\x16\x71\x06\x00\x00\xff\xff\xd1\xbc\x4d\x93\x7b\x00\x00\x00")

func bindataTemplates13collectiondefinitiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates13collectiondefinitiontmpl,
		"templates/13_collection-definition.tmpl",
	)
}



func bindataTemplates13collectiondefinitiontmpl() (*asset, error) {
	bytes, err := bindataTemplates13collectiondefinitiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/13_collection-definition.tmpl",
		size: 123,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1597612013, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates14collectionpackagestructuretmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5b\x6f\xdb\xbe\x15\x7f\xf7\xa7\x38\x35\xda\x5a\x2a\x1c\x39\x0f\xc3\x1e\x0c\x78\x40\x93\xb4\x5d\x30\xb4\xdb\x9a\x74\x03\x16\x04\x81\x6c\x1e\xd9\x42\x64\x52\x25\xe9\x24\x9e\xa0\xef\x3e\xf0\xa2\x0b\x25\xf9\x92\xc4\x49\xf7\x07\xda\x87\x18\x12\xc9\x73\x0e\x7f\xe7\x77\x2e\xa4\x9a\x65\x04\xa3\x98\x22\xf4\x67\x2c\x49\x70\x26\x63\x46\x8f\xd2\x70\x76\x1b\xce\xf1\x48\x48\xbe\x9a\xc9\x15\xc7\x3e\x1c\xe5\x79\xef\x2e\xe4\x70\xb3\xbc\xd0\x2f\xe1\xc3\x32\x4c\xd3\x98\xce\x83\xaf\x8c\x60\x62\x5e\xf6\x7a\xd1\x8a\xce\x60\x59\xbd\xf1\x6e\xc8\x14\x48\x28\xc3\x69\x28\x30\x38\x3b\xf1\xc1\xeb\x5a\x38\x04\xe4\x9c\x71\x1f\xb2\x1e\x00\x40\x1c\x55\x7a\xde\x4c\x80\xc6\x89\x1d\x50\xff\x38\xca\x15\xa7\xe5\x84\xa1\x1a\xd6\x83\xb9\xfe\xbb\xac\x49\x84\xf1\x04\x6e\xc8\xd4\x68\xfa\x1a\xa6\x9e\x5f\x57\xea\xbd\xcf\x32\xf3\xfc\x2d\x5c\x62\x9e\x67\xb9\x5f\x68\x57\x6b\x37\x29\xa6\x71\xa2\x85\xd7\x74\x96\xc6\x4e\x0a\xf5\xbd\xda\x02\xc7\xd0\xbc\xd7\x1b\x8d\xe0\x92\x69\xbd\x02\x66\x8c\xde\x21\x97\x02\xe4\x02\x21\xa6\xe9\x4a\x82\x48\xe2\x19\x02\x8b\xc0\xb5\x0e\x62\x2a\x19\x5c\x5d\x3b\xe8\x19\xbc\x0b\x69\x9e\x11\x10\x04\xc1\x07\x77\xad\x0f\x5e\x63\x61\x81\x34\x5b\x49\xb5\x64\x3c\x81\x65\x78\x8b\xcd\x59\x43\x48\x90\x1a\xa9\xbe\xc1\x26\x62\x1c\x62\x35\x9d\x87\x74\x5e\x58\x5c\x41\x64\xc4\x5d\xc5\xd7\x30\x31\x63\x57\xf1\x75\x0d\x27\x0b\x88\x99\x65\xa1\xf8\xcc\xd9\x72\x33\x18\x8e\x39\x05\x04\x8d\xdd\x05\x06\x85\x4a\x50\x85\x43\x63\xcf\x5e\x6b\xed\x46\x1c\x1a\xf3\x0e\x82\x44\xe0\x35\xb5\xef\xc0\xe6\x9f\x2b\xe4\x6b\x98\x71\x0c\x25\x1a\x54\x7e\xea\x37\x4a\xb7\x7a\xea\xc4\x41\x2f\xf2\xdc\xb0\x1b\x9a\x98\x14\x9d\xdc\x50\x2f\x4e\xcb\xe0\x0f\xf4\xfa\x93\x55\x9c\x10\xe4\x79\x6e\xb7\xa4\x42\x5f\xeb\xb6\xae\x6a\xf2\xd0\xc6\x8d\x02\xc9\x68\xf2\xe1\x2f\x70\x5c\xc3\xa3\xbe\x78\x1b\xd9\xec\x6a\xbf\x5c\xa8\x71\xb6\xf6\x57\x70\xdb\xed\x54\xf2\x1b\x3a\x0c\xf0\xcb\xd2\xb6\x0a\xe7\xee\x2c\x51\x4f\x59\x64\x6a\xb4\x4f\x0d\x06\x6a\x98\x4c\x0d\x2c\x5e\xb9\xae\xbe\x9f\x20\x08\xfc\xba\x0f\xdf\x6f\x03\x34\xb3\x62\xc7\x85\x7c\x6d\xc3\x58\xfd\xc9\xeb\x6e\x3f\x95\x0f\x7b\x7b\x1e\xee\x63\xb9\x80\x94\xb3\xbb\x98\x20\x81\xc1\x4c\x3e\x0c\x54\x34\x49\x7c\x90\x75\x56\x9c\xca\x07\x6f\xa6\xe4\xda\xa1\x53\xf3\x3b\x84\xdf\x6c\x79\x09\xb6\x58\xb8\x87\xf0\x2a\xac\x39\xa7\x02\xb9\x84\x58\xff\x88\xce\xea\x51\xfa\xd8\x70\xc2\xac\x78\x36\x23\x74\xe9\xae\x2a\x77\xdd\xab\x93\x89\xe3\x56\xbb\x53\xbd\x40\x04\xff\xe6\x61\xea\x69\x44\x82\x4f\x9c\x7f\xb3\x45\x6c\x08\x7d\xca\xe4\x22\xa6\x73\x90\xcc\xee\xa6\xef\x3f\xd2\x19\x3b\x4a\xb8\x5b\xbd\xeb\x4e\xd9\x5a\x08\x1d\xb6\xed\xc9\xb4\x2d\x2c\x73\xf2\x3e\x99\x06\x95\x3b\xba\x19\xa3\x09\x63\x7c\xfd\x23\x25\xa1\x44\x58\xe9\x9f\x96\xaf\xad\x11\x5d\x2e\x37\x0b\x9f\xed\x72\x2f\xa6\xf2\xcf\x7f\x6a\x77\x6d\xbb\x7d\x7f\x3c\xfc\xf5\xee\x3f\x6e\xf6\x6f\xff\x2f\x0c\xa8\xbc\xb3\x93\x01\x67\x98\xa0\x44\x20\xfa\x67\x33\x03\x9a\xfe\x37\xcb\x0e\xe5\xff\xdf\xee\x3f\xa8\xfb\x2b\xe7\xec\x74\xff\x77\x8c\x38\x8a\xc5\x21\x3b\x04\x2b\xf2\xa0\xe5\xe0\x09\x8d\xc0\xb3\x4b\x06\x37\xfb\x78\xbd\x9a\xf1\x0b\x19\x53\xf3\xd9\x76\xca\xf4\xb2\xec\x2d\x33\x07\x9c\x40\x9f\xe5\xb3\xcc\x68\x7f\xcb\x31\x09\x55\xc3\xa1\x87\xf4\xa2\xe0\xbb\x7d\x25\xf4\xcc\x5e\x96\xc5\x51\x35\x2f\x38\x17\x17\xfa\x84\xaa\xc6\x46\x23\xf8\x48\x48\x96\x55\xa3\x96\x6e\x21\x21\x86\x94\x83\xf6\xe0\x00\x8a\x17\x62\x11\xa7\x1a\x95\x92\x98\xe6\x18\x35\x30\x98\x0c\x2c\x33\x3b\x55\x3c\x82\xa7\xaa\x67\x55\xbb\x77\x0f\x74\xa5\x11\x96\xc5\x95\x82\x93\x50\xe0\x0f\x7a\xcf\xc3\x34\x45\x72\xb9\x4e\xbb\xba\x1c\x23\x78\xb2\x99\x2c\x5b\xe9\x5a\xee\x57\xad\xd6\xa2\x1c\xba\xda\x90\x28\x2d\x7c\x7a\x54\x94\xbb\x2c\x68\x56\x68\x7e\xd9\xf0\x28\xb4\x7e\x8e\x31\x21\x95\x58\x23\xb2\xe4\xd7\xc9\xfa\x9c\x12\x7c\xf0\xea\xd8\xeb\x37\xf9\x7e\x37\x31\xdd\x3a\xf7\x49\xe4\x15\xb2\x9d\x87\xf9\x8a\x1a\x75\x9d\x75\xf1\x26\x30\xcb\x79\xee\x35\xc7\x4f\x25\xc9\xf8\xe3\x1b\xde\x5f\xcc\x58\x8a\xd5\xc1\x51\x63\xeb\x3b\x16\x7f\x24\xba\xa1\x67\xb7\xf6\xf0\xe0\x95\x14\xd6\x87\x80\xef\xf5\x69\x25\x30\x6f\xd8\xed\x56\x42\x9c\xa1\x8c\x2a\x52\x9c\x53\x89\x9c\x86\xc9\x10\xfa\x67\x27\x40\x18\x0a\x3a\x90\x10\x2f\xd3\x04\x97\x48\x25\xb4\x15\xa9\xf6\x11\x79\x14\xaa\x48\x87\x77\x97\x7d\x15\x5b\x1d\xf7\x15\xce\x1e\x8c\xbd\x1f\x09\x29\x33\x88\xc9\x4c\x3f\x87\x4d\x46\xb8\x68\xda\x2c\x95\x65\x48\x89\xc9\x39\xa3\x11\x9c\x26\x18\xf2\x76\xdc\x17\xa2\x61\xa6\xc6\x9f\x94\x64\x4c\x28\x04\xf0\x99\x71\x67\x96\x00\x16\x81\x5c\xa7\x38\x56\xfa\x4f\x30\x61\x74\x2e\x2e\xd9\x10\xfe\x1a\x8a\xbf\x53\xd4\xbf\x5f\x43\xba\x56\xf0\x47\x8c\x63\x3c\xa7\x70\x8b\x6b\x88\x05\x50\x26\x81\xae\x92\x24\x9c\x26\x08\x72\x11\x52\x6d\x97\xca\x5e\xda\xd6\x7b\xb6\x4a\x48\x01\x59\x68\xfd\x64\xb3\xdb\x8e\x7d\x3e\xa1\x1e\x37\x73\xdd\x86\x7e\xfd\x25\x5a\xa9\x62\x13\x2f\x16\xf3\x2d\x8d\xda\xea\xf3\x82\xab\x8f\x6e\xe0\xb6\xd4\xe1\x86\xe4\x5a\x2d\x6e\xc4\xbb\xd8\x19\xef\x95\x94\xda\xa9\xdf\xec\x5e\xbb\x7f\x9f\xf0\xb7\x13\xb7\x27\x00\xb7\xbf\x7e\xe5\x1c\x60\x2d\xb4\x97\x1f\xea\xa1\x91\x07\x44\x15\xf8\xa6\x2b\x19\x8d\xe0\x0b\xca\x8e\xfe\x61\x8e\xf2\xd9\xfd\x43\xd1\x3e\x74\x6a\x38\x58\xfb\xa0\x13\x9a\x40\x7d\xdd\x2c\x24\x8f\xe9\xdc\x07\x6f\x73\xcb\x74\x75\x9d\x65\x47\x60\xf3\xdc\xae\xae\xa3\x7d\xc0\xde\xde\x76\x14\x9f\x26\x9e\xd3\x7b\xa8\xcc\xbb\xc0\xd9\xad\xd2\x96\xf2\x78\x19\xf2\xb5\x4e\x72\x8b\x50\xc0\x7f\x91\x33\xb8\x0b\x93\x15\x06\x8e\x41\xc1\xb9\xf8\x87\x99\xfa\x37\x5c\xff\x07\x39\xf3\xfc\x3d\x8c\x2b\xe2\xf3\x13\xe7\x1a\xc4\x7f\x29\xc1\x43\xe8\x1b\xe7\x89\xb1\xf6\x7d\x03\xf7\x81\x63\x93\x36\xa5\x61\xd9\xa1\x1b\x9b\x8e\xcf\x3d\xaf\xd3\xdd\x34\x14\x97\xe7\xa9\x48\x13\x0e\xae\xae\xcb\x0f\x69\x46\xb1\xb6\xa6\xdd\x09\xe9\x04\x57\x37\xb8\x6a\xef\x17\x71\xea\xf9\xe6\x11\x49\xfd\xc3\x98\xdf\xd5\x85\x16\x44\x6f\x35\xa3\xd6\xa0\x89\xab\x37\x30\xf3\xad\xac\x1c\x30\x11\x58\x5f\xc4\x38\xdc\x0c\xcd\xda\x76\xe3\x55\x06\x95\x7b\x65\x2b\x2c\xe2\x26\x55\x76\xa8\x3b\x59\x2b\x9a\x78\x5a\xaa\xef\x2c\x6d\x25\xcc\x1d\xec\x8c\xea\xf4\x3c\xa7\x77\x61\x12\x1b\x88\xac\x09\xaa\xb7\xd6\x6a\xc6\x30\x78\x27\x06\x10\xb1\x15\x25\xe5\xe1\x5b\xf3\x6c\xec\x26\xaf\x8e\xf8\x1e\xf4\x2d\x02\xae\xad\xb9\xf3\x54\xc2\xab\x16\x52\x62\x36\x27\x86\x16\x0c\xbf\x75\x61\xed\x50\x40\x94\xf4\x24\xd3\xe0\x0b\xca\x46\x42\x2e\xe3\xa3\x51\x2d\x33\xbd\x81\x66\x96\xb3\xc6\x56\x35\xec\xf1\xa1\xb3\xf3\x64\xb3\xe5\xb0\xd9\x90\xae\xbf\xd1\x6d\x85\x37\xcb\xab\x8f\xc3\x46\xf6\x91\xa1\x61\x87\x34\x6d\x6b\x6b\x32\x25\x79\xfd\x3b\xc0\x0e\xe3\x38\x8a\x55\xd2\xf8\x88\xb8\x23\xbf\x6f\x3c\x8c\x54\xd0\xef\x3a\x96\x28\x9d\xee\x71\x44\x7f\x67\xdc\x7e\x9c\xed\x2a\xe2\x4a\x50\x85\x41\x0b\xac\x46\xb1\x17\x57\xc7\xd7\x7b\x28\x6a\x08\xd4\x80\xda\xca\x7f\xd1\x59\xf9\xc5\x01\x2a\x7f\x79\x73\xd0\xa9\xe2\x60\xa5\x7f\x33\x1d\x74\x27\x5e\x20\x98\xe7\xf0\x88\x9a\xff\xba\x37\x0d\x2f\x56\xed\xff\x78\x85\xfe\xd7\xdf\x60\xec\x7b\x6f\xa0\x79\xa7\x4e\x9c\x9b\x53\x51\x1c\x41\x6d\xec\x30\xee\x2a\x13\x52\x67\x64\x1a\x9a\xba\x2e\x2a\x7d\xa8\xeb\x46\xdf\xef\xc0\xf7\x02\xa5\xdc\xe7\xf4\x63\xe6\xbd\xc6\xed\x87\xd1\x54\x1d\x7d\xc6\x7b\x9c\x7c\xcc\x1a\x63\xf1\x45\xab\xca\x6e\xbe\xfe\xf0\xbb\x53\xed\x6b\xdf\xff\x3d\xfb\xea\x6c\xdf\x6a\xb5\x37\x2d\x1f\x49\x4d\x46\xf5\xff\x98\x3a\x10\x43\xc1\xe9\xc1\xb6\x5d\xfc\xfd\x26\xf4\xe6\xfb\xbc\x66\xcd\xaf\x6e\xf7\xca\xb7\xff\x0b\x00\x00\xff\xff\xc8\x89\xfd\x13\x7d\x28\x00\x00")

func bindataTemplates14collectionpackagestructuretmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates14collectionpackagestructuretmpl,
		"templates/14_collection-package-structure.tmpl",
	)
}



func bindataTemplates14collectionpackagestructuretmpl() (*asset, error) {
	bytes, err := bindataTemplates14collectionpackagestructuretmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/14_collection-package-structure.tmpl",
		size: 10365,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1599143306, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates15collectionpackagetmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x3d\x4e\xc3\x40\x14\x84\x7b\x9f\x62\xe4\xde\x4e\x4f\x4b\x28\x68\x12\x0a\x5f\x60\xe3\x9d\x98\x27\xf6\xc7\xda\x7d\x16\x42\x4f\x7b\x77\x64\xe1\x02\x41\x91\x6e\xa4\xef\x1b\xcd\x98\x79\xde\x25\x11\xfd\x9c\x43\xe0\xac\x92\xd3\xb0\xba\xf9\xc3\x2d\xec\x31\xb4\xd6\x9d\x4e\x78\xce\x9e\x58\x98\x58\x9c\xd2\xe3\xf6\x85\xc4\xad\xe4\x25\x27\x56\xa9\x23\xce\x57\x5c\xae\x13\x5e\xce\xaf\xd3\xb8\xfb\xd3\xbb\x54\xdc\x25\x10\x9f\xae\xfe\x2a\x3a\x7d\xda\xb1\x19\x54\x22\xab\xba\xb8\xa2\xb5\xae\x3b\xf6\x60\x36\xbe\xfd\xc4\x8b\x8b\xdc\x89\x99\x32\xae\xc1\x29\xd1\x4b\x5c\x73\xd1\xda\x63\xc4\x5f\xf4\xff\xfb\x50\xb5\x6c\xb3\x6e\x85\x0f\xfc\xdb\x26\xc1\xb3\x1c\x96\xd9\x00\x26\xdf\xda\x77\x00\x00\x00\xff\xff\x2e\x73\xe6\x5f\x18\x01\x00\x00")

func bindataTemplates15collectionpackagetmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates15collectionpackagetmpl,
		"templates/15_collection-package.tmpl",
	)
}



func bindataTemplates15collectionpackagetmpl() (*asset, error) {
	bytes, err := bindataTemplates15collectionpackagetmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/15_collection-package.tmpl",
		size: 280,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598963773, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"templates/00_imports.tmpl":                      bindataTemplates00importstmpl,
	"templates/01_initialize_collections.tmpl":       bindataTemplates01initializecollectionstmpl,
	"templates/02_collection.tmpl":                   bindataTemplates02collectiontmpl,
	"templates/03_collection-structure.tmpl":         bindataTemplates03collectionstructuretmpl,
	"templates/04_collection-builder.tmpl":           bindataTemplates04collectionbuildertmpl,
	"templates/05_model.tmpl":                        bindataTemplates05modeltmpl,
	"templates/06_primary.tmpl":                      bindataTemplates06primarytmpl,
	"templates/07_fielder.tmpl":                      bindataTemplates07fieldertmpl,
	"templates/08_single-relationer.tmpl":            bindataTemplates08singlerelationertmpl,
	"templates/09_multi-relationer.tmpl":             bindataTemplates09multirelationertmpl,
	"templates/10_model-definition.tmpl":             bindataTemplates10modeldefinitiontmpl,
	"templates/11_single-file-models.tmpl":           bindataTemplates11singlefilemodelstmpl,
	"templates/12_single-file-collections.tmpl":      bindataTemplates12singlefilecollectionstmpl,
	"templates/13_collection-definition.tmpl":        bindataTemplates13collectiondefinitiontmpl,
	"templates/14_collection-package-structure.tmpl": bindataTemplates14collectionpackagestructuretmpl,
	"templates/15_collection-package.tmpl":           bindataTemplates15collectionpackagetmpl,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"templates": {Func: nil, Children: map[string]*bintree{
		"00_imports.tmpl": {Func: bindataTemplates00importstmpl, Children: map[string]*bintree{}},
		"01_initialize_collections.tmpl": {Func: bindataTemplates01initializecollectionstmpl, Children: map[string]*bintree{}},
		"02_collection.tmpl": {Func: bindataTemplates02collectiontmpl, Children: map[string]*bintree{}},
		"03_collection-structure.tmpl": {Func: bindataTemplates03collectionstructuretmpl, Children: map[string]*bintree{}},
		"04_collection-builder.tmpl": {Func: bindataTemplates04collectionbuildertmpl, Children: map[string]*bintree{}},
		"05_model.tmpl": {Func: bindataTemplates05modeltmpl, Children: map[string]*bintree{}},
		"06_primary.tmpl": {Func: bindataTemplates06primarytmpl, Children: map[string]*bintree{}},
		"07_fielder.tmpl": {Func: bindataTemplates07fieldertmpl, Children: map[string]*bintree{}},
		"08_single-relationer.tmpl": {Func: bindataTemplates08singlerelationertmpl, Children: map[string]*bintree{}},
		"09_multi-relationer.tmpl": {Func: bindataTemplates09multirelationertmpl, Children: map[string]*bintree{}},
		"10_model-definition.tmpl": {Func: bindataTemplates10modeldefinitiontmpl, Children: map[string]*bintree{}},
		"11_single-file-models.tmpl": {Func: bindataTemplates11singlefilemodelstmpl, Children: map[string]*bintree{}},
		"12_single-file-collections.tmpl": {Func: bindataTemplates12singlefilecollectionstmpl, Children: map[string]*bintree{}},
		"13_collection-definition.tmpl": {Func: bindataTemplates13collectiondefinitiontmpl, Children: map[string]*bintree{}},
		"14_collection-package-structure.tmpl": {Func: bindataTemplates14collectionpackagestructuretmpl, Children: map[string]*bintree{}},
		"15_collection-package.tmpl": {Func: bindataTemplates15collectionpackagetmpl, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
