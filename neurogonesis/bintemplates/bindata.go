// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/00_imports.tmpl
// templates/01_initialize_collections.tmpl
// templates/02_collection.tmpl
// templates/03_collection-structure.tmpl
// templates/04_collection-builder.tmpl
// templates/05_model.tmpl
// templates/06_primary.tmpl
// templates/07_fielder.tmpl
// templates/08_single-relationer.tmpl
// templates/09_multi-relationer.tmpl
// templates/10_model-definition.tmpl
// templates/11_single-file-models.tmpl
// templates/12_single-file-collections.tmpl
// templates/13_collection-definition.tmpl
// templates/14_collection-package-structure.tmpl
// templates/15_collection-package.tmpl

package bintemplates


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataTemplates00importstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\xca\xcc\x2d\xc8\x2f\x2a\x29\x56\x52\xd0\xad\xad\xe5\xaa\xae\xd6\x55\xc8\x4c\x53\xd0\xf3\x84\x08\x82\xc5\x20\x0a\x14\x34\xb8\xaa\xab\x8b\x12\xf3\xd2\x53\x15\x54\xa0\x22\x56\xb6\x08\x85\xb5\xb5\x0a\x0a\x0a\x0a\x4a\xd5\xd5\x50\xc9\xda\x5a\x25\xae\xea\xea\xd4\xbc\x14\x90\x11\x9a\x60\x73\xa1\x1c\x18\xbb\xb6\x16\x10\x00\x00\xff\xff\x08\x20\xfd\xe4\x84\x00\x00\x00")

func bindataTemplates00importstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates00importstmpl,
		"templates/00_imports.tmpl",
	)
}



func bindataTemplates00importstmpl() (*asset, error) {
	bytes, err := bindataTemplates00importstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/00_imports.tmpl",
		size: 132,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1597612013, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates01initializecollectionstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xb1\x4e\xc4\x30\x10\x44\xfb\x7c\xc5\x28\x7d\x7c\x3d\x2d\x47\x71\xcd\x1d\x45\x7a\xb4\xc4\x9b\xb0\xc2\x5e\x47\xf6\x9e\x10\x58\xfe\x77\x94\xa4\x38\x44\xb7\x7a\x33\x23\xed\xab\xd5\xf3\x2c\xca\xe8\x45\xc5\x84\x82\xfc\xf0\xdb\x94\x42\xe0\xc9\x24\x69\xe9\x31\xb4\xd6\x9d\x4e\x78\x4e\x9e\xb1\xb0\x72\x26\x63\x8f\xf7\x6f\x28\xdf\x73\x5a\x92\x72\x91\xe2\x70\xbe\xe1\x7a\x1b\xf1\x72\xbe\x8c\x6e\xeb\x8f\x1f\x52\x30\x4b\x60\x7c\x51\xf9\x33\x24\x7b\xda\xe2\x5a\x61\x12\xb9\x18\xc5\x15\xad\x75\xdd\x4a\xd3\x27\x2d\x8c\x5a\xdd\xeb\x71\x5e\x29\x72\x6b\x5d\xad\x32\xc3\x5d\xe2\x9a\xb2\x15\xec\xc0\x38\xae\x81\x6c\x7b\xfa\xc0\x3d\xdc\x91\xb0\xfa\x7f\x8d\x87\xcb\xf0\x30\xcc\xc3\x7c\xd7\x1d\xf6\x70\xfb\x00\xac\x1e\xad\xfd\x06\x00\x00\xff\xff\xc4\xb5\xbf\x6c\x0f\x01\x00\x00")

func bindataTemplates01initializecollectionstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates01initializecollectionstmpl,
		"templates/01_initialize_collections.tmpl",
	)
}



func bindataTemplates01initializecollectionstmpl() (*asset, error) {
	bytes, err := bindataTemplates01initializecollectionstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/01_initialize_collections.tmpl",
		size: 271,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1597612013, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates02collectiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xbb\x4e\xc3\x40\x10\x45\x7b\x7f\xc5\x95\x7b\x3b\x3d\x2d\xa1\xa0\x49\x28\xfc\x03\x83\x7d\x63\x46\xec\x4b\xde\x41\x08\x8d\xf6\xdf\xd1\x92\x02\x44\x37\xd2\x39\x23\x9d\xeb\xbe\xf1\xa6\x89\x18\xd7\x1c\x02\x57\xd3\x9c\x46\x4c\xad\x0d\xa7\x13\x1e\xf3\x46\xec\x4c\x3c\xc4\xb8\xe1\xf5\x0b\x89\x1f\x47\xde\x73\x62\xd5\x3a\xe3\x7c\xc5\xe5\xba\xe0\xe9\xfc\xbc\xcc\xdd\x5f\xde\xb4\xe2\xa6\x81\xf8\x94\xfa\xe7\x51\xec\xa1\x63\x77\x98\x46\x56\x93\x58\xd0\xda\x30\x14\x59\xdf\x65\x27\xdc\xe7\x97\xfb\x79\x91\xc8\x4e\xdc\x8d\xb1\x04\x31\x62\xd4\x58\xf2\x61\x75\xc4\xfc\x9f\xfc\x26\x4f\x3f\x2b\xf4\x5e\xdf\x3d\xf7\x09\x4c\x5b\x6b\xdf\x01\x00\x00\xff\xff\x7d\x2e\x09\x85\xe1\x00\x00\x00")

func bindataTemplates02collectiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates02collectiontmpl,
		"templates/02_collection.tmpl",
	)
}



func bindataTemplates02collectiontmpl() (*asset, error) {
	bytes, err := bindataTemplates02collectiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/02_collection.tmpl",
		size: 225,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598963720, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates03collectionstructuretmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5d\x6f\xdb\xbc\x15\xbe\xcf\xaf\x38\xaf\xf1\xbe\xb5\x54\x38\x4a\x2e\x86\x5d\x18\xf0\x80\x7c\xb4\x9d\x31\xb4\xeb\x92\x6c\x03\x16\x04\x85\x6c\x1d\xc7\x44\x64\x52\x25\xe9\x34\x9e\xa0\xff\x3e\xf0\x43\x1f\xd4\x87\xed\xd8\xae\x5b\x0c\xbd\x89\x21\x89\x3c\xe7\xe1\x73\x1e\x1e\x1e\x92\x49\xd3\x08\x67\x84\x22\xf4\xa6\x2c\x8e\x71\x2a\x09\xa3\xa7\x42\xf2\xe5\x54\x2e\x39\xf6\xe0\x34\xcb\x4e\x4e\xce\xce\x20\x4d\x83\xab\xa2\x41\xf0\x29\x5c\x60\x96\x01\x11\x20\xe7\x08\x5f\x97\xc8\x57\x30\xc7\x38\x41\x0e\x72\x1e\x4a\x48\x38\x7b\x26\x11\x0a\x58\xb0\x08\x63\x10\x09\x4e\xc9\x8c\x4c\x21\x0a\x65\x38\x09\x05\xc2\xc5\xe7\x71\x70\x22\x57\x09\xb6\x1b\x36\x00\x20\x3d\x01\x00\x58\xdc\x9a\xa7\xb7\x8b\x30\x49\x08\x7d\x0c\x3e\x2a\xa3\xe6\xe5\x89\x41\x57\x79\x03\x8f\x28\x0d\x2c\x21\x19\xc7\x28\x87\xa0\x3f\x06\x27\xb3\x25\x9d\x82\xe7\x3a\xbd\xc1\x29\x92\x67\xe4\x59\x06\x6f\xdb\xe0\xf8\x55\xfb\x9e\xdf\x0a\xc4\x62\xe5\x28\x97\x9c\x42\x97\xfd\x60\x51\xc2\xde\x0d\xc9\xa2\x82\xe4\x4b\x34\x29\x18\x0d\xae\x2f\x7d\xf0\xda\x90\x0d\x00\x39\x67\xdc\xb7\x08\xc9\x6c\x23\x3a\xf8\x6d\x04\x94\xc4\xb6\xc3\x2b\x86\x35\x50\xdd\x74\xa7\xac\x1a\x39\x8d\x00\x86\x23\xf8\x12\x4d\x82\x2b\x46\x25\x57\x46\xb8\xe7\x57\x61\x7a\x6f\xd2\xd4\x3c\x9b\xa1\xa6\x99\x9f\xe3\x55\xbd\xbb\x20\x51\x12\x6b\xf3\x15\xaf\x1b\x87\x37\xca\x81\x55\x43\xe6\x0c\xc1\xa8\xea\x8e\x69\x3c\x02\xa6\x8c\x3e\x23\xb7\xb2\x22\x34\x59\x4a\x10\x31\x99\x22\x30\x4d\x66\x05\x35\x10\x2a\x19\xdc\x3f\x38\x71\xd8\x31\xd4\xb9\x7b\xcf\x78\x0c\x82\xe0\xad\xeb\xcc\x07\xaf\xe6\x29\x0f\x32\x5b\x4a\xd5\x65\x38\x82\x45\xf8\x84\xf5\x56\x03\x88\x91\x1a\xab\xbe\x21\x79\xc6\x38\x10\xd5\x9c\x87\xf4\x31\x1f\x62\xc9\xb5\x31\x77\x4f\x1e\x60\x64\xbe\xdd\x93\x87\x0a\xe1\x96\x41\xd3\xca\x72\xf7\x9e\xb3\x45\x37\x7b\x0e\x9c\x9c\xb3\xda\xe8\x76\x9d\xab\xa5\xe7\x92\xb8\x1a\x49\x5e\xc3\x59\x27\x71\xb5\x76\x07\xa1\x2e\xf0\xea\xde\x37\x90\xf9\x0f\x9d\x60\xa7\x1c\x43\x89\xd5\x94\xab\x7c\xab\xa7\xc3\x10\xa7\xbd\x78\x6e\x4e\x19\x98\x84\x23\x5a\xd5\x57\xb3\xa3\xfb\x5f\x2e\x49\x1c\x69\x2f\x86\x83\xe7\x90\x1b\xb0\x56\x0c\xf5\xa9\x61\xa7\xb8\x62\xd5\x78\xf2\xe1\x2f\x70\x5e\x21\xb0\xda\x79\x9d\x9c\x6d\x6f\xbf\xe8\xa8\x03\x63\xf1\x97\xf1\xb1\xc3\x29\xed\xd7\x7c\x98\x48\x2d\x0a\x6c\x65\x60\xda\x53\x5a\x77\xb2\xa9\xa4\xb6\x68\x62\x60\x4d\x0c\x39\xaa\x5f\x34\x31\x7c\x79\x85\xc1\xea\x40\x83\x20\xf0\xab\x6a\x78\xb3\x8e\xe9\xd4\x9a\x1d\xe6\xf6\x35\xb8\xa1\xfa\x93\x55\x05\x74\x25\x5f\xb6\xd6\x10\x7c\x23\x72\x9e\x2f\xe3\x11\xf4\xa7\xf2\xa5\xaf\x26\xb2\xc4\x97\x9d\x17\xd1\x1c\x84\x37\x55\x40\xac\xad\x2b\xf3\x3b\x80\x5f\xba\x3b\xaa\xee\x6c\x1c\x06\x70\x14\xfd\x8d\xa9\x40\x2e\x81\xe8\x1f\xd1\xba\x66\x16\xc1\xdf\x51\x5d\xc6\xc5\xde\xda\xd2\xb5\x52\x59\x2a\x55\xf5\x31\x1a\x39\x02\xb1\xd4\xe8\x0e\x22\xf8\x37\x0f\x13\x4f\x53\x18\xbc\xe3\xfc\x93\x5d\xba\x07\xd0\xa3\x4c\xce\x09\x7d\x04\xc9\xec\xf0\x7b\xfe\xa1\xc2\xba\xa1\x34\x72\xab\xa2\x6a\x78\xd7\xd6\x05\x8e\xa0\xb7\x14\xf3\x1a\x21\x3b\xab\x5a\x34\x09\xca\x38\xb5\x6b\x4f\x4b\xcf\xa8\xe6\x9f\x49\x14\x4a\x84\xa5\xfe\x69\xa8\xc6\x82\x38\x88\x78\x8c\xa7\xbd\xc5\xe3\x11\x2a\xff\xfc\xa7\x66\xc1\xbd\x59\x45\xe7\x83\x9f\x58\x48\xe7\xf5\x0a\xfb\x67\xd1\x52\x19\xb6\x8d\x5a\xba\xc6\x18\x25\x42\xa4\x7f\xba\xb5\xb4\xb7\x92\x8c\x9f\x43\x29\xe9\x97\x90\x8e\x23\xa4\x32\x6a\x1b\x85\x74\x83\x33\x8e\x62\xfe\x43\x2b\x29\x8b\xe1\xa0\x8b\xdd\x0e\x05\xd3\xde\x0b\x22\x37\xe3\xf8\x09\x56\xc4\x1f\xa8\xbd\x4a\x30\xd7\x8b\xef\x24\x4d\x7f\x67\x66\x73\x1a\xe8\x73\xb9\x34\x35\xde\x7f\xe7\x18\x87\x8a\x1e\xfd\x49\x77\x0a\x6e\xec\x2b\x61\x4e\xf0\xd2\x94\xcc\xca\x76\xc1\x58\xdc\xea\xf3\x0b\xf5\xed\xec\x0c\x2e\xa2\x28\x4d\xcb\xaf\x56\xb8\x61\x14\x19\x79\xf7\x9b\x1f\xfb\x90\xbf\x10\x73\x92\x68\x56\x0a\x89\x9b\x2d\x70\xdf\x70\xd2\x2f\x35\xae\xc0\x77\xeb\xbc\xfe\x35\xd7\x68\x2b\xb6\x57\x28\xbf\xb0\xed\xec\xe2\x0b\xf4\x76\x5e\x94\x0e\x2e\x43\x81\x77\xab\xa4\xad\x18\x34\xf6\x46\xdd\xe2\x5a\xab\xfb\x82\x1f\xd5\x5b\x9b\x72\x74\x6f\xe7\x56\x01\x6c\xf7\xe9\x55\x0c\x2e\x97\x65\xee\x79\xc3\x3c\xeb\x8e\xcf\xfe\x73\x2d\x87\xf4\x9e\x60\x1c\x15\x3e\x2d\x86\x42\xac\x97\xab\x31\x8d\xf0\xc5\xab\xc6\x43\xbf\xc9\xb6\x3b\x0c\x6c\xf7\xb9\xcd\xfa\x52\xd2\xde\x7a\xaa\x53\xca\xa5\xea\xb3\x6a\xde\xcc\xf2\xa2\x9d\x7b\x40\xf6\x55\x59\x32\xc1\xfa\x84\xdf\x6e\xa7\x2c\xc1\x72\xdf\xaf\xb9\xf5\x1d\xc4\x17\x91\xde\x45\xb1\x27\xbb\x63\xf3\x0a\x59\xeb\x9d\xd7\x4d\xb5\x59\x41\xcc\x6f\xec\x69\xad\x5a\xae\x51\xce\x4a\xc5\x8c\xa9\x44\x4e\xc3\x78\x00\xbd\xeb\x4b\x88\x18\x0a\xda\x97\x40\x16\x49\x8c\x0b\xa4\x12\x9a\x8e\x54\xa5\x8d\x7c\x16\xaa\xb4\x01\x7f\xdc\xf5\xd4\x7c\x6b\x39\xb8\x72\xc6\x60\xf0\x5e\x44\x51\x91\x8e\x4c\x9a\xfb\x3a\xa8\x2b\xc2\x65\xd3\xa6\xbc\x34\x45\x1a\x15\x57\x10\x57\x31\x86\xbc\x99\x0b\x72\xd3\x30\x55\xdf\x77\xca\x58\x66\x9e\x04\xf0\x9e\x71\xa7\x95\x00\x36\x03\xb9\x4a\x70\xa8\xfc\x5f\x62\xcc\xe8\xa3\xb8\x63\x03\xf8\x6b\x28\xfe\x4e\x51\xff\x7e\x0c\xe9\x4a\xd1\x3f\x63\x1c\xc9\x23\x85\x27\x5c\x01\x11\x40\x99\x04\xba\x8c\xe3\x70\x12\x23\xc8\x79\x48\x35\x2e\x95\x0a\x35\xd6\x6f\x6c\x19\x47\x39\x65\xa1\x8d\xd3\xbe\xa9\x72\x03\x41\x3b\x94\x0b\xf5\xc4\xd9\xb1\xc5\xf9\xde\xb9\xa4\x51\x37\xe6\x23\xfc\x6e\x99\xa4\xe1\x51\xa3\x1e\xe7\x33\xe0\xd5\xd5\xea\x9a\x52\xa1\x66\xb9\x52\x2e\xd4\xb2\x88\xd8\x98\x45\x4a\x2b\x95\x03\x1c\x33\x7a\xad\x8d\x6d\x92\x8a\x6d\xb8\x3e\xad\xb8\xbb\x8c\x23\x67\x16\x8b\xd0\x9e\x63\xa9\x87\x5a\x76\x11\x65\x3a\x31\x85\xd3\xd9\x19\x7c\x40\xd9\x52\xe2\x14\x77\x85\x7b\x94\x38\x7b\x57\x38\xad\xd0\x0e\x56\xe1\xe8\xfc\x2a\x50\x5f\x83\x08\xc9\x09\x7d\xf4\x15\xd4\xae\x72\xf0\xfe\x21\x4d\x4f\xc1\xa6\xdd\x8e\xc2\xa8\x79\xc0\xb1\xbe\x32\xca\xef\xe8\xf6\x29\x8f\x54\xfe\x9f\xe3\xf4\x49\x79\x4b\x38\x59\x84\x7c\xa5\x53\xed\x3c\x14\xf0\x5f\xe4\x0c\x9e\xc3\x78\x89\x81\x03\x28\x18\x8b\xcf\xa6\xe9\xdf\x70\xf5\x1f\xe4\xcc\xf3\xb7\x00\x97\xcf\xe7\x77\x9c\x6b\xee\xfe\xa5\x0c\x0f\xa0\x67\x82\x2d\x86\x5a\x2b\x35\xba\xfb\x0e\x26\x0d\xa5\x86\xec\xa8\xb5\x57\xcb\xa5\xe8\x71\x0a\xb0\x9a\xe3\x62\x63\x39\xd3\x22\x84\xfb\x87\xe2\x82\xda\x38\xd6\x68\x9a\xc5\x9a\xce\x96\x55\xc0\xe5\x76\x66\x4e\x12\xcf\x37\x8f\x18\x39\xd7\xf2\x6d\x55\x74\x2e\xfe\x46\x31\x6d\x01\x8d\x5c\xbf\x81\x69\x6f\x6d\x65\x80\xb1\xc0\x6a\x27\xc6\xe1\xcb\xc0\xf4\x6d\xd6\x86\xc5\x44\x73\xcf\xf8\x85\x65\xdc\xe4\xdd\x16\x77\x97\x2b\xa5\x21\x4f\x5b\xf5\x9d\xae\x8d\xec\xbb\x41\xba\xb3\xaa\x76\xc7\xf4\x39\x8c\x89\xa1\xc8\x42\x50\x7b\x03\xed\x66\x08\xfd\x3f\x44\x1f\x66\x6c\x49\xa3\xe2\xd8\x42\xeb\x6c\xe8\x66\xc2\x72\xce\xf7\x7b\x76\xe0\x2e\xc4\xcc\x79\x2a\x58\x0d\x93\x04\x69\x64\xc6\x24\x06\x96\x03\xbf\x71\xb1\xe1\x44\x5e\x14\xaa\x8c\x26\xc1\x07\x94\xb5\xa4\x5e\xcc\x99\xda\x8a\x9b\x6a\xdc\xf5\x84\x67\xc1\x96\xeb\xe0\xeb\x67\xcc\xc6\x0d\xd9\x9a\x3d\x75\xcd\xba\xbe\x46\x6e\x63\x35\xcd\xca\x7f\x99\x30\x26\x4f\x8d\xe8\x5a\x8c\x68\x88\x8d\xc6\x34\xca\xaa\xd7\x44\x1b\x30\x71\x14\xcb\xb8\x76\xbd\xdd\x9e\xe1\x3b\x37\x45\x25\xd1\x9b\xb6\x47\xca\x95\xbb\x2d\xd2\x17\xdf\xad\x5b\xed\xb6\xd5\x5e\xf5\x2f\x47\xdc\xa0\xa6\x56\x15\x88\xfb\xf3\x87\x6e\xfb\x35\x3b\x9a\x35\x5b\x19\xdc\xb6\x56\x06\xe2\x00\x95\xc1\xfe\x87\x1f\xad\xd8\x0e\x56\x1a\x74\x8b\x45\xd7\xff\x39\xe3\x59\x06\x9b\x6b\x82\xe3\x1e\x96\x7c\xb7\x6a\xe0\xff\xac\x10\xf8\xf1\x87\x30\xdb\x1e\x7d\x68\x2d\xaa\x4d\x73\x77\xf2\x22\x33\xa8\x7c\x3b\x4c\x2c\x8b\x5c\xd6\x3a\xcd\x8d\x86\xdd\xf8\x15\x01\xd6\x0b\x4c\xcf\x6f\xe1\xf7\x16\xa5\xdc\x66\xab\x65\xda\x1d\xe3\x00\xc7\x78\x2a\xf7\x59\xc3\x2d\xb6\x59\xa6\x8f\x41\x7c\xdb\x58\x8e\xbb\x4f\x70\xfc\xf6\x74\x7d\xec\xf3\xcd\xbd\x4f\xff\xb6\x5d\xe8\xb6\x96\xe5\x2b\xa5\xc9\xa8\xfe\xff\xc2\x03\x29\x14\x9c\x62\x6d\xdd\xd9\xe5\x2f\x41\x77\x1f\x49\xd6\x0b\x88\xf2\x80\xb2\x78\xfb\xbf\x00\x00\x00\xff\xff\x4b\x65\xe0\x02\x51\x2d\x00\x00")

func bindataTemplates03collectionstructuretmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates03collectionstructuretmpl,
		"templates/03_collection-structure.tmpl",
	)
}



func bindataTemplates03collectionstructuretmpl() (*asset, error) {
	bytes, err := bindataTemplates03collectionstructuretmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/03_collection-structure.tmpl",
		size: 11601,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598948935, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates04collectionbuildertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdd\x6f\xdc\x38\x0e\x7f\xcf\x5f\xc1\x0d\xb6\xb0\x1d\x24\x4e\x0f\x38\xdc\xc3\x00\x79\x68\xfa\x85\x02\xbb\xdb\xbb\xa6\x87\x7d\x08\x82\x85\xc6\xa2\x67\x74\xb5\xa5\x39\x49\x4e\x33\x30\xe6\x7f\x3f\x88\x92\xbf\xe6\x7b\x32\x2d\x9a\xe0\xfa\x50\x4c\x63\xcb\x24\xf5\x23\xf9\x23\x45\xbb\xae\x39\xe6\x42\x22\x9c\x66\xaa\x28\x30\xb3\x42\xc9\x8b\x71\x25\x0a\x8e\xfa\x14\x2e\x16\x8b\x93\xba\xfe\x55\x55\x16\x46\x57\x90\xd2\xdf\x97\x97\x50\xd7\xe9\xeb\x76\x75\xfa\xaf\x0a\xf5\xfc\xda\x3f\xb2\x58\x80\x30\x60\xa7\x08\xff\x75\x57\x21\x48\x82\xca\x20\x07\xab\x20\xd3\xc8\x2c\x02\x93\x1c\xf0\x01\xb3\xca\xa2\x93\xe7\xd6\x0a\x34\x90\x2b\x4d\xcf\xd6\x75\xfa\xbb\xe2\x58\xfc\xc1\x4a\x5c\x2c\x4a\xf7\xdf\xf4\xc4\xce\x67\xb8\x5d\xb3\xb1\xba\xca\x2c\xd4\x27\x00\xd0\x6a\xe6\xcc\xb2\x31\x33\x98\x86\x75\x74\x13\xb5\x76\xff\x94\x3e\x59\x9c\x38\x03\x6e\x32\x35\x43\xd0\x68\x2b\x2d\x0d\x4c\xc4\x3d\xca\xb0\x01\xe3\xee\xa4\x27\x79\x25\x33\x88\x87\xda\x3f\x61\x86\xe2\x9e\x34\x9f\x6d\xb3\x2b\xf1\xe2\xe3\x04\xce\x48\x66\xea\xb5\x79\x33\xbd\x4e\xf0\x20\xaf\x97\x9e\x86\xad\xa4\x41\x4c\xb0\xf9\xad\xd6\xad\xc5\xb4\x17\x87\x3b\xb3\xa0\xb2\xac\xd2\x1a\x39\xf0\x4a\x0b\x39\xe9\x3b\xc2\xfd\x39\xd3\x2a\x43\x63\x8e\xdd\xd2\x5b\xad\xe3\xc4\xeb\x0d\x3b\x11\x39\x6c\x12\x96\x3a\xbc\x7f\xb9\x02\x29\x8a\xb0\x78\xb0\xf5\xcd\x0f\xd1\xda\xc5\xc1\x40\x91\x71\x01\xa6\xd7\xf6\xa1\x85\xc9\xc5\x56\xa6\xa4\xc5\x07\x0b\x2a\x1f\xf8\xb9\x79\xf4\x48\x58\x5e\xdb\x87\x38\x69\x74\xa4\xaf\x83\xae\xc3\x5d\x4d\x72\x9a\x1d\xa8\x4a\xda\xc1\x1e\x64\x55\x8e\x51\xbb\x2d\x50\x6e\x80\x90\xc6\x32\x99\x85\x0c\x9a\x69\x75\x2f\x38\x72\xbf\xb3\xa3\x77\xe4\xb4\xc7\x09\xc4\x42\xda\x7f\xfc\xfd\xdc\xbb\x3c\x39\xd2\xe7\x2f\xcf\xbf\x87\xdb\x83\xa9\x01\xb6\x0f\xd2\xa0\xb6\x20\xf1\x2b\x44\x43\x42\x89\x5a\xc0\x62\x93\x80\x90\x56\x11\xaa\xc6\x2a\x7d\x74\xaa\x7b\xad\x4f\x37\x35\x1a\xfb\x02\x48\xff\x9e\x71\xc7\xc7\x15\xfd\x34\xcc\xb7\x11\xae\xa3\x59\xc3\xab\x7b\x1e\xd1\xd4\xd8\xea\x90\x72\x50\xbd\x13\x92\xb7\x59\xc8\x8a\x62\xa9\x4a\xf9\x54\x0c\x1c\x5c\x32\x9b\x4d\xd1\xb8\x8a\xd7\x23\x99\x63\xd1\x73\x16\x38\xec\x6e\xef\xce\x86\xba\xbf\x11\x8e\x52\x14\x7b\x23\x49\x1b\x22\x13\x0c\x69\x77\xfd\xc1\x5e\xb0\xfa\x4d\x34\x76\xee\x34\x67\xa8\x35\x60\x3c\xba\x82\x92\x7d\x41\x0f\x04\x74\x48\x80\x83\xa2\x40\x19\xf7\xac\x4b\xbc\x2e\x47\x8c\xc2\x3d\xa8\x99\x9c\x60\xdf\xfc\x9e\x62\x2f\xfe\x56\xdc\xc1\x55\x7f\xc5\xad\xb8\x4b\xe3\x15\x4d\xc9\x6a\x5c\x95\x01\x0f\x29\x8a\x90\x5f\x9f\x30\xd7\x68\xa6\xa0\xfd\x2f\x1a\x10\x72\x56\xd9\xd5\x14\xf3\x44\x9e\x0b\x2c\xb8\x49\xe1\x83\x85\x52\x4c\xa6\x16\xc6\xae\x60\x95\x63\xd7\xa0\x7d\x15\x76\x4a\x3c\x25\x64\x56\x54\x8e\xdf\x35\x16\xcc\xc1\x7c\x74\x5a\x06\x2b\x7f\x10\x6b\xed\x08\x98\xd6\xb8\x00\xe9\x7b\xec\x8a\xa1\x11\x72\x52\x2c\xf7\x8b\x01\xcb\x41\x22\x0e\xb2\xd0\x15\x87\x9c\xa0\x0c\xe5\xd3\x80\x54\x16\x72\x55\x49\x4e\x97\x1d\x9a\xce\x9c\x61\x7f\xe5\xea\xad\x97\xf0\x56\x6b\x82\xf0\x0f\xf5\x09\x4d\x55\xd8\x63\xf1\x7f\x8f\x54\x61\x7f\x7c\x56\x13\x1e\x87\xe5\x33\xd9\xfe\xc8\x74\xee\xa7\xcd\xba\x0c\xeb\x67\xd2\x1b\x2c\xd0\x22\x70\xfa\x31\xcb\x2e\xef\x3a\xa0\xcd\x6e\x3f\xce\x47\x5e\xff\xf3\x28\x5d\x8d\xad\x01\xba\x77\xa2\xb0\xa8\x81\x71\xee\xdb\xc7\x28\xa7\x0b\x11\x84\xc6\xe7\x9b\x96\x28\x27\x39\xf6\x0a\xc0\xff\xa4\xfe\x62\x08\xf0\x2d\x0f\x3f\x0e\xca\x1d\x3c\xd2\x83\x70\xcf\xfa\xd4\xdb\x41\xb2\x2f\xf4\x01\xe9\x3f\xa7\xa8\x31\x1c\x72\x4d\x38\x59\x10\x6f\x87\xc6\xaa\x01\xde\x9d\x7f\xa3\x7b\x56\x54\x68\xa2\x63\x21\x27\x9d\x0d\xe2\xc6\xba\x33\xdf\x39\x78\xd9\x90\xa6\xa9\x90\x16\x75\xce\x32\xac\x17\xdf\xcb\x03\xdf\xda\x05\xfd\x1d\x35\x5b\x49\xd3\xf4\x20\x67\xd4\xb5\x2f\xf4\xbf\x36\x45\x92\x06\x18\x44\x19\xe9\xa7\xa6\x6e\xc2\xa2\x39\x2a\x50\x45\xad\xeb\x76\x75\x1a\x28\xa8\x29\xb6\x6d\x6b\xdc\x2c\x70\x4d\x71\x98\x55\x2c\x1b\x12\x28\xa9\x2b\x36\xaf\x24\xa8\x99\xbb\xc5\x8a\x4e\xc0\x3b\x2a\xf5\x68\x23\xf0\x03\x18\x9f\x9a\xbe\x01\x70\x89\x19\xf6\x19\xb4\xac\xd4\xfc\x2e\x6a\x36\xe3\xe0\x22\x67\xf9\xee\xea\x79\x65\xed\xd6\x17\x8b\xb8\xae\xad\xfa\x4d\x7d\x45\xfd\x9a\x95\x58\xc0\xf2\xfd\xc6\x7e\x17\x63\x3e\xea\x7c\x78\xed\x52\xd8\x0b\xb1\x2d\xa1\xb0\x3d\xcc\xb6\xb8\xbe\x4f\x98\xde\xde\xc3\xca\x59\x98\xb1\xf8\x48\xb9\xa1\x81\x52\x1b\x2f\xd7\xf3\x0f\x92\xe3\x43\xdc\x07\x8b\xae\x34\xcd\xe0\xa6\x0a\xb8\x73\xab\x57\x10\x46\x38\xe9\x9f\x9a\xcd\xf2\xb8\x64\xb3\x99\x90\x13\xd7\x68\x7c\x70\xf9\x2b\x59\x71\x0e\xa7\xef\xd1\x5a\x21\x27\xae\x79\x5c\xf6\x46\x04\xe3\x39\x08\x67\x0b\x75\xba\xbe\xaf\x89\x82\xde\x41\xa3\x99\x33\x51\x20\x1f\xc1\x8b\xfb\x53\x42\x26\x79\x24\xbc\x97\x97\x90\x4d\x31\xfb\xd2\x0b\x5b\xb4\xed\x04\xaf\x0b\x53\xb7\xf6\x9e\x69\x18\xc6\x3d\xdc\xde\x9d\x35\x9b\xf4\x28\xd3\xf5\xb6\x55\xff\xeb\xdc\xcb\xec\x3a\xf6\x7d\xc3\xb1\x43\xdd\x74\x72\xcf\x41\x7d\x21\x51\xcd\x43\x2d\x05\x4c\xc5\x2c\x4e\xfc\x9f\xc8\x7b\x4e\x8f\x93\x94\x9e\xbc\x9e\x3b\xf9\x31\x19\xd3\x41\x25\x72\xf8\x45\x7d\xe9\xe9\xda\xd3\xcb\x9b\x9d\x7c\xcf\x0a\xe1\xf5\x07\x83\x4f\x49\xe5\x08\xa2\x17\x26\x1a\x76\xa8\x0d\xc6\x83\x30\xb8\x66\x06\x3f\xcf\x67\xdd\x59\xe2\x34\x20\x98\x0c\x6c\xdc\xd7\xc7\x9d\x9f\xfb\xa9\x14\x7c\x77\x05\x6c\x36\x43\xc9\xe3\xe1\xf5\xf3\x3e\xe2\xc9\xa1\xa4\x1f\x88\x28\xee\xd2\x76\x28\xfd\xc0\x02\x50\xd7\x17\x80\x92\x07\x82\xff\x4d\x94\xc2\x82\x41\xeb\x59\xb6\x64\x0f\xa2\xac\xca\xde\x1c\x4d\x8d\xff\x83\x99\x35\x41\x38\x72\x97\x4e\x6e\x25\x1d\xfa\xc3\xc8\xf4\xdc\x1f\xe8\xfa\x27\x02\x91\xf7\x1a\x28\x1a\x15\xc3\x94\x19\x60\x85\x46\xc6\xe7\xc0\x45\x9e\xa3\x46\x69\x81\x86\xd7\x2a\x87\x19\x9b\x08\xb9\x44\xe0\x8f\x2b\xfb\xb4\xa5\xb8\xa0\x8d\x51\x47\xfa\x5c\xaa\x7b\xcf\xf0\x43\xdb\xab\x8f\x79\xee\x52\xbc\xf5\xa3\x6f\xb0\x34\x9d\xc1\x22\x03\x8a\x6e\xd3\xe9\xd9\xb0\x39\x55\x51\xf3\x45\xcc\x80\x19\x28\x99\x9c\x07\x27\x47\x06\x72\xad\xca\x40\x53\x33\x65\x84\x55\x7a\xee\xc4\x8f\x31\x57\x1a\x61\x8c\x13\x21\xa5\x23\xda\xae\x0c\xfb\xc5\x74\xd6\x83\xc8\x9b\x11\xc1\xcb\xe6\x5d\x87\x71\xcd\x02\x33\xa0\x4a\xe1\x19\x9a\xd2\xb3\x59\x96\x15\xac\x32\x98\x3e\xa9\xe8\xf1\xb6\xc5\x1e\xb1\xe7\x15\x3f\x03\xd3\x0f\x8d\xa0\x1b\x74\xb7\xba\xa3\x50\xd7\x6f\x91\x1f\x9d\x0f\x5c\x7c\x84\x62\xe2\xbb\xb7\xa2\x50\x5f\x91\xf7\x96\x1a\x12\x32\x72\x37\xe1\xa2\x3d\x89\xa6\xff\xd4\xa2\x64\x7a\xde\xf4\x7f\x97\x6b\xee\x60\xa5\x95\xf4\xf7\xbb\x0e\xb5\x2d\x74\x61\x75\x60\xd9\xf0\xae\x8d\x34\xf8\x35\x7d\xc9\xcd\x95\xa1\x44\x94\x9c\x9e\x3b\xf2\x75\x15\xed\x2f\x0e\x1b\x5e\xea\xef\x7e\x68\x80\xb8\x46\x82\xcc\xba\x41\x7b\x78\x0b\x11\x36\xb4\xb5\x43\xd8\x39\x8e\x5a\xd7\x20\x1e\xde\x29\x7c\xcf\x2e\x81\x16\x75\x6d\xe0\x88\x86\x8d\x2b\xe7\x93\xe8\xf4\x7c\x5b\x7f\xb0\x77\x6f\xd0\xba\xa3\xed\x0a\x9a\x2b\xc7\xf5\x03\xfd\x20\xbc\x41\x7b\xe8\xf9\xcf\x55\x0b\xcd\x51\x5f\xcf\xbb\x64\x37\x4a\xdb\x26\x08\xe8\xad\x4f\xff\x15\x2f\x5c\xcf\xdd\x49\x8c\x55\x45\x58\xe3\xe0\x54\x4e\x04\x72\x60\x26\x43\xc9\x9d\x1b\xe0\x83\xf4\x57\x89\x08\x9c\x40\x8e\xcd\x4d\xa7\x94\x71\x0e\xd1\x45\xd4\xd4\x92\x96\x63\x40\xba\x1a\x21\x52\x4c\x21\xba\x10\x3c\x4a\xe1\xf3\x14\x83\x24\x95\xf7\xb9\x88\xda\x1e\xec\x38\x49\x4c\xa4\xc8\x45\xc6\x64\x86\xcd\x4a\xa7\xd7\x95\x19\x7a\x7c\x13\x49\x29\x6d\x47\x7b\x91\x4c\x5d\x8b\x3c\x2c\x48\x6f\x94\xb6\x6c\x5c\xe0\x66\xf6\xe9\x58\xe6\x5b\xd1\x4d\xf0\xd3\x53\xe4\x1b\x07\x62\x40\xaa\x7b\xe7\x10\x5e\xe2\x2b\x6d\xfd\xcb\x06\x6f\x77\xff\x3d\xc3\x6e\xe6\x11\x79\xf7\x68\x02\x57\x57\xf0\xf2\xd1\x14\xb1\x8b\x21\x32\x26\x1d\x2b\x50\xe3\xd4\x8f\x1b\x32\x95\x49\xc0\x72\x66\xe7\xc1\xe0\xdd\xa4\x71\x2c\x5d\x38\x06\xf7\xea\x3b\x18\x29\x00\xfa\xd0\x90\x31\xb7\x2f\xef\x1c\x30\x2e\x99\x86\xd0\xf8\xc7\xc3\x1b\x9a\xf4\x4d\x9b\x7e\x43\x31\x2d\x37\xc1\x55\x90\xf7\xb7\xd1\xdd\x1a\x83\xfe\xcf\x6b\xc0\xd6\x43\xe2\xde\x5e\xed\xf2\xa4\xf7\xf2\x8c\x7c\x4b\x57\xeb\x5e\x7d\x1e\x0d\x11\x6f\xfd\x3f\xf2\x7e\x1d\xb6\x83\xbb\x5a\xc1\xc0\x1c\x9d\xfa\xd5\x32\xb1\xe5\x84\xb8\xcf\x84\xd0\x13\xe4\x45\xb7\x8a\x06\x83\xa3\x2b\x88\xb7\x8c\x23\x92\xe5\x87\x7c\x31\x53\x34\x86\x8a\x67\x5a\x48\x9b\xc3\xe9\x5f\x2f\xcc\xe9\x50\x6e\xd2\x0c\x24\x5f\x71\xbe\x3a\xe3\xf1\x85\xcc\x97\x07\x1e\x46\x3c\xeb\x56\x49\xbe\xfa\xfe\x79\x75\x12\xf4\xad\x06\x88\x6b\x4d\xed\x8f\xc8\x9a\xbd\x2f\x16\xe0\x2b\x4d\x37\x3b\x33\x37\x85\xc8\x9c\x2d\x69\x4a\xc5\x64\xb1\x38\x5b\x3f\xd3\x58\xf3\x62\xf2\x3b\x0c\x0f\x57\xde\xb8\x3c\x99\x01\x62\x30\x7e\x8f\x19\xe1\x64\xdb\x8c\xb0\x8d\xf4\xe3\x86\x85\x4d\x76\x8a\x9c\xb8\x66\xc5\xa1\x94\x34\xfb\x62\xde\xe0\xf6\x8a\xf3\x36\xeb\x7a\x43\xa0\xb5\x81\x94\x04\x03\x2e\x00\x0b\xd3\xa9\x5b\xf9\x3a\xa0\x81\xe8\x77\xff\x5a\xd3\x55\xdc\xf5\xf2\xd6\x7e\x23\xb0\x21\x86\xd7\x7e\x2d\xb0\x76\xed\xad\xb8\x7b\xe4\x0b\xbc\x0d\x60\x78\x8d\x2d\xc7\x75\x33\xae\xfe\xbc\x6b\x6f\x5e\x73\x8f\x5c\x9e\xc1\xe7\x8f\x6f\x3e\x8e\xc2\x2c\x37\x4c\x24\xda\x27\x05\x7d\xe9\x42\x9d\xa5\x55\x30\x46\xa0\xf9\xca\xd9\xe5\x0f\xa2\xc5\x1b\xb4\x6b\x08\x8f\xc6\x41\x4f\x8d\x16\xd7\x9a\xfa\x93\x16\x7f\xd2\xe2\xa1\xdf\xfc\xa2\xfd\x49\x8b\x3b\xc0\xf8\x11\xb4\xe8\x47\xb4\x9e\x14\x35\x96\xea\x1e\xf9\x71\xc4\xe8\xc7\xc3\x4e\xd0\x1a\xf2\xf2\x1a\x9e\x1e\xcb\x6d\x32\x78\xeb\x67\x32\x8f\xa4\x28\xfa\x54\xe6\x19\xb3\xd4\xcb\xf3\xa7\x45\x54\x87\x24\x9e\xf7\xf3\x6a\xee\x25\x4b\x29\x16\xfe\xf7\xbf\x00\x00\x00\xff\xff\x42\xf5\x55\x7d\x55\x32\x00\x00")

func bindataTemplates04collectionbuildertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates04collectionbuildertmpl,
		"templates/04_collection-builder.tmpl",
	)
}



func bindataTemplates04collectionbuildertmpl() (*asset, error) {
	bytes, err := bindataTemplates04collectionbuildertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/04_collection-builder.tmpl",
		size: 12885,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598911275, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates05modeltmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x3d\x4e\xc6\x30\x10\x44\x7b\x9f\x62\xe4\x3e\xfe\x7a\x5a\x3e\x0a\x9a\x84\x22\x17\x58\xf0\x24\xac\x88\x7f\x14\x1b\x21\x64\xf9\xee\xc8\xa1\x41\xa2\x5b\xe9\xcd\x4a\xef\xb5\x36\xc1\x73\xd3\x48\xd8\x90\x3c\x0f\x8b\xa9\x77\x73\xbb\xe1\x31\x79\x62\x67\xe4\x29\x95\x1e\xaf\xdf\x88\xfc\x3c\xd3\x9e\x22\x8b\x16\x87\xfb\x82\x79\x59\xf1\x74\x7f\x5e\xdd\xd8\xaf\xef\x5a\xb0\xe9\x41\x7c\x49\xf9\xf3\x28\xf5\x61\xe0\xd6\x50\x35\xb0\x54\x09\x19\xbd\x1b\x93\xe5\xed\x43\x76\xa2\x35\xf7\xf2\x7b\xce\x12\x38\xc8\x98\x32\xe4\x43\x2a\x61\x35\xe4\x74\xd6\x62\xe1\xf0\x8f\x5d\xc2\xd3\xa5\xaf\x55\x53\xb4\x70\xbd\x9b\x91\xc4\xe8\x47\xc7\x4f\x00\x00\x00\xff\xff\x31\x40\xd6\x3f\xde\x00\x00\x00")

func bindataTemplates05modeltmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates05modeltmpl,
		"templates/05_model.tmpl",
	)
}



func bindataTemplates05modeltmpl() (*asset, error) {
	bytes, err := bindataTemplates05modeltmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/05_model.tmpl",
		size: 222,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598954715, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates06primarytmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\x5b\x6f\xd4\xba\x16\x7e\x9f\x5f\xb1\x88\xa0\x4d\xaa\x69\x80\xd7\xa2\x3e\x70\x3f\xd5\x39\x20\x44\xcb\x41\xda\x08\x55\x21\x59\xe9\x58\x24\x4e\xb0\x3d\x03\xa3\xc8\xff\x7d\xcb\x97\x24\xce\x7d\x0a\xbb\x82\xcd\x13\x8d\xbd\x3e\x7f\x5e\x37\x7f\xf6\x54\x55\x82\x29\xa1\x08\x5e\xc9\x48\x1e\xb1\xbd\x07\xa7\x52\xae\xaa\xea\x14\xee\x17\x5b\x01\x67\xe7\x10\xea\x2f\x0f\x1f\xc2\xf3\x22\x2f\x49\x86\x20\x48\x8e\x10\x6f\x30\xfe\x0a\x24\x85\xaa\x0a\xdf\x46\x39\x4a\x09\x24\x2f\x33\xcc\x91\x0a\x0e\x79\x54\x96\x84\xde\x84\x6f\x8a\x04\x33\x20\x54\x20\x4b\xa3\x18\xc3\xd5\x2e\x62\x70\xdd\x1b\x3e\x87\xa3\x06\xa4\x92\xab\x55\x55\x91\x14\x68\x21\x20\x7c\xbe\xe5\xa2\xc8\x9f\x17\x59\x86\xb1\x20\x05\x55\x73\x6a\x36\x6f\x71\xcb\x0a\xda\x1b\x5b\xa6\x00\x39\x8a\x4d\x91\x84\x0a\xe2\x3d\x8a\x2d\xa3\x1c\xc4\x06\x81\x2a\xf3\x22\xd5\xff\x8f\x1b\x50\x48\x0b\xa6\x3f\x1d\x37\x0c\x8f\xc3\x55\xba\xa5\x31\xf8\x55\x15\xbe\xc7\x18\xc9\x0e\x99\x94\x70\xd2\x4c\x08\x46\xa9\xf9\x01\x70\xc1\x08\xbd\x81\x6a\x05\x00\xc0\xf4\xda\xe0\x55\x55\xd8\x9d\x28\xa5\xb7\x92\x55\x85\x34\x91\x72\xa5\x58\x5e\xf0\x77\x26\x34\xff\xc5\xfd\x5f\xc8\x8a\xdb\x6c\x72\x89\x69\x1f\xdb\x0f\xe0\x4b\x51\x64\x5d\x8e\x55\x15\xda\x59\xe1\x05\x57\xb3\xa4\x5c\x19\x6a\xaf\x51\xb4\xf6\xff\x8f\xb2\xed\xad\x22\xb0\x44\x6e\x88\xee\x07\x2d\x4c\x25\x07\x2c\x5b\x9c\xd0\xe1\x6c\xe0\xc6\x18\x5f\xea\x80\xdc\x2d\x6f\x67\x0d\x3f\x00\xdf\xe4\xc0\x1a\x90\xb1\x82\x05\x76\x07\x3a\xe1\x1b\xbe\xc6\xe2\x35\x0a\x81\x4c\x27\x7b\x67\x93\x36\x8b\x90\x81\xcf\x51\xa5\x4d\xc1\xa0\x21\x02\x9d\x4d\x07\xe3\x98\x52\xae\x81\x92\xcc\xae\x7c\x0a\x98\x71\x04\x97\xc0\x05\xbf\xc2\x1f\xe2\x4d\xc4\xf8\x26\xca\x1c\x0e\x24\xd1\xbc\x55\x4f\x58\x70\x76\x68\x8d\x15\x8e\x1f\x18\xe3\x54\xdb\xde\x3b\x57\x6b\xdb\x7d\xbb\x75\xe0\x59\x9f\xf0\xf0\x23\x8b\xca\xd4\xaf\x83\xf0\x92\xb1\x57\x04\xb3\x44\x7b\x70\x0d\x1e\xa1\xbb\x28\x23\x09\xd8\x76\x05\xa9\x1a\x84\x9d\x1a\x3d\x83\x07\x3b\x10\x05\x94\x11\xe3\x68\xfd\x14\xc2\x4b\xc6\xd4\x80\xb7\x5e\x22\xad\x09\x18\xb2\x1d\x9f\x1b\x20\x9f\x24\xc1\xa2\xdf\x8c\x9b\x87\x41\x9b\x77\x96\xb1\xf2\xc7\xe0\x7b\x48\x3d\x2f\xb9\x4e\xd2\xc9\xfa\x42\xf5\x72\xa2\x3a\xc9\x1a\xbc\x5c\xa7\xaf\xd3\xb8\x60\x13\x71\xe8\xfb\xef\x2b\xd6\x3e\x14\xfb\x12\x07\xee\xf3\x82\x96\x90\xee\x48\x23\x65\xf4\x34\x49\x18\x72\x7e\x67\x25\x64\xf1\xe7\x8a\xff\xe8\x27\xaa\xff\x3f\x11\xdf\x44\x5f\x32\xbc\xdb\xfa\xef\xac\x32\xba\x85\x6e\xf5\x5f\xf0\x77\x85\x9e\xd3\x96\x5d\xba\x94\x41\x70\x3e\x51\x55\x4b\x5e\x69\x73\x5d\x1f\x38\xcd\x92\x7d\x4a\xcf\xf6\x02\x2f\x33\x12\x0f\x12\xd2\xd6\xc6\xc4\x16\xa4\x3c\xb1\x07\xd9\x02\x91\x3a\xc9\xc6\x72\xfe\x57\xb1\x7b\xdb\x1b\x49\x04\x75\xa4\xdd\x6d\x12\x34\x2b\xcc\x1f\x60\xaa\x47\x7e\x6b\xf7\xaa\x0f\x7b\x8f\x92\xcc\x53\x9b\x9c\xf0\x82\xdf\x7a\xa1\x1e\xbd\xda\x97\x38\x63\x11\x58\x8b\x11\xcb\xd7\x28\xcc\xf9\x3e\xcb\xa5\x06\xb0\xbe\xbc\x74\x77\xfa\x4f\xba\xf0\x72\x78\xfe\xef\x4c\x98\x5a\x17\x06\xa6\x1f\x1e\x5e\x4a\x06\x61\x50\x30\x8b\x15\xd6\xf4\x66\x27\x62\xf5\xa7\xb1\x12\x22\x29\x5c\xef\xd6\x50\x7c\x55\xc7\xa5\x5e\x34\xf4\x07\x31\x0a\x9e\xa8\x09\xb7\x61\x71\xbd\x9b\x22\xa1\xf7\x1e\xd1\x04\x7c\x2d\x9d\x9d\x43\x49\x15\x6e\x30\xe7\x16\xd9\x9c\x65\x73\x94\x9f\x45\x1c\x7f\x96\xf6\xd1\x1c\x6f\xeb\xb6\xaa\x62\x11\xbd\x41\xb8\xff\x9d\x45\x65\x89\x89\xbe\x7b\xd4\x48\x1f\xcd\x37\xb5\x3e\x3f\x8c\x77\x0d\x33\x46\x97\xa4\xfa\x76\x33\xe3\x12\xf5\x4f\x60\x5e\x1a\xb1\xc3\x75\xef\xeb\x98\x28\x26\xf0\x58\x4a\xff\x7a\x17\x38\xc8\x7a\x4e\xc7\x19\x1d\xab\xd6\x21\x0a\xdc\xb1\xeb\x74\xbe\xdb\x41\xf5\xbe\xb7\x61\xea\x51\xeb\x36\x78\xf7\x2f\xa7\xe9\x67\x08\x7e\x86\xb4\x75\xfc\xd3\x4c\x20\xa3\x91\xd0\x98\x3c\x80\xc7\x0e\xc6\x29\x98\x2e\x71\xa8\x85\xba\x43\xea\x6b\x63\x54\x4f\xd1\xa2\x83\xeb\x5b\xd6\x0d\xd9\x21\x35\x52\x24\x9c\xa9\x20\x42\x13\xfc\x31\xb5\x18\x3c\xfa\x77\x44\xbb\xa7\xee\x7e\x29\xde\xa3\xb1\xae\xd5\xda\x61\x0d\xab\x77\xff\x88\x23\x4a\x7b\xce\x39\x54\xc9\xc6\x11\x35\x3d\x7a\xf4\x44\x77\x90\x0e\xd2\xfa\x25\x2b\x76\x24\xc1\xa4\x11\xad\x56\xe6\x1f\x3f\xb8\x3a\x6e\x6e\xe6\xdd\x8b\x80\xfa\xaa\x85\xaf\x99\xe5\xad\x9b\x85\x77\x06\xb4\xb3\x85\xe6\x24\x1b\x0d\xcb\xed\xd2\x95\x7f\x27\x22\xde\xc0\xb5\x5e\x47\xe7\x4b\x9b\xb6\xca\xac\xbd\xec\xd9\x36\xd7\xa2\xba\x8d\xae\x97\xd0\x35\x97\x38\xe2\xa8\x22\xdf\x18\x49\x79\xf6\x0b\x29\x3e\xdd\x31\x6a\xf6\x7f\x6c\x9a\x8f\x11\x74\xd3\xbd\xc9\xea\x04\xd3\x68\x9b\x89\xb3\xdf\x91\x7a\xed\xa5\xcb\x5b\x83\x53\x10\x1d\x65\x4b\x49\x36\xa3\xa4\xee\xe8\x71\x62\x6a\x0d\x2b\xad\x8c\xa0\x9f\x53\x55\xc6\xe6\xb2\xfb\x3c\x21\xf2\xd2\x79\x1b\xb0\x28\xef\xd4\x45\x92\x81\xa7\x91\xbd\x09\x84\x56\x2e\xcd\x3d\x0f\x20\x63\xfd\x93\xca\x57\xe7\xbb\x5d\xa2\xdb\xa7\x47\x17\x0a\x9c\x73\x6b\x49\xad\x0c\x74\x9a\x2f\xf2\x32\x18\x6f\x12\xcb\x68\xc2\xd6\x44\x37\x4d\x07\x2a\x68\xf2\x21\xe6\x03\xcd\x87\x4f\x31\xe9\xa1\x2f\x31\x8d\xb5\x7e\x8b\xf9\xf4\xf9\xcb\x5e\xd8\x58\x07\xc1\x93\x25\x9f\xff\x89\xcf\x31\x63\x1e\x53\xb2\x77\xf8\x0c\x33\x21\x84\x7b\xfa\x65\xa6\x67\x1e\xa0\x6b\xf5\x4e\x67\xe9\x1d\x0e\x36\x8f\x35\x7d\x4e\x0d\xe3\xf5\xfb\x1e\x86\x2e\x51\xbc\x62\x45\xee\x76\x2c\xf5\xb7\x2d\x76\xe7\x87\x80\x03\xfa\x94\x32\xf4\x0d\xd9\x4e\xd7\xeb\x76\x27\x92\x9a\xae\x3b\xf9\x08\xe2\xfa\xe5\xdb\x16\xd9\x5e\x79\xe5\xc2\xec\xf6\x82\x96\x5b\xe1\xb6\x7b\x85\x60\xe0\x44\x01\x1c\x05\xa4\xac\xc8\x3d\x37\x0d\xd5\x87\x5a\x95\xea\x99\xa1\xef\xf0\xae\x29\xdd\xeb\x68\xd0\x21\x93\x17\x28\xd2\x41\x94\xde\x16\xe2\x4d\x24\xe2\x8d\x4b\xc8\x90\x49\x0a\xe4\xf4\x58\x40\xae\x86\xf5\xd9\x43\x14\xf3\x33\x78\x70\xe5\xad\xcd\x1c\x97\xe3\x49\xd7\xaf\xe7\x70\xa2\x58\xf7\x53\xcb\x46\x4c\xb0\x6d\x2c\xda\xa2\xe6\x70\x83\xc2\xfc\x26\x62\x8e\x04\x75\xae\xf1\x12\x63\x92\x12\x4c\xe0\x58\xe7\xc4\x01\x3f\x82\xf4\x71\x7d\x93\x4c\x27\xf5\xa6\x9d\xf1\x00\x7c\xe7\x4a\xdf\x7b\x1c\xb7\xba\xca\x28\xad\x0b\xa5\xfe\x3f\x3d\xfa\xdc\xd7\x52\x06\x5b\xe9\x28\x07\x76\xa8\x9e\x1c\x10\x29\xcf\x94\xc0\x6b\x3e\x3a\x8f\x45\x1d\xc1\x3b\x22\x57\x5c\x83\xf5\xf0\x1e\x3b\xa5\x3b\x28\xc9\xa6\xdf\xb8\x6d\x3e\xea\x34\xd0\xe4\xc7\x34\x88\x5e\x58\x69\x10\x7e\xec\x68\x50\xab\x39\x3a\x92\xa3\xa5\xe8\x07\x75\x62\xd4\xbf\xac\x85\xef\x31\x8b\x54\x2b\x30\xfe\x59\x8a\xe3\xff\x08\x17\xb5\x85\xa6\xc7\xfd\x00\x3e\x7d\xee\xea\x90\xce\x43\x56\x6f\xb0\xd2\x4d\xc2\x06\x8a\x59\x24\x1d\xab\x0f\x94\x7c\xdb\x62\x17\xbc\x89\xd9\x51\x55\x35\xb3\xa5\xac\xe4\xba\x71\xb0\xda\x4a\xdb\x77\x9a\xff\xfd\x1d\x00\x00\xff\xff\x4c\x62\x02\xad\xcb\x1c\x00\x00")

func bindataTemplates06primarytmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates06primarytmpl,
		"templates/06_primary.tmpl",
	)
}



func bindataTemplates06primarytmpl() (*asset, error) {
	bytes, err := bindataTemplates06primarytmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/06_primary.tmpl",
		size: 7371,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598980518, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates07fieldertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xeb\x8f\xdb\xb8\x11\xff\xbe\x7f\xc5\xd4\x48\xd6\x92\xe1\xc8\xc9\x57\x1f\x52\xe0\x1e\xe9\x35\x28\x92\x0b\xea\xb4\x05\xba\x58\x2c\xb8\xd6\x78\x4d\x9c\x4c\xf9\x48\x5a\x77\x5b\x41\xff\x7b\x41\x8a\x7a\x51\xd4\xc3\xd9\x75\xbc\x69\xd7\xdf\x56\x22\x87\xf3\xf8\xcd\x6f\x86\x14\x37\x4d\x43\xdc\x50\x86\x30\xd9\x50\x8c\x42\xe4\x13\x78\x95\x65\x17\x69\xfa\x0a\x5e\xc4\x07\x09\xcb\xb7\x10\xe8\x27\x8b\x05\xfc\x18\xef\xf6\x34\x42\x90\x74\x87\xb0\xde\xe2\xfa\x57\xa0\x1b\x48\xd3\xe0\x23\xd9\x61\x96\x01\xdd\xed\x23\xdc\x21\x93\x02\x76\x64\xbf\xa7\xec\x2e\xf8\x4b\x2e\x14\x28\x93\xc8\x37\x64\x8d\xc1\x45\x42\x38\xdc\xb4\x06\xbc\x85\xcb\x52\x50\x9a\x5d\xa8\xe5\x7e\x46\xa9\xdf\x8a\xef\xc3\x90\xa3\x10\x70\x87\x52\x80\xdc\x22\x10\xf3\x20\xde\xc0\x9e\xc7\x09\x0d\x31\x84\xa9\xd6\x7f\x1a\x5c\x6c\x0e\x6c\x0d\x5e\x9a\x06\x7f\xc7\x35\xd2\x04\x79\x96\xc1\xac\x94\xed\xb7\xc4\x7a\x7a\x22\xcc\x0a\x8d\x56\x92\x1f\xd6\xf9\x10\x1f\xbc\x52\xf1\x34\x9b\x03\x72\x1e\x73\x1f\xd2\x0b\x00\x10\xbf\x53\xb9\xde\x82\x9e\x1c\xbc\x67\x21\xfe\x71\xf5\xfa\x3a\x7f\x05\x69\xca\x09\xbb\x43\x78\x91\x8b\x56\x3e\xcc\x97\xd4\x9e\x54\x23\xd6\x44\x20\xa4\xe9\x8b\xda\xf4\x2c\x5b\xc2\x62\x51\x3d\xcc\xf5\xd5\xa3\xd5\x8f\xa3\x3c\x70\xa6\xbc\xa4\xe2\x52\x33\x2e\xb0\x66\xcc\x81\xd1\xc8\xa8\x81\x2c\x54\x4b\xe6\x52\x8c\x04\x46\x23\x63\x89\x08\xfe\xc5\xc9\x7e\xe3\x15\x96\xbf\xe3\xfc\x3d\x4b\x48\x44\xc3\x0f\x71\x88\x91\x56\x79\x0e\x93\xd2\xc5\x34\x7f\x99\xdb\xbc\x84\xe9\x4b\x31\x85\x4d\xcc\xe1\x8e\x26\xc8\x60\xa7\xe6\x2c\x2b\x38\x4c\x27\x73\xa8\xf4\xf2\x7c\xff\xa2\x19\xd6\x7f\x23\x8f\xff\x49\xa2\x03\x8e\xc3\x8d\x18\x1d\xd8\x52\xf0\x17\x46\xf6\xab\x87\x36\x4d\x17\x33\x2b\xcc\x69\x4a\x37\x80\xbf\x99\x65\x02\x65\x12\x4c\x18\x8d\x26\x59\xa6\x5f\x15\xd2\xc5\xa7\x58\xdb\x91\x65\x9e\x8e\xb6\x7a\x6d\xde\x7d\xbe\xdf\x63\xe7\x68\xdf\x8c\x6e\xcd\x52\x2b\x99\x59\xee\xe5\x8b\x99\x1a\x66\xb3\x45\x69\x76\x43\xf9\x86\x30\x07\x20\xf5\x5f\x21\x6e\xc8\x21\x92\x4b\x7b\xfa\x23\x01\x14\x18\xd9\x61\x8e\xd2\x16\x12\xd5\x6a\x99\xc1\xe3\x7b\x51\xa2\x66\x24\x83\x0d\x01\xb1\x26\xb1\x1f\x82\xb7\x71\x1c\x9d\x19\x7b\x76\xc8\xde\x8b\xce\xa0\x35\x58\x64\x43\x22\x81\xa7\x0e\x53\x1e\xa0\xd5\xa9\x08\xa3\x25\xb8\x37\x5a\xda\xd4\xb3\x31\xc4\x00\xe9\xc3\x5b\x3b\xeb\x8e\x48\xb8\xaf\x91\x6b\xcd\xfc\xae\x4a\xc1\x5f\x89\xd8\x92\xdb\x08\xb5\xfc\x23\xa2\x3b\xa6\x1a\xb4\x65\x7f\x3b\x15\xc1\xc1\xda\x0d\xaa\xd5\x8d\xd7\x20\x28\xde\x2a\x67\x1b\x3d\x5d\x2c\x5b\xe4\x78\x15\xa3\x36\x6a\xda\xfa\xfc\x70\x2f\x71\x15\xd1\x35\x36\xc6\xd4\x64\x0b\xc9\x29\xbb\xf3\x3a\x6a\xcf\xac\xaa\x39\xfd\xfa\xfb\x4d\x05\x55\x4f\x8a\x91\xe8\x5c\xf5\xa1\xcb\x39\x56\x53\xf3\xce\xd7\x4a\x4d\x47\xf7\x52\x8f\x9c\x38\xdf\x5e\xc2\x54\x65\xec\xdb\x6e\x8e\x57\x27\x08\xe8\x6a\x64\x40\xe7\x90\xe4\xab\x56\x51\xf5\xc1\x43\xce\x9f\x00\x17\xc6\xbc\x4d\x87\x1e\x61\x61\xf5\x34\x27\x24\xaf\x6a\x5a\xbf\xe7\x9c\xdc\xaf\xe8\x7f\x10\x5e\xfb\xbe\xcd\x9d\xb9\xa5\x4e\x7e\x1c\x53\x6b\xeb\x44\x61\x55\xb6\x31\x74\x4a\x37\x70\x93\xcc\x21\xfe\x55\x79\x48\xab\x12\x78\x56\xdf\xee\x7f\xa7\x5e\x1f\xaf\xd9\x4d\x32\xa8\x98\x76\xa8\xf2\x9d\xc7\x62\x69\x39\xd0\x6f\xbb\xb9\xa6\xf7\x62\x01\x3f\x16\xdb\x7e\x2a\x81\x0a\x60\x31\x7b\xb5\x37\x03\x73\x43\xc6\x19\xf9\x03\x11\xf8\x30\x43\x2f\x47\x59\x5a\x31\x78\x09\x25\x65\xb4\xe7\xc2\x93\xed\x09\x2b\x62\xf9\xdb\x9f\x88\x24\xb7\x44\xe0\xc7\x58\x7e\x3c\x44\x91\xe7\xc3\xe5\xe5\x43\xd1\xe4\xea\xdc\xbe\x10\x59\xcd\x1a\xd8\x2e\xd2\x74\x03\x77\xc8\x90\xd3\xb5\x15\x99\xab\xeb\x7a\xda\x3b\x63\xd2\xd8\x12\xd6\xb2\xab\x55\x8f\x87\xbb\x17\x78\x50\x07\xa3\x7e\x12\x77\x7b\xa5\x7e\x9a\x0a\x6d\x64\x2d\x79\xe0\x8d\x3e\x42\xb2\x67\x8c\x02\x95\x12\xdb\x98\x69\x5b\x66\x3b\x5c\xfd\x14\xcd\xdf\xcc\x81\x4a\xdc\x29\x95\x72\x0a\x34\x6e\x6e\x79\xb1\xa3\x87\xa1\x1b\x88\x90\x79\x66\x96\x0f\x7f\xae\x50\x51\xba\x3a\xcb\x1c\x8e\x18\xe8\xe1\x2b\xe6\xaf\x17\x2b\x19\xc7\xb0\x23\xec\x3e\x8f\xbe\xd0\x16\xc8\x2d\x96\xc5\xcb\xf2\xcc\xc4\xef\xf5\xc9\x98\x68\x3f\x3c\xe2\x09\xe1\x79\xd4\x3b\x42\xfe\x48\x01\x3f\x26\xe8\xf4\x88\xa0\x37\x88\xa8\xe1\x3b\x4d\x48\x34\x3f\x33\x50\xf1\xdb\x63\xb8\xaa\x19\xe8\x77\xf9\xb2\x62\x57\xa5\xc4\x68\x72\x85\x3e\x18\x76\x8a\xd6\x92\x85\x51\x4f\x09\x7f\x17\xe1\xce\x68\xd8\xb7\x8e\x72\x9d\x73\x15\x38\x8e\x53\x1a\x53\x46\xa1\x4d\xfd\x66\x63\x30\xa0\x4c\x62\xa1\x37\x3c\x76\x0e\x37\x89\xdf\xa1\x55\x8f\x3f\x61\x24\x16\x8d\x1e\x0f\x55\xc3\x09\xb4\x91\x4a\x1e\xe3\xdb\x11\x0e\xf3\xaf\xe8\x75\xbb\x27\x79\x3c\xa7\x0d\x8b\xef\x77\x46\xe7\xdb\x75\xcc\x24\x65\x07\x1c\x60\x06\xa3\x24\x89\x24\x72\x46\xa4\x4e\x3a\xa1\xb2\xc6\x2b\x1f\x09\xb0\x92\xd2\x9d\xce\x15\x11\xe0\x6f\xe0\x45\xc8\xc0\xb3\xc4\xfa\x3e\xbc\xee\x99\x5b\x4c\xb3\x67\xc1\x1b\xe7\x9c\xb2\x93\x2b\x87\x83\xd4\xca\x17\x95\xc0\xf2\x74\x30\x8e\x25\xa8\xea\xe7\x6d\x1d\xe0\x75\x37\x41\x40\x0b\x76\x8a\x57\x86\xa0\x57\x15\x7f\xcb\xb9\x6a\x29\xaf\x3b\x3b\x8c\x8f\x5b\x74\xf3\x75\xb2\x56\xd7\x9a\x53\xf1\xc7\x15\xbd\xee\xaa\x66\xf0\x48\xcc\x70\x3e\xd7\x39\x2a\x9b\x8a\xf2\x49\x7d\xd9\xb1\xe6\x39\xa9\xe6\x8b\x5a\xbd\xe6\x39\xad\x4a\xf2\x25\x4c\x5f\x7e\x9e\xda\x3d\xdf\x4b\x31\x31\x07\x00\xae\x03\xdc\xd1\x0e\x36\xa7\x03\x37\x49\x45\x0b\x52\xb3\x9e\xab\x39\x30\x87\x05\x0d\xba\x50\xf3\x6c\x02\x71\x2d\x54\x1c\x24\x34\x86\x66\xd9\xf2\xd4\x14\xf3\x4c\x30\xcf\x04\xf3\x54\x09\xa6\x1b\xe6\x5d\x09\x34\x1b\x9b\x41\x7d\xf9\x30\x7b\x4e\x88\x9e\xa0\xb8\xf9\xb3\xe3\x8d\xd9\x69\xb6\xbe\xd4\xd5\x7f\x4f\xa4\x0c\x64\x35\xd8\xb5\xcd\x19\x3e\xc5\x6a\xbb\xa1\x0e\xdf\xda\x4e\xb3\xc9\xff\x45\xe7\x8a\x21\xfc\x9e\x8f\xc9\x3b\xd7\xa0\x26\xc6\xd4\x95\xe2\xbd\xaa\x28\x03\x52\x3b\x0e\x2b\x8d\x84\xae\x53\xca\x31\xdb\xa5\x81\x83\xaa\x56\xca\x7f\xd9\xa9\x45\x9a\x3a\xc1\x7c\xd4\xe9\x63\x0f\x0f\xb9\x8f\x40\x86\xcf\x26\x0d\x36\xda\x47\x94\x8d\xad\x4e\xc1\x0e\xd6\xce\xc5\xda\xee\x34\xb7\x39\xee\x29\x6f\x9c\x50\x39\x7e\x93\xe3\x86\x83\xd9\xdd\xb8\x96\xee\xda\xe3\x3c\x2d\x8c\x74\x50\xde\x51\x28\xe9\x44\x88\x8b\xd4\x7a\x11\x72\x66\x1e\x73\xba\xa3\xd1\xbe\x9a\xc0\xdb\xfd\x6b\x4f\xdf\xea\x84\x46\x5d\xfe\xa8\xae\xf5\x58\xd0\x8c\xc9\xdf\xa7\x0b\x18\xb7\xb5\xb6\xcf\x06\x1b\x95\xa3\x1a\x94\xe3\xfd\xe1\xaa\x56\x7d\xc5\xfa\xcc\xe0\x6e\x65\x59\xf7\xd5\x86\xe2\xc9\x62\x06\x9f\x7f\xf9\xe9\x97\x25\x08\x94\x7a\x31\xb1\x26\x8c\x21\x07\x22\x8a\xb4\x50\x1a\xe9\x70\x58\xf7\xfe\xd2\xb4\xf7\x62\xc6\x59\x33\xbc\x7d\x85\x43\xff\x75\xba\xbb\x50\xb5\x6f\xff\x4a\xdb\xea\x2e\x87\x86\x5c\xd7\xe7\x7f\xa8\xdd\x48\x5c\xa1\xfc\xc4\xe9\x8e\xf0\xfb\xbf\xe1\xfd\x4a\xdf\xa5\xe9\xbc\x0f\xa0\x15\xaa\x3e\xd9\xc3\x0e\xe5\x36\x0e\x87\x2f\x05\x7c\x22\x5c\xe4\x17\xa3\x44\x6d\x85\x11\xb7\x03\xf2\xbb\x3d\x4f\xea\xf2\x47\x9d\x41\x72\x63\x56\x28\x6d\xca\x2c\x6f\x88\x18\x0b\xb4\x03\x38\x4c\xb4\x55\x13\xd7\x74\x2b\x3f\x34\xc2\xcd\x97\xf3\x92\xae\x3e\xe3\x1f\xf2\x1f\x6c\x47\xb8\xd8\x92\xa8\xfe\x0d\x59\xbd\xf8\x50\x3e\x7e\x65\xc9\x1a\xe2\xf7\x84\x70\xb8\x6d\xf8\xa1\x62\xb3\x0b\x9b\xf1\x2e\xd5\xc8\xfe\xb2\x56\x23\xc7\x7e\xde\xeb\xe1\x08\xd5\x7d\x71\x9e\x4b\xe9\xd0\x5f\x2d\x53\x5f\x7f\x70\xb9\x72\x95\xa0\x74\xa2\x72\x9c\x77\x75\x7d\x7b\x2f\xd1\xd3\xb1\xf1\xfd\xef\xf4\xc2\x7f\xea\xb9\xcc\x36\x99\x74\xdf\xda\x69\xb0\x4c\x93\x5c\xec\xef\x9c\xd3\x1c\xe3\x2a\x83\x93\x29\xc8\x18\xf6\x0a\x24\x06\x30\x01\xbc\xe3\x7c\x09\x2f\x93\xc9\x7c\xcc\x3d\x23\xe4\xdc\x45\xc7\xb7\x72\x7e\x4a\x37\x7e\xa8\x39\xd1\xb7\x43\xf7\xbf\xe1\x41\xfb\x50\xc1\x9d\x41\x63\x2a\xfc\x40\x81\x6f\x5e\x66\xbc\x95\xfe\xdc\x79\x1b\x71\x24\x25\xe4\xcc\xf2\x73\x9b\x98\x9e\xf9\xe0\xff\x99\x0f\x86\x7b\xfd\xb2\x70\xe5\xcb\xaa\x9a\xa5\xfc\xda\x51\xb2\x46\x5c\x99\x15\xb5\x8e\x22\xdf\x74\x16\x82\x3d\x81\x11\xae\x65\xcc\xa1\x61\x0e\xd4\x4c\xf1\x07\x2b\xe5\x91\x79\xd7\xc8\x32\x13\x96\xe1\x66\xb5\xc8\xbc\xea\xaa\x93\x9e\xef\x72\x5c\xd2\x21\xd3\x76\x8b\x1b\x3a\x2d\xe4\x7c\x8c\x65\xde\x3a\xcc\xcd\xbf\xcc\x39\x50\x13\xc6\x28\xd8\x54\xc2\x96\x24\x05\x5a\x54\x57\x2d\x91\x07\x93\xc1\xf6\xf4\xc9\xdc\x47\x2d\xf5\xfb\x6f\x00\x00\x00\xff\xff\xb5\x86\x2f\xfc\x24\x38\x00\x00")

func bindataTemplates07fieldertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates07fieldertmpl,
		"templates/07_fielder.tmpl",
	)
}



func bindataTemplates07fieldertmpl() (*asset, error) {
	bytes, err := bindataTemplates07fieldertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/07_fielder.tmpl",
		size: 14372,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598874066, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates08singlerelationertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xd1\x6b\xdb\x3e\x10\x7e\xf7\x5f\x71\x84\xfc\x9a\x38\x38\xce\xef\x39\x23\x2f\x2b\xdb\x08\x6c\x63\x34\x65\x7b\x18\x63\x08\xfb\x9c\x8a\xca\x92\x91\xe5\x74\x43\xe8\x7f\x1f\x92\x6c\x25\x76\xd2\xce\x2b\x2b\xf3\x43\x69\xa4\xd3\xf7\xdd\x7d\xf7\xdd\x69\x9d\x63\x41\x39\xc2\xa4\xa6\x7c\xcf\x70\x29\x91\x11\x45\x05\x47\x39\x81\xa5\x31\x91\xd6\x4b\x98\x8a\x46\xc1\x7a\x03\xa9\x3b\x59\xad\xe0\x5a\x94\x15\x65\x08\x8a\x96\x08\xd9\x1d\x66\xf7\x40\x0b\xd0\x3a\xfd\x48\x4a\x34\x06\x68\x59\x31\x2c\x91\xab\x1a\x4a\x52\x55\x94\xef\xd3\x9d\x83\xbf\x09\xe8\x40\xb9\x42\x59\x90\x0c\xd3\xe8\x40\x24\x7c\x7f\x3c\x72\x03\x57\x01\x5a\x9b\xc8\x26\xf0\x0e\x55\x17\xf0\x41\xe4\xc8\xfe\x94\xb1\x68\x78\x06\x73\xad\xd3\x1b\xcc\x90\x1e\x50\x1a\x03\x8b\x40\x12\x9f\xe1\xcf\x3b\x59\x60\x11\xe0\x95\x6c\x32\xf5\x96\x22\xcb\x63\x98\x77\xa7\x2e\x3a\x01\x94\x52\xc8\x18\x74\x04\x00\x50\x3f\x50\x95\xdd\x41\x07\x91\x6e\x79\x8e\x3f\xbe\xfe\xff\xad\xbd\xd6\x5a\x12\xbe\x47\x98\x06\x0e\x2b\x75\x47\x5f\x5b\xcd\xb5\xa6\x05\x70\xa1\x8e\x31\xe9\xb6\xde\x31\x9a\xa1\xeb\x88\x45\xc9\x48\x8d\xa0\xf5\xb4\xcf\x62\xcc\x1a\x56\xab\xde\xb9\x2f\xd1\xbd\xf1\xec\xb4\xe8\xc1\x7e\x12\x4e\xa7\x00\x6c\x3f\xd7\x5c\xeb\x82\x13\xbd\xd2\x73\x50\xd8\x6c\x80\x53\xd6\xd6\xd5\x7d\x12\x55\x23\xb9\xbd\x48\xec\x9f\x70\x67\xac\xb5\x90\xe7\x27\x3c\x6d\xe8\xc5\x72\x4f\xf2\xba\xd2\xda\xbd\x1b\x93\xd3\x91\xd3\x3d\xf2\x6a\xb6\xff\xb8\xe3\x1c\x0b\xd2\x30\xb5\x1e\x26\xe1\xf2\x75\x7d\xac\xd3\x2f\x92\x54\x45\xe8\xf1\x1b\x29\xb7\xfc\x40\x18\xcd\xbb\x26\x39\x17\x24\x30\xa9\xa4\x38\xd0\x1c\x73\xa0\xfe\x3e\xf4\x7c\x0d\xb3\xff\xea\x19\x14\x42\x42\x69\x1d\x62\x7f\xdf\xce\x26\x49\x08\x48\xa0\x67\xc6\xd8\x65\x63\x22\xef\xf6\xdd\x0b\xbb\x7d\x88\xff\xb4\xdb\x13\x5f\x02\xf4\x2c\x1f\x7b\xa9\xfe\x9a\xe3\xa3\xe0\xcd\x97\xb1\x3d\x2d\xda\x2a\x2e\x5a\xf6\x77\x06\x1c\x04\x8f\x99\x8c\x5e\x32\xaf\x49\x8d\xb7\x3f\x2b\xbf\xcf\xfa\x58\xc8\x6a\x7c\x2e\xc5\xe9\x74\xf5\x1c\xff\xc8\x3c\x1e\x47\x11\x1c\xad\x1b\xf3\x63\xcd\x16\xd7\x76\x66\xae\xc4\x7b\xf1\x80\xf2\x9a\x94\xc8\xa0\xcf\x1b\xfb\x81\x1a\x3c\xb2\x63\x27\xee\xed\x5b\x27\x72\x3a\x5f\x5c\xae\x3e\x7e\x65\xc3\x86\xda\x8f\x94\xf3\xe9\x16\x2d\x8e\x3b\xe2\x34\xb5\x11\x5a\x0c\x17\xc1\xc8\x1d\xf0\x99\xb0\x06\x2f\xed\x00\xef\xb3\x83\xbd\xf6\x63\xef\xd6\x40\xb0\xfe\x79\x75\x93\x76\xc2\xe2\xe7\xac\xad\x7f\xbf\xb1\xc2\x5a\xff\x15\x00\x00\xff\xff\xa7\x32\x42\x80\x5c\x08\x00\x00")

func bindataTemplates08singlerelationertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates08singlerelationertmpl,
		"templates/08_single-relationer.tmpl",
	)
}



func bindataTemplates08singlerelationertmpl() (*asset, error) {
	bytes, err := bindataTemplates08singlerelationertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/08_single-relationer.tmpl",
		size: 2140,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1597612013, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates09multirelationertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5d\x8f\xe2\x36\x14\x7d\xe7\x57\xdc\xa2\x29\x24\x28\x84\xe9\x2b\x12\x95\xa6\xab\x6d\x35\xd2\x4c\x55\x2d\xab\xf6\x01\xa1\x55\x9a\xdc\xcc\x58\x38\x4e\xe4\x18\xb6\x2b\xcb\xff\xbd\x72\xec\x84\x7c\x90\x81\xa1\xa0\xdd\xa9\x76\x9e\x86\x38\x3e\xf7\xde\xe3\x7b\x4e\x6c\x4b\x19\x61\x4c\x18\xc2\x30\xd9\x52\x41\xa6\x1c\x69\x20\x48\xca\x90\x0f\x61\xaa\xd4\x40\xca\x29\xdc\xa4\x5b\x01\xf3\x05\xf8\xc5\x93\xd9\x0c\xde\xa5\x49\x46\x28\x82\x20\x09\x42\xf8\x8c\xe1\x06\xe2\x94\x83\x78\x46\x48\x82\x2c\x23\xec\xc9\x7f\xd4\x68\x1f\x2a\x30\x20\x4c\x20\x8f\x83\x10\x81\x24\x19\xc5\x04\x99\x28\x86\xfc\xc1\x2e\xe0\xf0\xa9\x77\xde\x02\x46\x52\xfa\xbf\x07\x09\x2a\x25\xd5\x40\x47\xbf\x8b\xa2\xf2\x85\xc7\x34\x42\xba\x47\xcc\x8f\x87\xf7\x07\xf1\x96\x85\xe0\x48\xe9\x7f\xc0\x10\xc9\x0e\xb9\x52\x30\xa9\x62\xb8\x1d\x78\xa7\xa4\x04\x26\x25\xfa\x52\xf0\x6d\x28\x7e\x25\x48\x23\x0f\x92\x22\x87\x2a\xb0\xfe\xe5\x02\x72\x9e\x72\x90\x03\x00\x80\xfc\x33\x11\xe1\x33\x94\x30\xfe\x3d\x8b\xf0\x9f\xd5\xed\xda\x0e\x4b\xc9\x03\xf6\x84\x70\x53\xc5\xd1\x54\x97\x29\xe4\x9a\x73\x29\x49\xbc\x1f\xf7\xef\xf3\x25\x25\x21\x16\xab\xa1\x11\xc2\x20\x47\x90\xf2\xa6\x19\x41\xa9\x39\xcc\x66\x8d\xe7\xa6\xc4\x62\x8e\x89\xbc\x07\xd5\x43\x3a\xb0\x23\xd2\x87\xf4\x33\xf2\x77\x41\x82\xb4\x16\xf3\x97\x20\xc7\x8f\x5f\x32\x74\x4d\x3e\x8d\x79\x4a\x79\x90\x6e\xf4\xec\x82\x0b\xdf\x99\xd4\x83\x96\x33\x95\x72\xab\xc8\x24\x86\x1f\xd2\x8d\x25\xa0\xfc\xe3\x28\xb6\x9c\x19\xea\x72\xff\x2f\x1e\x64\xb1\x53\xd2\xfa\x9e\xf3\x7b\xb6\x0b\x28\xa9\xd6\xe6\xcf\x80\x6e\xd1\x83\x61\xc6\xd3\x1d\x89\x30\x02\x62\xc6\x61\xa7\x07\x40\x7c\xc9\x70\x0e\xe3\x1f\x3f\x8e\xa1\xea\xcd\x58\x2f\xd8\x1c\xc6\x5d\x4a\xc6\x43\xbb\x8e\xfb\x14\xeb\x34\xb5\xd8\xff\x23\x2d\xda\xa9\xe2\xdf\x56\x24\xa5\x16\x4a\xad\xad\xfc\x6e\x20\x58\x2c\x80\x11\xda\xaa\x5c\x60\x92\x69\xfa\xea\xef\x1b\xca\xa4\x6a\xbc\x78\x5a\x08\x18\x69\xc0\x83\x95\x00\xb2\xa8\x91\x77\x6f\x71\x4a\x4d\xa4\x44\x16\x15\xab\x7d\x4a\xd0\x20\xcb\x90\x45\x4e\x1f\xe0\xeb\xf0\x3c\x93\x18\x4b\x45\x03\xeb\x3d\xc5\xe4\x10\x5e\xb3\x1b\x5d\xab\x2b\x5b\x6b\xf5\x4f\xf1\x38\xc2\x38\xd8\x52\x31\x1f\x9c\xd7\x76\x56\xf4\xdd\xb6\x2b\x53\xb0\x4d\x57\xf9\x61\xe1\x0e\xe3\xca\x5f\x5a\x9d\x66\x72\xb2\x29\x30\x42\x07\xc6\xe2\x7e\x43\xd1\xf0\xa0\xfc\xc2\x1e\xd7\xc1\x7f\xd9\xe4\x5c\x70\x12\x93\xc6\x6a\xdd\x30\x3a\x4f\xd3\x66\xa8\x73\xbf\x7d\xb7\x6b\xc1\xd6\x9a\xa9\x21\x09\xbd\x74\x9f\x4a\x5f\x9f\x2f\xc0\x24\x7c\x92\x0a\x9a\xb2\xb6\x9c\x55\xd2\x30\xbf\x5f\x74\x9a\x29\x20\xcd\xb1\x93\x0e\xb9\x4a\x1e\x23\xe7\x14\xb0\x15\x59\xbb\xbd\xc9\x6a\xfd\x9d\xa3\x36\x46\x4c\xef\x5c\x4c\x72\xb9\x91\x5c\x51\x9a\x91\xe0\xd0\xab\x5e\xd0\x6e\x52\x2b\xf2\x80\xf4\x4a\x4a\xfa\x25\x78\x27\xae\xac\xc1\x3b\x71\x6c\xa7\x41\x74\xa3\xeb\x10\x7b\x3d\xfe\x7f\xd4\x78\xf1\x8f\xea\x19\x9d\x56\xe4\xee\xc1\xd0\x10\xad\x77\xbd\x69\x0c\x59\x9a\xe7\xe4\x6f\x8a\x46\x7f\x3e\x3c\xda\x16\xb3\x99\x59\x5b\xf7\xa0\x58\xa4\x03\x25\x0f\x0f\x8b\xa7\xfd\x21\x26\xb1\x5d\xdf\x9f\x81\x22\xbb\xd0\x67\xd4\x85\x29\xfc\xf4\x96\x78\xb1\xc9\x1d\xff\xf8\x8f\x2a\x16\xfa\x78\x72\x5e\x43\x54\x3f\x8c\x6b\x51\x56\x45\xf1\x6b\x63\x11\x6f\xc2\xf1\x5a\x55\xbf\xd6\xf5\x1e\x90\x5d\xcf\xf1\x1e\x90\x1d\xdd\x72\x10\x26\xbc\xef\x6e\xd6\xec\xa2\xdb\x7d\xff\x1d\x33\x14\x3b\xe3\x82\x66\x72\x76\xef\xdf\x7e\xfd\x6f\xbd\x69\xef\xe5\x95\xf7\xd5\x1d\xfc\x93\x2e\x0f\x72\xf0\x7d\xff\x2d\x5e\x20\x94\xe7\xd6\x24\xd8\xa0\xb3\x5a\xf7\x1c\xfb\xbd\xa2\x07\x4d\xa5\xb5\x9d\x64\xeb\xd8\x76\xf2\xe5\x43\x73\x63\xdc\xd9\xa7\x5b\x46\x65\xfb\xdc\xfc\xdf\x2e\x2c\xa0\xef\xd2\x02\xbe\xb9\x8b\x8b\xa6\x2f\x94\xcb\xb4\x22\x6b\x58\x74\x79\x38\xf7\xba\xe3\xac\x8b\x88\x83\xc7\x9b\x13\x91\x5a\x40\x75\xd7\xf9\x8a\x07\xfd\xfc\xe5\x83\x7e\x55\xc6\x52\x70\xc2\x9e\x1c\xb7\xf7\xd0\x6f\x6d\xf8\xdf\x00\x00\x00\xff\xff\xa4\x20\x11\xfb\x8e\x15\x00\x00")

func bindataTemplates09multirelationertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates09multirelationertmpl,
		"templates/09_multi-relationer.tmpl",
	)
}



func bindataTemplates09multirelationertmpl() (*asset, error) {
	bytes, err := bindataTemplates09multirelationertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/09_multi-relationer.tmpl",
		size: 5518,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1597612013, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates10modeldefinitiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x0e\xc2\x30\x0c\x45\x77\x4e\xf1\x95\xdd\x3d\x06\x1b\x0b\x9c\x20\x52\x7e\x90\x25\x27\xad\x42\x18\x50\xd4\xbb\xa3\x06\x94\x01\xd1\x6e\xb6\xff\xfb\xcf\xad\x09\x02\xa3\x66\xc2\xa5\x39\xd0\xa4\x6f\x5a\x75\xce\x0e\xb2\xae\xa7\xd6\x50\x99\x16\xf3\x95\x70\x4b\xd1\xe4\xcb\xcb\x61\x42\x8f\x34\x62\x3a\x2b\x2d\xb0\xe0\x97\x8d\x9f\xfb\x60\x05\xcc\x61\xb4\x6e\x9a\xef\xc6\x2b\xcd\x6f\xaf\xfe\xd4\x1f\x1d\x90\x32\x88\x1d\xd1\xe5\x69\x55\x0f\x3c\x69\xcb\x8f\x35\xdf\xe9\x1d\x00\x00\xff\xff\xdd\x47\x50\x16\x0c\x01\x00\x00")

func bindataTemplates10modeldefinitiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates10modeldefinitiontmpl,
		"templates/10_model-definition.tmpl",
	)
}



func bindataTemplates10modeldefinitiontmpl() (*asset, error) {
	bytes, err := bindataTemplates10modeldefinitiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/10_model-definition.tmpl",
		size: 268,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1597612013, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates11singlefilemodelstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x3f\x4b\x04\x31\x10\xc5\xfb\x7c\x8a\xc7\x22\x56\x6e\xb6\x3f\xb8\xca\xb3\xb0\xf0\xce\xe2\x3a\x11\x19\xdd\xb9\x35\xb8\xf9\x43\x12\x15\x19\xf2\xdd\x25\xc9\x15\x87\x60\x37\xe4\x37\x6f\xe6\xbd\x8c\xc8\x88\x99\x4f\xc6\x31\x86\x64\xdc\xb2\xf2\x78\x32\x2b\x8f\xd6\xcf\xbc\xa6\x01\x63\x29\x6a\x9a\x70\xeb\x67\xc6\xc2\x8e\x23\x65\x9e\xf1\xfa\x03\xc7\x9f\xd1\x2f\xde\x71\x32\x49\x63\x77\xc0\xfe\x70\xc4\xdd\xee\xfe\xa8\x6b\xff\xf1\xdd\x24\xd4\x41\xf8\xa6\x74\x21\xa4\xbc\xa9\x58\x04\xd9\x58\x4e\x99\x6c\x40\x29\x4a\x05\x7a\xfb\xa0\x85\x21\xa2\x1f\x7b\xb9\x27\xcb\x95\x88\x64\xb6\x61\xa5\xcc\x18\x8c\x0d\x3e\xe6\x34\x40\x57\x32\x4d\xd8\x57\x13\xee\xe5\xa1\x99\x45\xca\x3e\x72\x02\xad\xeb\xc5\xc6\x1e\x04\xc6\x21\x57\x4f\xe7\x45\x5a\x7d\x51\xfc\x23\xdf\xe2\xe9\xd9\x52\x08\xc6\x2d\xba\x3d\x09\xea\xef\x44\x72\x0b\xe3\xaa\xcd\xc1\x66\x8b\xce\x52\x29\x0a\x00\xae\x45\x3a\xd2\xdd\xb0\x94\x1b\x11\x76\x73\x29\xaa\x28\x91\x7f\xc4\x35\xf3\x65\xb0\xc6\xc7\x76\x07\x93\x8d\x77\xc3\x59\xd2\xda\x46\xf4\x79\xe7\xaa\x9e\xe4\x37\x00\x00\xff\xff\x9d\x86\x26\xa3\xb6\x01\x00\x00")

func bindataTemplates11singlefilemodelstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates11singlefilemodelstmpl,
		"templates/11_single-file-models.tmpl",
	)
}



func bindataTemplates11singlefilemodelstmpl() (*asset, error) {
	bytes, err := bindataTemplates11singlefilemodelstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/11_single-file-models.tmpl",
		size: 438,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598966105, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates12singlefilecollectionstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\xbd\x6e\xc3\x30\x10\x83\x77\x3f\x05\x61\x74\x95\xb2\x07\xe8\x94\x74\xe8\x92\x74\xf0\x0b\x5c\x6d\x46\x3d\x54\x3f\x86\xa5\xa2\x28\x04\xbf\x7b\x21\x67\xb0\x37\x02\x24\x3f\xf0\xae\x56\x83\x89\x0f\x8d\x44\x9f\x35\x3a\x4f\xf3\x50\x4f\x33\x26\xef\x39\x16\x4d\x31\xf7\x30\xeb\xda\x9d\x4e\xb8\xa4\x89\x70\x8c\x5c\xa4\x70\xc2\xe7\x1f\x22\x7f\x96\xe4\x52\x64\xd6\x6c\x71\xbd\xe3\x76\x1f\xf0\x76\x7d\x1f\x6c\xcb\x0f\x5f\x9a\xd1\x68\xf8\x95\x7c\x28\x4a\x39\x37\xbb\x56\x14\x0d\xcc\x45\xc2\x8c\x75\xed\xba\x59\xc6\x6f\x71\x44\xad\xf6\xe3\x29\x6f\x12\xd8\x9c\x5a\x0b\xc3\xec\xa5\x10\xbd\x86\x39\x2d\x25\xf7\xb0\x4f\x67\x91\xe8\x88\x97\x7d\x30\xce\xaf\xb0\x97\x7d\x7f\x63\x1f\x01\x7b\xd2\x6c\x97\x6b\x93\xfd\x91\xb0\x15\x0c\x18\xa7\x5d\x6d\x4f\xf8\x0f\x00\x00\xff\xff\xa9\x2d\xfd\x9e\x2e\x01\x00\x00")

func bindataTemplates12singlefilecollectionstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates12singlefilecollectionstmpl,
		"templates/12_single-file-collections.tmpl",
	)
}



func bindataTemplates12singlefilecollectionstmpl() (*asset, error) {
	bytes, err := bindataTemplates12singlefilecollectionstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/12_single-file-collections.tmpl",
		size: 302,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598954715, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates13collectiondefinitiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xca\xb1\x0a\x85\x30\x0c\x46\xe1\xbd\x4f\x11\xba\xf7\xbe\xd3\xb5\xfd\x85\x40\x6c\xa5\x26\x53\xc8\xbb\x8b\xe2\xe2\xe0\x76\x38\x7c\xee\x0d\x2b\x77\x50\xae\x43\x04\x55\x79\xf4\x72\x2f\xbe\x32\x53\x89\x48\xee\x8a\x6d\x97\xbf\xbe\xd9\xa1\xd3\xaa\xda\x44\xa6\x1f\x45\xa4\x2f\xb7\x18\x4b\xc3\x7c\x94\x7b\x21\xf4\x16\x71\x06\x00\x00\xff\xff\xd1\xbc\x4d\x93\x7b\x00\x00\x00")

func bindataTemplates13collectiondefinitiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates13collectiondefinitiontmpl,
		"templates/13_collection-definition.tmpl",
	)
}



func bindataTemplates13collectiondefinitiontmpl() (*asset, error) {
	bytes, err := bindataTemplates13collectiondefinitiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/13_collection-definition.tmpl",
		size: 123,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1597612013, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates14collectionpackagestructuretmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdd\x6f\xdb\x38\x12\x7f\xf7\x5f\x31\x35\xda\x5a\x2a\x1c\x39\x0f\x87\x7b\x30\xe0\x03\x9a\xa4\xed\x05\x87\xf6\xee\x9a\xec\x2e\xb0\x41\x10\xc8\xd6\xc8\x16\x22\x93\x2a\x49\xa7\xf1\x0a\xfa\xdf\x17\xfc\x90\x28\x4a\xf2\x47\x12\x27\xdd\x05\xda\x87\x18\x12\xc9\x99\xe1\x6f\x7e\xf3\x41\xaa\x79\x1e\x61\x9c\x10\x84\xfe\x8c\xa6\x29\xce\x44\x42\xc9\x51\x16\xce\x6e\xc3\x39\x1e\x71\xc1\x56\x33\xb1\x62\xd8\x87\xa3\xa2\xe8\xdd\x85\x0c\x6e\x96\x17\xea\x25\xbc\x5b\x86\x59\x96\x90\x79\xf0\x99\x46\x98\xea\x97\xbd\x5e\xbc\x22\x33\x58\xda\x37\xde\x4d\x34\x85\x28\x14\xe1\x34\xe4\x18\x9c\x9d\xf8\xe0\x75\x2d\x1c\x02\x32\x46\x99\x0f\x79\x0f\x00\x20\x89\xad\x9e\x57\x13\x20\x49\x6a\x06\xe4\x3f\x86\x62\xc5\x48\x35\x61\x28\x87\xd5\x60\xa1\xfe\x2e\x6b\x12\x61\x3c\x81\x9b\x68\x1a\x9c\x52\x22\x98\xdc\x1e\xf3\xfc\xba\x5a\xef\x6d\x9e\xeb\xe7\x2f\xe1\x12\x8b\x22\x2f\xfc\x52\xbf\x5c\xbd\x49\x35\x49\x52\x25\xbe\xa6\xb5\x32\x77\x52\x1a\xd0\xab\x2d\x70\x4c\x2d\x7a\xbd\xd1\x08\x2e\xa9\xd2\xcb\x61\x46\xc9\x1d\x32\xc1\x41\x2c\x10\x12\x92\xad\x04\xf0\x34\x99\x21\xd0\x18\x5c\xeb\x20\x21\x82\xc2\xd5\xb5\x83\x9f\x46\xbc\x94\xe6\x69\x01\x41\x10\xbc\x73\xd7\xfa\xe0\x35\x16\x96\x58\xd3\x95\x90\x4b\xc6\x13\x58\x86\xb7\xd8\x9c\x35\x84\x14\x89\x96\xea\x6b\x6c\x62\xca\x20\x91\xd3\x59\x48\xe6\xa5\xc5\x16\x22\x2d\xee\x2a\xb9\x86\x89\x1e\xbb\x4a\xae\x6b\x38\x19\x40\xf4\x2c\x03\xc5\x47\x46\x97\x9b\xc1\x70\xcc\x29\x21\x68\xec\x2e\xd0\x28\x58\x41\x16\x87\xc6\x9e\xbd\xd6\xda\x8d\x38\x34\xe6\x1d\x04\x89\xc0\x6b\x6a\xdf\x81\xcd\xff\x57\xc8\xd6\x30\x63\x18\x0a\xd4\xa8\x7c\x53\x6f\xa4\x6e\xf9\xd4\x89\x83\x5a\xe4\xb9\x81\x37\xd4\x51\xc9\x3b\xb9\x21\x5f\x9c\x56\xe1\x1f\xa8\xf5\x27\xab\x24\x8d\x90\x15\x85\xd9\x92\x0c\x7e\xa5\xdb\xb8\xaa\xc9\x43\x13\x37\x12\x24\xad\xc9\x87\x7f\xc1\x71\x0d\x8f\xfa\xe2\x6d\x64\x33\xab\xfd\x6a\xa1\xc2\xd9\xd8\x6f\xe1\x36\xdb\xb1\xf2\x1b\x3a\x34\xf0\xcb\xca\x36\x8b\x73\x77\x9e\xa8\x27\xad\x68\xaa\xb5\x4f\x35\x06\x72\x38\x9a\x6a\x58\xbc\x6a\x5d\x7d\x3f\x41\x10\xf8\x75\x1f\xbe\xdd\x06\x68\x6e\xc4\x8e\x4b\xf9\xca\x86\xb1\xfc\x53\xd4\xdd\x7e\x2a\xee\xf7\xf6\x3c\x7c\x4f\xc4\x02\x32\x46\xef\x92\x08\x23\x18\xcc\xc4\xfd\x40\x46\x93\xc0\x7b\x51\x67\xc5\xa9\xb8\xf7\x66\x52\xae\x19\x3a\xd5\xbf\x43\xf8\xc9\x96\xe7\x60\x8b\x81\x7b\x08\x2f\xc2\x9a\x73\xc2\x91\x09\x48\xd4\x0f\xef\xac\x1e\x95\x8f\x35\x27\xf4\x8a\x27\x33\x42\x15\x6f\x5b\xbb\xeb\x5e\x9d\x4c\x1c\xb7\x9a\x9d\xaa\x05\x3c\xf8\x8d\x85\x99\xa7\x10\x09\x3e\x30\xf6\xc5\x14\xb1\x21\xf4\x09\x15\x8b\x84\xcc\x41\x50\xb3\x9b\xbe\xff\x40\x67\xec\x28\xe1\x6e\xf5\xae\x3b\x65\x6b\x21\x74\xd8\xb6\x27\xd3\xb6\xb0\xcc\xc9\xfb\xd1\x34\xb0\xee\xe8\x66\x8c\x22\x8c\xf6\xf5\x2f\x59\x14\x0a\x84\x95\xfa\x69\xf9\xda\x18\xd1\xe5\x72\xbd\xf0\xc9\x2e\xf7\x12\x22\xfe\xf9\x8f\x76\xdf\xb6\xdb\xf7\xc7\xc3\x1f\xef\xfe\xe3\x66\xff\xf6\x57\x61\x80\xf5\xce\x4e\x06\x9c\x61\x8a\x02\x21\x52\x3f\x9b\x19\xd0\xf4\xbf\x5e\x76\x28\xff\xff\x74\xff\x41\xdd\x6f\x9d\xb3\xd3\xfd\x5f\x31\x66\xc8\x17\x87\xec\x10\x8c\xc8\x83\x96\x83\x47\x34\x02\x4f\x2e\x19\x4c\xef\xe3\xe5\x6a\xc6\x0f\x64\x4c\xcd\x67\xdb\x29\xd3\xcb\xf3\xd7\x54\x1f\x70\x02\x75\x9a\xcf\x73\xad\xfd\x35\xc3\x34\x94\x0d\x87\x1a\x52\x8b\x82\xaf\xe6\x15\x57\x33\x7b\x79\x9e\xc4\x76\x5e\x70\xce\x2f\xd4\x09\x55\x8e\x8d\x46\xf0\x3e\x8a\xf2\xdc\x8e\x1a\xba\x85\x51\xa4\x49\x39\x68\x0f\x0e\xa0\x7c\xc1\x17\x49\xa6\x50\xa9\x88\xa9\x8f\x51\x03\x8d\xc9\xc0\x30\xb3\x53\xc5\x03\x78\x2a\x7b\x56\xb9\x7b\xf7\x40\x57\x19\x61\x58\x6c\x15\x9c\x84\x1c\x2f\xd7\x59\x57\x73\xa3\xe5\x4d\x36\x73\x64\x2b\x4b\xab\x6d\xca\xd5\x4a\x94\xc3\x52\x13\x09\x95\x61\x8f\x0f\x86\x6a\x73\x25\xbb\x4a\xcd\xcf\x1b\x15\xa5\xd6\x8f\x09\xa6\x91\x15\xab\x45\x56\xb4\x3a\x59\x9f\x93\x08\xef\xbd\x3a\xe4\xea\x4d\xb1\xdf\x05\x4c\xb7\xce\x7d\xf2\xb7\x45\xb6\xf3\x0c\x6f\x19\x51\xd7\x59\x17\xaf\xe3\xb1\x9a\xe7\xde\x6e\x7c\x93\x92\xb4\x3f\xbe\xe0\xf7\x8b\x19\xcd\xd0\x9e\x17\x15\xb6\xbe\x63\xf1\xfb\x48\xf5\xf1\xf4\xd6\x9c\x19\xbc\x8a\xb9\xaa\xf7\xff\x5a\x9f\x56\x01\xf3\x8a\xde\x6e\x25\xc4\x19\x8a\xd8\x92\xe2\x9c\x08\x64\x24\x4c\x87\xd0\x3f\x3b\x81\x88\x22\x27\x03\x01\xc9\x32\x4b\x71\x89\x44\x40\x5b\x91\xec\x1a\x91\xc5\xa1\x0c\x70\x78\x73\xd9\x97\x21\xd5\x71\x4d\xe1\xec\x41\xdb\xfb\x3e\x8a\xaa\xc4\xa1\x13\xd2\xb7\x61\x93\x11\x2e\x9a\x26\x39\xe5\x39\x92\x48\xa7\x9a\xd1\x08\x4e\x53\x0c\x59\x3b\xdc\x4b\xd1\x30\x93\xe3\x8f\xca\x2d\x3a\x14\x02\xf8\x48\x99\x33\x8b\x03\x8d\x41\xac\x33\x1c\x4b\xfd\x27\x98\x52\x32\xe7\x97\x74\x08\xff\x0e\xf9\x7f\x09\xaa\xdf\xcf\x21\x59\x4b\xf8\x63\xca\x30\x99\x13\xb8\xc5\x35\x24\x1c\x08\x15\x40\x56\x69\x1a\x4e\x53\x04\xb1\x08\x89\xb2\x4b\x26\x2d\x65\xeb\x77\xba\x4a\xa3\x12\xb2\xd0\xf8\xc9\x24\xb5\x1d\xfb\x7c\x44\x19\x6e\xa6\xb8\x0d\x6d\xfa\x73\x74\x50\xe5\x26\x9e\x2d\xe6\x5b\x1a\x95\xd5\xe7\x25\x57\x1f\xdc\xb7\x6d\x29\xbf\x0d\xc9\xb5\x12\xdc\x88\x77\xbe\x33\xde\xad\x94\xda\x61\x5f\xef\x5e\xb9\x7f\x9f\xf0\x37\x13\xb7\x27\x00\xb7\xad\x7e\xe1\x1c\x60\x2c\x34\x77\x1e\xf2\xa1\x91\x07\xb8\x0d\x7c\xdd\x8c\x8c\x46\xf0\x09\x45\x47\xdb\x30\x47\xf1\xe4\xb6\xa1\xec\x1a\x3a\x35\x1c\xac\x6b\x50\x09\x8d\xa3\xba\x65\xe6\x82\x25\x64\xee\x83\xb7\xb9\x53\xba\xba\xce\xf3\x23\x30\x79\x6e\x43\xb3\xd1\x3e\x4e\x6f\xef\x36\xca\x0f\x11\x4f\x69\x39\x64\xc2\x5d\xe0\xec\x56\x6a\xcb\x58\xb2\x0c\xd9\x5a\xe5\xb6\x45\xc8\xe1\x0f\x64\x14\xee\xc2\x74\x85\x81\x63\x50\x70\xce\xff\xa7\xa7\xfe\x07\xd7\xbf\x23\xa3\x9e\xbf\x87\x71\x65\x58\x7e\x60\x4c\x61\xf7\xab\x14\x3c\x84\xbe\xf6\x19\x1f\x2b\x97\x37\xe0\x1e\x38\x36\x29\x53\x1a\x96\x1d\xba\x9f\xe9\xf8\xb8\xf3\x32\x4d\x4d\x43\x71\x75\x7a\x8a\x15\xcf\xe0\xea\xba\xfa\x70\xa6\x15\x2b\x6b\xda\x0d\x90\xca\x6b\x75\x83\x6d\x33\xbf\x48\x32\xcf\xd7\x8f\x18\xd5\x3f\x83\xf9\x5d\xcd\x67\xc9\xef\x56\x0f\x6a\x0c\x9a\xb8\x7a\x03\x3d\xdf\xc8\x2a\x00\x53\x8e\xf5\x45\x94\xc1\xcd\x50\xaf\x6d\xf7\x5b\x55\x2c\xb9\x17\xb4\xdc\x20\xae\x33\x64\x87\xba\x93\xb5\xa4\x89\xa7\xa4\xfa\xce\xd2\x56\x9e\xdc\xc1\xce\xb8\x4e\xcf\x73\x72\x17\xa6\x89\x86\xc8\x98\x20\x5b\x6a\xa5\x66\x0c\x83\x37\x7c\x00\x31\x5d\x91\xa8\x3a\x6a\x2b\x9e\x8d\xdd\x9c\x65\xc3\x7a\xd0\x37\x1b\x77\x4d\x2c\x9c\xa7\x0a\xd5\x30\xcb\x90\x44\x7a\x4f\x7c\x68\x30\xf0\x5b\xb7\xd2\x8e\xe7\x79\xc5\xca\x68\x1a\x7c\x42\xd1\x48\xbf\x55\x58\x34\x6a\x63\xae\xec\x6e\xe6\x34\x63\xac\xad\x58\x0f\x8f\x98\x9d\xe7\x98\x2d\x27\xca\x86\x74\xf5\x21\xae\x0b\xd5\xbc\xb0\x9f\x7e\xb5\xc8\x23\x4d\xba\x0e\x21\xca\xc4\xd6\x64\x12\x15\xf5\x3b\xfe\x1d\x36\x31\xe4\xab\xb4\xf1\x81\xb0\x3b\x89\x6f\x3c\x68\x58\xa0\x77\x1d\x39\xa4\x2a\xf7\xa8\xa1\x3e\x1d\x76\x9e\x50\xbb\xea\xb2\x5c\x6f\x77\xdc\x82\xa6\x51\xbf\xf9\xd5\xf1\xf5\x66\xf9\x0d\x39\x0a\x35\x53\xc3\x2f\x3a\x6b\x38\x3f\x40\x0d\xaf\x8e\xfe\x9d\x2a\x0e\x56\xc4\x37\xfb\x5c\xf5\xd4\x25\x70\x45\x01\xbb\xab\xf7\xcb\x5e\x15\x3c\x5b\xdd\xfe\xfb\x95\xec\x1f\x7f\x05\xb1\xef\xc1\x5f\xd1\x4d\x1e\x19\x37\xa7\x99\x24\x86\xda\xd8\x61\xdc\x55\x65\x9d\xce\x80\xd4\x34\x75\x5d\x54\xf9\x50\x95\x82\xbe\xdf\x81\xef\x05\x0a\xb1\xcf\xf1\x45\xcf\x7b\x89\xeb\x0b\xad\xc9\x9e\x5d\xc6\x7b\x1c\x5d\xf4\x1a\x6d\xf1\x45\xab\x70\x6e\xbe\xbf\xf0\xbb\x13\xeb\x4b\x5f\xe0\x3d\xf9\xee\x6b\xdf\x92\xb4\x37\x2d\x1f\x48\x4d\x4a\xd4\xff\x74\x3a\x10\x43\xc1\x69\xab\xb6\xdd\xdc\xfd\x24\xf4\xe6\x0b\xb9\x66\xa9\xb7\xd7\x73\xd5\xdb\x3f\x03\x00\x00\xff\xff\xbb\x91\xc3\xa7\x37\x28\x00\x00")

func bindataTemplates14collectionpackagestructuretmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates14collectionpackagestructuretmpl,
		"templates/14_collection-package-structure.tmpl",
	)
}



func bindataTemplates14collectionpackagestructuretmpl() (*asset, error) {
	bytes, err := bindataTemplates14collectionpackagestructuretmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/14_collection-package-structure.tmpl",
		size: 10295,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598964523, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates15collectionpackagetmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x3d\x4e\xc3\x40\x14\x84\x7b\x9f\x62\xe4\xde\x4e\x4f\x4b\x28\x68\x12\x0a\x5f\x60\xe3\x9d\x98\x27\xf6\xc7\xda\x7d\x16\x42\x4f\x7b\x77\x64\xe1\x02\x41\x91\x6e\xa4\xef\x1b\xcd\x98\x79\xde\x25\x11\xfd\x9c\x43\xe0\xac\x92\xd3\xb0\xba\xf9\xc3\x2d\xec\x31\xb4\xd6\x9d\x4e\x78\xce\x9e\x58\x98\x58\x9c\xd2\xe3\xf6\x85\xc4\xad\xe4\x25\x27\x56\xa9\x23\xce\x57\x5c\xae\x13\x5e\xce\xaf\xd3\xb8\xfb\xd3\xbb\x54\xdc\x25\x10\x9f\xae\xfe\x2a\x3a\x7d\xda\xb1\x19\x54\x22\xab\xba\xb8\xa2\xb5\xae\x3b\xf6\x60\x36\xbe\xfd\xc4\x8b\x8b\xdc\x89\x99\x32\xae\xc1\x29\xd1\x4b\x5c\x73\xd1\xda\x63\xc4\x5f\xf4\xff\xfb\x50\xb5\x6c\xb3\x6e\x85\x0f\xfc\xdb\x26\xc1\xb3\x1c\x96\xd9\x00\x26\xdf\xda\x77\x00\x00\x00\xff\xff\x2e\x73\xe6\x5f\x18\x01\x00\x00")

func bindataTemplates15collectionpackagetmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates15collectionpackagetmpl,
		"templates/15_collection-package.tmpl",
	)
}



func bindataTemplates15collectionpackagetmpl() (*asset, error) {
	bytes, err := bindataTemplates15collectionpackagetmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/15_collection-package.tmpl",
		size: 280,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598963773, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"templates/00_imports.tmpl":                      bindataTemplates00importstmpl,
	"templates/01_initialize_collections.tmpl":       bindataTemplates01initializecollectionstmpl,
	"templates/02_collection.tmpl":                   bindataTemplates02collectiontmpl,
	"templates/03_collection-structure.tmpl":         bindataTemplates03collectionstructuretmpl,
	"templates/04_collection-builder.tmpl":           bindataTemplates04collectionbuildertmpl,
	"templates/05_model.tmpl":                        bindataTemplates05modeltmpl,
	"templates/06_primary.tmpl":                      bindataTemplates06primarytmpl,
	"templates/07_fielder.tmpl":                      bindataTemplates07fieldertmpl,
	"templates/08_single-relationer.tmpl":            bindataTemplates08singlerelationertmpl,
	"templates/09_multi-relationer.tmpl":             bindataTemplates09multirelationertmpl,
	"templates/10_model-definition.tmpl":             bindataTemplates10modeldefinitiontmpl,
	"templates/11_single-file-models.tmpl":           bindataTemplates11singlefilemodelstmpl,
	"templates/12_single-file-collections.tmpl":      bindataTemplates12singlefilecollectionstmpl,
	"templates/13_collection-definition.tmpl":        bindataTemplates13collectiondefinitiontmpl,
	"templates/14_collection-package-structure.tmpl": bindataTemplates14collectionpackagestructuretmpl,
	"templates/15_collection-package.tmpl":           bindataTemplates15collectionpackagetmpl,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"templates": {Func: nil, Children: map[string]*bintree{
		"00_imports.tmpl": {Func: bindataTemplates00importstmpl, Children: map[string]*bintree{}},
		"01_initialize_collections.tmpl": {Func: bindataTemplates01initializecollectionstmpl, Children: map[string]*bintree{}},
		"02_collection.tmpl": {Func: bindataTemplates02collectiontmpl, Children: map[string]*bintree{}},
		"03_collection-structure.tmpl": {Func: bindataTemplates03collectionstructuretmpl, Children: map[string]*bintree{}},
		"04_collection-builder.tmpl": {Func: bindataTemplates04collectionbuildertmpl, Children: map[string]*bintree{}},
		"05_model.tmpl": {Func: bindataTemplates05modeltmpl, Children: map[string]*bintree{}},
		"06_primary.tmpl": {Func: bindataTemplates06primarytmpl, Children: map[string]*bintree{}},
		"07_fielder.tmpl": {Func: bindataTemplates07fieldertmpl, Children: map[string]*bintree{}},
		"08_single-relationer.tmpl": {Func: bindataTemplates08singlerelationertmpl, Children: map[string]*bintree{}},
		"09_multi-relationer.tmpl": {Func: bindataTemplates09multirelationertmpl, Children: map[string]*bintree{}},
		"10_model-definition.tmpl": {Func: bindataTemplates10modeldefinitiontmpl, Children: map[string]*bintree{}},
		"11_single-file-models.tmpl": {Func: bindataTemplates11singlefilemodelstmpl, Children: map[string]*bintree{}},
		"12_single-file-collections.tmpl": {Func: bindataTemplates12singlefilecollectionstmpl, Children: map[string]*bintree{}},
		"13_collection-definition.tmpl": {Func: bindataTemplates13collectiondefinitiontmpl, Children: map[string]*bintree{}},
		"14_collection-package-structure.tmpl": {Func: bindataTemplates14collectionpackagestructuretmpl, Children: map[string]*bintree{}},
		"15_collection-package.tmpl": {Func: bindataTemplates15collectionpackagetmpl, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
