// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/00_imports.tmpl
// templates/01_initialize_collections.tmpl
// templates/02_collection.tmpl
// templates/03_collection-structure.tmpl
// templates/04_collection-builder.tmpl
// templates/05_model.tmpl
// templates/06_primary.tmpl
// templates/07_fielder.tmpl
// templates/08_single-relationer.tmpl
// templates/09_multi-relationer.tmpl
// templates/10_model-definition.tmpl
// templates/11_single-file-models.tmpl
// templates/12_single-file-collections.tmpl
// templates/13_collection-definition.tmpl
// templates/14_collection-package-structure.tmpl
// templates/15_collection-package.tmpl

package bintemplates


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataTemplates00importstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\xca\xcc\x2d\xc8\x2f\x2a\x29\x56\x52\xd0\xad\xad\xe5\xaa\xae\xd6\x55\xc8\x4c\x53\xd0\xf3\x84\x08\x82\xc5\x20\x0a\x14\x34\xb8\xaa\xab\x8b\x12\xf3\xd2\x53\x15\x54\xa0\x22\x56\xb6\x08\x85\xb5\xb5\x0a\x0a\x0a\x0a\x4a\xd5\xd5\x50\xc9\xda\x5a\x25\xae\xea\xea\xd4\xbc\x14\x90\x11\x9a\x60\x73\xa1\x1c\x18\xbb\xb6\x16\x10\x00\x00\xff\xff\x08\x20\xfd\xe4\x84\x00\x00\x00")

func bindataTemplates00importstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates00importstmpl,
		"templates/00_imports.tmpl",
	)
}



func bindataTemplates00importstmpl() (*asset, error) {
	bytes, err := bindataTemplates00importstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/00_imports.tmpl",
		size: 132,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1597612013, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates01initializecollectionstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xb1\x4e\xc4\x30\x10\x44\xfb\x7c\xc5\x28\x7d\x7c\x3d\x2d\x47\x71\xcd\x1d\x45\x7a\xb4\xc4\x9b\xb0\xc2\x5e\x47\xf6\x9e\x10\x58\xfe\x77\x94\xa4\x38\x44\xb7\x7a\x33\x23\xed\xab\xd5\xf3\x2c\xca\xe8\x45\xc5\x84\x82\xfc\xf0\xdb\x94\x42\xe0\xc9\x24\x69\xe9\x31\xb4\xd6\x9d\x4e\x78\x4e\x9e\xb1\xb0\x72\x26\x63\x8f\xf7\x6f\x28\xdf\x73\x5a\x92\x72\x91\xe2\x70\xbe\xe1\x7a\x1b\xf1\x72\xbe\x8c\x6e\xeb\x8f\x1f\x52\x30\x4b\x60\x7c\x51\xf9\x33\x24\x7b\xda\xe2\x5a\x61\x12\xb9\x18\xc5\x15\xad\x75\xdd\x4a\xd3\x27\x2d\x8c\x5a\xdd\xeb\x71\x5e\x29\x72\x6b\x5d\xad\x32\xc3\x5d\xe2\x9a\xb2\x15\xec\xc0\x38\xae\x81\x6c\x7b\xfa\xc0\x3d\xdc\x91\xb0\xfa\x7f\x8d\x87\xcb\xf0\x30\xcc\xc3\x7c\xd7\x1d\xf6\x70\xfb\x00\xac\x1e\xad\xfd\x06\x00\x00\xff\xff\xc4\xb5\xbf\x6c\x0f\x01\x00\x00")

func bindataTemplates01initializecollectionstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates01initializecollectionstmpl,
		"templates/01_initialize_collections.tmpl",
	)
}



func bindataTemplates01initializecollectionstmpl() (*asset, error) {
	bytes, err := bindataTemplates01initializecollectionstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/01_initialize_collections.tmpl",
		size: 271,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1597612013, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates02collectiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xbb\x4e\xc3\x40\x10\x45\x7b\x7f\xc5\x95\x7b\x3b\x3d\x2d\xa1\xa0\x49\x28\xfc\x03\x83\x7d\x63\x46\xec\x4b\xde\x41\x08\x8d\xf6\xdf\xd1\x92\x02\x44\x37\xd2\x39\x23\x9d\xeb\xbe\xf1\xa6\x89\x18\xd7\x1c\x02\x57\xd3\x9c\x46\x4c\xad\x0d\xa7\x13\x1e\xf3\x46\xec\x4c\x3c\xc4\xb8\xe1\xf5\x0b\x89\x1f\x47\xde\x73\x62\xd5\x3a\xe3\x7c\xc5\xe5\xba\xe0\xe9\xfc\xbc\xcc\xdd\x5f\xde\xb4\xe2\xa6\x81\xf8\x94\xfa\xe7\x51\xec\xa1\x63\x77\x98\x46\x56\x93\x58\xd0\xda\x30\x14\x59\xdf\x65\x27\xdc\xe7\x97\xfb\x79\x91\xc8\x4e\xdc\x8d\xb1\x04\x31\x62\xd4\x58\xf2\x61\x75\xc4\xfc\x9f\xfc\x26\x4f\x3f\x2b\xf4\x5e\xdf\x3d\xf7\x09\x4c\x5b\x6b\xdf\x01\x00\x00\xff\xff\x7d\x2e\x09\x85\xe1\x00\x00\x00")

func bindataTemplates02collectiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates02collectiontmpl,
		"templates/02_collection.tmpl",
	)
}



func bindataTemplates02collectiontmpl() (*asset, error) {
	bytes, err := bindataTemplates02collectiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/02_collection.tmpl",
		size: 225,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598963720, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates03collectionstructuretmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5d\x6f\xdb\xbc\x15\xbe\xcf\xaf\x38\xaf\xf1\xbe\xb5\x54\x38\x4a\x2e\x86\x5d\x18\xf0\x80\x7c\xb4\x9d\x31\xb4\xeb\x92\x6c\x03\x16\x04\x85\x6c\x1d\xc7\x44\x64\x52\x25\xe9\x34\x9e\xa0\xff\x3e\xf0\x43\x1f\xd4\x87\xed\xd8\xae\x5b\x0c\xbd\x89\x21\x89\x3c\xe7\xe1\x73\x1e\x1e\x1e\x92\x49\xd3\x08\x67\x84\x22\xf4\xa6\x2c\x8e\x71\x2a\x09\xa3\xa7\x42\xf2\xe5\x54\x2e\x39\xf6\xe0\x34\xcb\x4e\x4e\xce\xce\x20\x4d\x83\xab\xa2\x41\xf0\x29\x5c\x60\x96\x01\x11\x20\xe7\x08\x5f\x97\xc8\x57\x30\xc7\x38\x41\x0e\x72\x1e\x4a\x48\x38\x7b\x26\x11\x0a\x58\xb0\x08\x63\x10\x09\x4e\xc9\x8c\x4c\x21\x0a\x65\x38\x09\x05\xc2\xc5\xe7\x71\x70\x22\x57\x09\xb6\x1b\x36\x00\x20\x3d\x01\x00\x58\xdc\x9a\xa7\xb7\x8b\x30\x49\x08\x7d\x0c\x3e\x2a\xa3\xe6\xe5\x89\x41\x57\x79\x03\x8f\x28\x0d\x2c\x21\x19\xc7\x28\x87\xa0\x3f\x06\x27\xb3\x25\x9d\x82\xe7\x3a\xbd\xc1\x29\x92\x67\xe4\x59\x06\x6f\xdb\xe0\xf8\x55\xfb\x9e\xdf\x0a\xc4\x62\xe5\x28\x97\x9c\x42\x97\xfd\x60\x51\xc2\xde\x0d\xc9\xa2\x82\xe4\x4b\x34\x29\x18\x0d\xae\x2f\x7d\xf0\xda\x90\x0d\x00\x39\x67\xdc\xb7\x08\xc9\x6c\x23\x3a\xf8\x6d\x04\x94\xc4\xb6\xc3\x2b\x86\x35\x50\xdd\x74\xa7\xac\x1a\x39\x8d\x00\x86\x23\xf8\x12\x4d\x0c\xb2\x8f\x61\xe2\xf9\x55\x90\xde\x9b\x34\x35\xcf\x66\xa0\x69\xe6\xe7\x68\x55\xdf\x2e\x40\x94\xc4\xda\x78\xc5\xe7\xc6\xc1\x8d\x72\x58\xd5\x80\x39\x03\x30\x9a\xba\x63\x1a\x8f\x80\x29\xa3\xcf\xc8\xad\xa8\x08\x4d\x96\x12\x44\x4c\xa6\x08\x4c\x53\x59\x41\x0d\x84\x4a\x06\xf7\x0f\x4e\x14\x76\x0c\x74\xee\xde\x33\x1e\x83\x20\x78\xeb\x3a\xf3\xc1\xab\x79\xca\x43\xcc\x96\x52\x75\x19\x8e\x60\x11\x3e\x61\xbd\xd5\x00\x62\xa4\xc6\xaa\x6f\x48\x9e\x31\x0e\x44\x35\xe7\x21\x7d\xcc\x87\x58\x72\x6d\xcc\xdd\x93\x07\x18\x99\x6f\xf7\xe4\xa1\x42\xb8\x65\xd0\xb4\xb2\xdc\xbd\xe7\x6c\xd1\xcd\x9e\x03\x27\xe7\xac\x36\xba\x5d\x67\x6a\xe9\xb9\x24\xae\x46\x92\xd7\x70\xd6\x49\x5c\xad\xdd\x41\xa8\x0b\xbc\xba\xf7\x0d\x64\xfe\x43\xa7\xd7\x29\xc7\x50\x62\x35\xe1\x2a\xdf\xea\xe9\x30\xc4\x69\x2f\x9e\x9b\x51\x06\x26\xdd\x88\x56\xf5\xd5\xec\xe8\xfe\x97\x4b\x12\x47\xda\x8b\xe1\xe0\x39\xe4\x06\xac\x15\x43\x7d\x6a\xd8\x29\xae\x58\x35\x9e\x7c\xf8\x0b\x9c\x57\x08\xac\x76\x5e\x27\x67\xdb\xdb\x2f\x3a\xea\xc0\x58\xfc\x65\x7c\xec\x70\x4a\xfb\x35\x1f\x26\x52\x8b\x02\x5b\x19\x98\xf6\x84\xd6\x9d\x6c\x2a\xa9\x2d\x9a\x18\x58\x13\x43\x8e\xea\x17\x4d\x0c\x5f\x5e\x61\xb0\x3a\xd0\x20\x08\xfc\xaa\x1a\xde\xac\x63\x3a\xb5\x66\x87\xb9\x7d\x0d\x6e\xa8\xfe\x64\x55\x01\x5d\xc9\x97\xad\x35\x04\xdf\x88\x9c\xe7\x8b\x78\x04\xfd\xa9\x7c\xe9\xab\x89\x2c\xf1\x65\xe7\x25\x34\x07\xe1\x4d\x15\x10\x6b\xeb\xca\xfc\x0e\xe0\x97\xee\x8e\xaa\x3b\x1b\x87\x01\x1c\x45\x7f\x63\x2a\x90\x4b\x20\xfa\x47\xb4\xae\x99\x45\xf0\x77\x54\x97\x71\xb1\xb7\xb6\x74\xa5\x54\x16\x4a\x55\x7d\x8c\x46\x8e\x40\x2c\x35\xba\x83\x08\xfe\xcd\xc3\xc4\xd3\x14\x06\xef\x38\xff\x64\x97\xee\x01\xf4\x28\x93\x73\x42\x1f\x41\x32\x3b\xfc\x9e\x7f\xa8\xb0\x6e\x28\x8d\xdc\xaa\xa8\x1a\xde\xb5\x75\x81\x23\xe8\x2d\xc5\xbc\x46\xc8\xce\xaa\x16\x4d\x82\x32\x4e\xed\xda\xd3\xd2\x33\xaa\xf9\x67\x12\x85\x12\x61\xa9\x7f\x1a\xaa\xb1\x20\x0e\x22\x1e\xe3\x69\x6f\xf1\x78\x84\xca\x3f\xff\xa9\x59\x6e\x6f\x56\xd1\xf9\xe0\x27\x16\xd2\x79\xbd\xc2\xfe\x59\xb4\x54\x86\x6d\xa3\x96\xae\x31\x46\x89\x10\xe9\x9f\x6e\x2d\xed\xad\x24\xe3\xe7\x50\x4a\xfa\x25\xa4\xe3\x08\xa9\x8c\xda\x46\x21\xdd\xe0\x8c\xa3\x98\xff\xd0\x4a\xca\x62\x38\xe8\x62\xb7\x43\xc1\xb4\xf7\x82\xc8\xcd\x38\x7e\x82\x15\xf1\x07\x6a\xaf\x12\xcc\xf5\xe2\x3b\x49\xd3\xdf\x99\xd9\x9c\x06\xfa\x54\x2e\x4d\x8d\xf7\xdf\x39\xc6\xa1\xa2\x47\x7f\xd2\x9d\x82\x1b\xfb\x4a\x98\xf3\xbb\x34\x25\xb3\xb2\x5d\x30\x16\xb7\xfa\xfc\x42\x7d\x3b\x3b\x83\x8b\x28\x4a\xd3\xf2\xab\x15\x6e\x18\x45\x46\xde\xfd\xe6\xc7\x3e\xe4\x2f\xc4\x9c\x24\x9a\x95\x42\xe2\x66\x0b\xdc\x37\x9c\xf4\x4b\x8d\x2b\xf0\xdd\x3a\xaf\x7f\xcd\x35\xda\x8a\xed\x15\xca\x2f\x6c\x3b\xbb\xf8\x02\xbd\x9d\x17\xa5\x83\xcb\x50\xe0\xdd\x2a\x69\x2b\x06\x8d\xbd\x51\xb7\xb8\xd6\xea\xbe\xe0\x47\xf5\xd6\xa6\x1c\xdd\xdb\xb9\x55\x00\xdb\x7d\x7a\x15\x83\xcb\x65\x99\x7b\xde\x30\xcf\xba\xe3\xb3\xff\x5c\xcb\x21\xbd\x27\x18\x47\x85\x4f\x8b\xa1\x10\xeb\xe5\x6a\x4c\x23\x7c\xf1\xaa\xf1\xd0\x6f\xb2\xed\x0e\x03\xdb\x7d\x6e\xb3\xbe\x94\xb4\xb7\x9e\xea\x94\x72\xa9\xfa\xac\x9a\x37\xb3\xbc\x68\xe7\x1e\x90\x7d\x55\x96\x4c\xb0\x3e\xe1\xb7\xdb\x29\x4b\xb0\xdc\xf7\x6b\x6e\x7d\x07\xf1\x45\xa4\x77\x51\xec\xc9\xee\xd8\xbc\x42\xd6\x7a\xe7\x75\x53\x6d\x56\x10\xf3\x1b\x7b\x5a\xab\x96\x6b\x94\xb3\x52\x31\x63\x2a\x91\xd3\x30\x1e\x40\xef\xfa\x12\x22\x86\x82\xf6\x25\x90\x45\x12\xe3\x02\xa9\x84\xa6\x23\x55\x69\x23\x9f\x85\x2a\x6d\xc0\x1f\x77\x3d\x35\xdf\x5a\x0e\xae\x9c\x31\x18\xbc\x17\x51\x54\xa4\x23\x93\xe6\xbe\x0e\xea\x8a\x70\xd9\xb4\x29\x2f\x4d\x91\x46\xc5\x05\xc4\x55\x8c\x21\x6f\xe6\x82\xdc\x34\x4c\xd5\xf7\x9d\x32\x96\x99\x27\x01\xbc\x67\xdc\x69\x25\x80\xcd\x40\xae\x12\x1c\x2a\xff\x97\x18\x33\xfa\x28\xee\xd8\x00\xfe\x1a\x8a\xbf\x53\xd4\xbf\x1f\x43\xba\x52\xf4\xcf\x18\x47\xf2\x48\xe1\x09\x57\x40\x04\x50\x26\x81\x2e\xe3\x38\x9c\xc4\x08\x72\x1e\x52\x8d\x4b\xa5\x42\x8d\xf5\x1b\x5b\xc6\x51\x4e\x59\x68\xe3\xb4\x6f\xaa\xdc\x40\xd0\x0e\xe5\x42\x3d\x71\x76\x6c\x71\xbe\x77\x2e\x69\xd4\x8d\xf9\x08\xbf\x5b\x26\x69\x78\xd4\xa8\xc7\xf9\x0c\x78\x75\xb5\xba\xa6\x54\xa8\x59\xae\x94\x0b\xb5\x2c\x22\x36\x66\x91\xd2\x4a\xe5\x00\xc7\x8c\x5e\x6b\x63\x9b\xa4\x62\x1b\xae\x4f\x2b\xee\x2e\xe3\xc8\x99\xc5\x22\xb4\xe7\x58\xea\xa1\x96\x5d\x44\x99\x4e\x4c\xe1\x74\x76\x06\x1f\x50\xb6\x94\x38\xc5\x4d\xe1\x1e\x25\xce\xde\x15\x4e\x2b\xb4\x83\x55\x38\x3a\xbf\x0a\xd4\xd7\x20\x42\x72\x42\x1f\x7d\x05\xb5\xab\x1c\xbc\x7f\x48\xd3\x53\xb0\x69\xb7\xa3\x30\x6a\x1e\x70\xac\xaf\x8c\xf2\x3b\xba\x7d\xca\x23\x95\xff\xe7\x38\x7d\x52\xde\x12\x4e\x16\x21\x5f\xe9\x54\x3b\x0f\x05\xfc\x17\x39\x83\xe7\x30\x5e\x62\xe0\x00\x0a\xc6\xe2\xb3\x69\xfa\x37\x5c\xfd\x07\x39\xf3\xfc\x2d\xc0\xe5\xf3\xf9\x1d\xe7\x9a\xbb\x7f\x29\xc3\x03\xe8\x99\x60\x8b\xa1\xd6\x4a\x8d\xee\xbe\x83\x49\x43\xa9\x21\x3b\x6a\xed\xd5\x72\x29\x7a\x9c\x02\xac\xe6\xb8\xd8\x58\xce\xb4\x08\xe1\xfe\xa1\xb8\x9e\x36\x8e\x35\x9a\x66\xb1\xa6\xb3\x65\x15\x70\xb9\x9d\x99\x93\xc4\xf3\xcd\x23\x46\xce\xa5\x7c\x5b\x15\x9d\x8b\xbf\x51\x4c\x5b\x40\x23\xd7\x6f\x60\xda\x5b\x5b\x19\x60\x2c\xb0\xda\x89\x71\xf8\x32\x30\x7d\x9b\xb5\x61\x31\xd1\xdc\x33\x7e\x61\x19\x37\x79\xb7\xc5\xdd\xe5\x4a\x69\xc8\xd3\x56\x7d\xa7\x6b\x23\xfb\x6e\x90\xee\xac\xaa\xdd\x31\x7d\x0e\x63\x62\x28\xb2\x10\xd4\xde\x40\xbb\x19\x42\xff\x0f\xd1\x87\x19\x5b\xd2\xa8\x38\xb6\xd0\x3a\x1b\xba\x99\xb0\x9c\xf3\xfd\x9e\x1d\xb8\x0b\x31\x73\x9e\x0a\x56\xc3\x24\x41\x1a\x99\x31\x89\x81\xe5\xc0\x6f\x5c\x6c\x38\x91\x17\x85\x2a\xa3\x49\xf0\x01\x65\x2d\xa9\x17\x73\xa6\xb6\xe2\xa6\x1a\x77\x3d\xe1\x59\xb0\xe5\x3a\xf8\xfa\x19\xb3\x71\x43\xb6\x66\x4f\x5d\xb3\xae\xaf\x91\xdb\x58\x4d\xb3\xf2\x1f\x26\x8c\xc9\x53\x23\xba\x16\x23\x1a\x62\xa3\x31\x8d\xb2\xea\x35\xd1\x06\x4c\x1c\xc5\x32\xae\x5d\x6f\xb7\x67\xf8\xce\x4d\x51\x49\xf4\xa6\xed\x91\x72\xe5\x6e\x8b\xf4\xc5\x77\xeb\x56\xbb\x6d\xb5\x57\xfd\xcb\x11\x37\xa8\xa9\x55\x05\xe2\xfe\xfc\xa1\xdb\x7e\xcd\x8e\x66\xcd\x56\x06\xb7\xad\x95\x81\x38\x40\x65\xb0\xff\xe1\x47\x2b\xb6\x83\x95\x06\xdd\x62\xd1\xf5\x7f\xce\x78\x96\xc1\xe6\x9a\xe0\xb8\x87\x25\xdf\xad\x1a\xf8\x3f\x2b\x04\x7e\xfc\x21\xcc\xb6\x47\x1f\x5a\x8b\x6a\xd3\xdc\x9d\xbc\xc8\x0c\x2a\xdf\x0e\x13\xcb\x22\x97\xb5\x4e\x73\xa3\x61\x37\x7e\x45\x80\xf5\x02\xd3\xf3\x5b\xf8\xbd\x45\x29\xb7\xd9\x6a\x99\x76\xc7\x38\xc0\x31\x9e\xca\x7d\xd6\x70\x8b\x6d\x96\xe9\x63\x10\xdf\x36\x96\xe3\xee\x13\x1c\xbf\x3d\x5d\x1f\xfb\x7c\x73\xef\xd3\xbf\x6d\x17\xba\xad\x65\xf9\x4a\x69\x32\xaa\xff\xbf\xf0\x40\x0a\x05\xa7\x58\x5b\x77\x76\xf9\x4b\xd0\xdd\x47\x92\xf5\x02\xa2\x3c\xa0\x2c\xde\xfe\x2f\x00\x00\xff\xff\x68\x6c\x85\xed\x4f\x2d\x00\x00")

func bindataTemplates03collectionstructuretmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates03collectionstructuretmpl,
		"templates/03_collection-structure.tmpl",
	)
}



func bindataTemplates03collectionstructuretmpl() (*asset, error) {
	bytes, err := bindataTemplates03collectionstructuretmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/03_collection-structure.tmpl",
		size: 11599,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1599063149, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates04collectionbuildertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdd\x6f\xdc\x38\x0e\x7f\xcf\x5f\xc1\x0d\xb6\xb0\x1d\x24\x4e\x0f\x38\xdc\xc3\x00\x79\x68\xfa\x85\x02\xbb\xdb\xbb\xa6\x87\x7d\x08\x82\x85\xc6\xa2\x67\x74\xb5\xa5\x39\x49\x4e\x33\x30\xe6\x7f\x3f\x88\x92\xbf\xe6\x7b\x32\x2d\x9a\xe0\xfa\x50\x4c\x63\xcb\x24\xf5\x23\xf9\x23\x45\xbb\xae\x39\xe6\x42\x22\x9c\x66\xaa\x28\x30\xb3\x42\xc9\x8b\x71\x25\x0a\x8e\xfa\x14\x2e\x16\x8b\x93\xba\xfe\x55\x55\x16\x46\x57\x90\xd2\xdf\x97\x97\x50\xd7\xe9\xeb\x76\x75\xfa\xaf\x0a\xf5\xfc\xda\x3f\xb2\x58\x80\x30\x60\xa7\x08\xff\x75\x57\x21\x48\x82\xca\x20\x07\xab\x20\xd3\xc8\x2c\x02\x93\x1c\xf0\x01\xb3\xca\xa2\x93\xe7\xd6\x0a\x34\x90\x2b\x4d\xcf\xd6\x75\xfa\xbb\xe2\x58\xfc\xc1\x4a\x5c\x2c\x4a\xf7\xdf\xf4\xc4\xce\x67\xb8\x5d\xb3\xb1\xba\xca\x2c\xd4\x27\x00\xd0\x6a\xe6\xcc\xb2\x31\x33\x98\x86\x75\x74\x13\xb5\x76\xff\x94\x3e\x59\x9c\x38\x03\x6e\x32\x35\x43\xd0\x68\x2b\x2d\x0d\x4c\xc4\x3d\xca\xb0\x01\xe3\xee\xa4\x27\x79\x25\x33\x88\x87\xda\x3f\x61\x86\xe2\x9e\x34\x9f\x6d\xb3\x2b\xf1\xe2\xe3\x04\xce\x48\x66\xea\xb5\x79\x33\xbd\x4e\xf0\x20\xaf\x97\x9e\x86\xad\xa4\x41\x4c\xb0\xf9\xad\xd6\xad\xc5\xb4\x17\x87\x3b\xb3\xa0\xb2\xac\xd2\x1a\x39\xf0\x4a\x0b\x39\xe9\x3b\xc2\xfd\x39\xd3\x2a\x43\x63\x8e\xdd\xd2\x5b\xad\xe3\xc4\xeb\x0d\x3b\x11\x39\x6c\x12\x96\x3a\xbc\x7f\xb9\x02\x29\x8a\xb0\x78\xb0\xf5\xcd\x0f\xd1\xda\xc5\xc1\x40\x91\x71\x01\xa6\xd7\xf6\xa1\x85\xc9\xc5\x56\xa6\xa4\xc5\x07\x0b\x2a\x1f\xf8\xb9\x79\xf4\x48\x58\x5e\xdb\x87\x38\x69\x74\xa4\xaf\x83\xae\xc3\x5d\x4d\x72\x9a\x1d\xa8\x4a\xda\xc1\x1e\x64\x55\x8e\x51\xbb\x2d\x50\x6e\x80\x90\xc6\x32\x99\x85\x0c\x9a\x69\x75\x2f\x38\x72\xbf\xb3\xa3\x77\xe4\xb4\xc7\x09\xc4\x42\xda\x7f\xfc\xfd\xdc\xbb\x3c\x39\xd2\xe7\x2f\xcf\xbf\x87\xdb\x83\xa9\x01\xb6\x0f\xd2\xa0\xb6\x20\xf1\x2b\x44\x43\x42\x89\x5a\xc0\x62\x93\x80\x90\x56\x11\xaa\xc6\x2a\x7d\x74\xaa\x7b\xad\x4f\x37\x35\x1a\xfb\x02\x48\xff\x9e\x71\xc7\xc7\x15\xfd\x34\xcc\xb7\x11\xae\xa3\x59\xc3\xab\x7b\x1e\xd1\xd4\xd8\xea\x90\x72\x50\xbd\x13\x92\xb7\x59\xc8\x8a\x62\xa9\x4a\xf9\x54\x0c\x1c\x5c\x32\x9b\x4d\xd1\xb8\x8a\xd7\x23\x99\x63\xd1\x73\x16\x38\xec\x6e\xef\xce\x86\xba\xbf\x11\x8e\x52\x14\x7b\x23\x49\x1b\x22\x13\x0c\x69\x77\xfd\xc1\x5e\xb0\xfa\x4d\x34\x76\xee\x34\x67\xa8\x35\x60\x3c\xba\x82\x92\x7d\x41\x0f\x04\x74\x48\x80\x83\xa2\x40\x19\xf7\xac\x4b\xbc\x2e\x47\x8c\xc2\x3d\xa8\x99\x9c\x60\xdf\xfc\x9e\x62\x2f\xfe\x56\xdc\xc1\x55\x7f\xc5\xad\xb8\x4b\xe3\x15\x4d\xc9\x6a\x5c\x95\x01\x0f\x29\x8a\x90\x5f\x9f\x30\xd7\x68\xa6\xa0\xfd\x2f\x1a\x10\x72\x56\xd9\xd5\x14\xf3\x44\x9e\x0b\x2c\xb8\x49\xe1\x83\x85\x52\x4c\xa6\x16\xc6\xae\x60\x95\x63\xd7\xa0\x7d\x15\x76\x4a\x3c\x25\x64\x56\x54\x8e\xdf\x35\x16\xcc\xc1\x7c\x74\x5a\x06\x2b\x7f\x10\x6b\xed\x08\x98\xd6\xb8\x00\xe9\x7b\xec\x8a\xa1\x11\x72\x52\x2c\xf7\x8b\x01\xcb\x41\x22\x0e\xb2\xd0\x15\x87\x9c\xa0\x0c\xe5\xd3\x80\x54\x16\x72\x55\x49\x4e\x97\x1d\x9a\xce\x9c\x61\x7f\xe5\xea\xad\x97\xf0\x56\x6b\x82\xf0\x0f\xf5\x09\x4d\x55\xd8\x63\xf1\x7f\x8f\x54\x61\x7f\x7c\x56\x13\x1e\x87\xe5\x33\xd9\xfe\xc8\x74\xee\xa7\xcd\xba\x0c\xeb\x67\xd2\x1b\x2c\xd0\x22\x70\xfa\x31\xcb\x2e\xef\x3a\xa0\xcd\x6e\x3f\xce\x47\x5e\xff\xf3\x28\x5d\x8d\xad\x01\xba\x77\xa2\xb0\xa8\x81\x71\xee\xdb\xc7\x28\xa7\x0b\x11\x84\xc6\xe7\x9b\x96\x28\x27\x39\xf6\x0a\xc0\xff\xa4\xfe\x62\x08\xf0\x2d\x0f\x3f\x0e\xca\x1d\x3c\xd2\x83\x70\xcf\xfa\xd4\xdb\x41\xb2\x2f\xf4\x01\xe9\x3f\xa7\xa8\x31\x1c\x72\x4d\x38\x59\x10\x6f\x87\xc6\xaa\x01\xde\x9d\x7f\xa3\x7b\x56\x54\x68\xa2\x63\x21\x27\x9d\x0d\xe2\xc6\xba\x33\xdf\x39\x78\xd9\x90\xa6\xa9\x90\x16\x75\xce\x32\xac\x17\xdf\xcb\x03\xdf\xda\x05\xfd\x1d\x35\x5b\x49\xd3\xf4\x20\x67\xd4\xb5\x2f\xf4\xbf\x36\x45\x92\x06\x18\x44\x19\xe9\xa7\xa6\x6e\xc2\xa2\x39\x2a\x50\x45\xad\xeb\x76\x75\x1a\x28\xa8\x29\xb6\x6d\x6b\xdc\x2c\x70\x4d\x71\x98\x55\x2c\x1b\x12\x28\xa9\x2b\x36\xaf\x24\xa8\x99\xbb\xc5\x8a\x4e\xc0\x3b\x2a\xf5\x68\x23\xf0\x03\x18\x9f\x9a\xbe\x01\x70\x89\x19\xf6\x19\xb4\xac\xd4\xfc\x2e\x6a\x36\xe3\xe0\x22\x67\xf9\xee\xea\x79\x65\xed\xd6\x17\x8b\xb8\xae\xad\xfa\x4d\x7d\x45\xfd\x9a\x95\x58\xc0\xf2\xfd\xc6\x7e\x17\x63\x3e\xea\x7c\x78\xed\x52\xd8\x0b\xb1\x2d\xa1\xb0\x3d\xcc\xb6\xb8\xbe\x4f\x98\xde\xde\xc3\xca\x59\x98\xb1\xf8\x48\xb9\xa1\x81\x52\x1b\x2f\xd7\xf3\x0f\x92\xe3\x43\xdc\x07\x8b\xae\x34\xcd\xe0\xa6\x0a\xb8\x73\xab\x57\x10\x46\x38\xe9\x9f\x9a\xcd\xf2\xb8\x64\xb3\x99\x90\x13\xd7\x68\x7c\x70\xf9\x2b\x59\x71\x0e\xa7\xef\xd1\x5a\x21\x27\xae\x79\x5c\xf6\x46\x04\xe3\x39\x08\x67\x0b\x75\xba\xbe\xaf\x89\x82\xde\x41\xa3\x99\x33\x51\x20\x1f\xc1\x8b\xfb\x53\x42\x26\x79\x24\xbc\x97\x97\x90\x4d\x31\xfb\xd2\x0b\x5b\xb4\xed\x04\xaf\x0b\x53\xb7\xf6\x9e\x69\x18\xc6\x3d\xdc\xde\x9d\x35\x9b\xf4\x28\xd3\xf5\xb6\x55\xff\xeb\xdc\xcb\xec\x3a\xf6\x7d\xc3\xb1\x43\xdd\x74\x72\xcf\x41\x7d\x21\x51\xcd\x43\x2d\x05\x4c\xc5\x2c\x4e\xfc\x9f\xc8\x7b\x4e\x8f\x93\x94\x9e\xbc\x9e\x3b\xf9\x31\x19\xd3\x41\x25\x72\xf8\x45\x7d\xe9\xe9\xda\xd3\xcb\x9b\x9d\x7c\xcf\x0a\xe1\xf5\x07\x83\x4f\x49\xe5\x08\xa2\x17\x26\x1a\x76\xa8\x0d\xc6\x83\x30\xb8\x66\x06\x3f\xcf\x67\xdd\x59\xe2\x34\x20\x98\x0c\x6c\xdc\xd7\xc7\x9d\x9f\xfb\xa9\x14\x7c\x77\x05\x6c\x36\x43\xc9\xe3\xe1\xf5\xf3\x3e\xe2\xc9\xa1\xa4\x1f\x88\x28\xee\xd2\x76\x28\xfd\xc0\x02\x50\xd7\x17\x80\x92\x07\x82\xff\x4d\x94\xc2\x82\x41\xeb\x59\xb6\x64\x0f\xa2\xac\xca\xde\x1c\x4d\x8d\xff\x83\x99\x35\x41\x38\x72\x97\x4e\x6e\x25\x1d\xfa\xc3\xc8\xf4\xdc\x1f\xe8\xfa\x27\x02\x91\xf7\x1a\x28\x1a\x15\xc3\x94\x19\x60\x85\x46\xc6\xe7\xc0\x45\x9e\xa3\x46\x69\x81\x86\xd7\x2a\x87\x19\x9b\x08\xb9\x44\xe0\x8f\x2b\xfb\xb4\xa5\xb8\xa0\x8d\x51\x47\xfa\x5c\xaa\x7b\xcf\xf0\x43\xdb\xab\x8f\x79\xee\x52\xbc\xf5\xa3\x6f\xb0\x34\x9d\xc1\x22\x03\x8a\x6e\xd3\xe9\xd9\xb0\x39\x55\x51\xf3\x45\xcc\x80\x19\x28\x99\x9c\x07\x27\x47\x06\x72\xad\xca\x40\x53\x33\x65\x84\x55\x7a\xee\xc4\x8f\x31\x57\x1a\x61\x8c\x13\x21\xa5\x23\xda\xae\x0c\xfb\xc5\x74\xd6\x83\xc8\x9b\x11\xc1\xcb\xe6\x5d\x87\x71\xcd\x02\x33\xa0\x4a\xe1\x19\x9a\xd2\xb3\x59\x96\x15\xac\x32\x98\x3e\xa9\xe8\xf1\xb6\xc5\x1e\xb1\xe7\x15\x3f\x03\xd3\x0f\x8d\xa0\x1b\x74\xb7\xba\xa3\x50\xd7\x6f\x91\x1f\x9d\x0f\x5c\x7c\x84\x62\xe2\xbb\xb7\xa2\x50\x5f\x91\xf7\x96\x1a\x12\x32\x72\x37\xe1\xa2\x3d\x89\xa6\xff\xd4\xa2\x64\x7a\xde\xf4\x7f\x97\x6b\xee\x60\xa5\x95\xf4\xf7\xbb\x0e\xb5\x2d\x74\x61\x75\x60\xd9\xf0\xae\x8d\x34\xf8\x35\x7d\xc9\xcd\x95\xa1\x44\x94\x9c\x9e\x3b\xf2\x75\x15\xed\x2f\x0e\x1b\x5e\xea\xef\x7e\x68\x80\xb8\x46\x82\xcc\xba\x41\x7b\x78\x0b\x11\x36\xb4\xb5\x43\xd8\x39\x8e\x5a\xd7\x20\x1e\xde\x29\x7c\xcf\x2e\x81\x16\x75\x6d\xe0\x88\x86\x8d\x2b\xe7\x93\xe8\xf4\x7c\x5b\x7f\xb0\x77\x6f\xd0\xba\xa3\xed\x0a\x9a\x2b\xc7\xf5\x03\xfd\x20\xbc\x41\x7b\xe8\xf9\xcf\x55\x0b\xcd\x51\x5f\xcf\xbb\x64\x37\x4a\xdb\x26\x08\xe8\xad\x4f\xff\x15\x2f\x5c\xcf\xdd\x49\x8c\x55\x45\x58\xe3\xe0\x54\x4e\x04\x72\x60\x26\x43\xc9\x9d\x1b\xe0\x83\xf4\x57\x89\x08\x9c\x40\x8e\xcd\x4d\xa7\x94\x71\x0e\xd1\x45\xd4\xd4\x92\x96\x63\x40\xba\x1a\x21\x52\x4c\x21\xba\x10\x3c\x4a\xe1\xf3\x14\x83\x24\x95\xf7\xb9\x88\xda\x1e\xec\x38\x49\x4c\xa4\xc8\x45\xc6\x64\x86\xcd\x4a\xa7\xd7\x95\x19\x7a\x7c\x13\x49\x29\x6d\x47\x7b\x91\x4c\x5d\x8b\x3c\x2c\x48\x6f\x94\xb6\x6c\x5c\xe0\x66\xf6\xe9\x58\xe6\x5b\xd1\x4d\xf0\xd3\x53\xe4\x1b\x07\x62\x40\xaa\x7b\xe7\x10\x5e\xe2\x2b\x6d\xfd\xcb\x06\x6f\x77\xff\x3d\xc3\x6e\xe6\x11\x79\xf7\x68\x02\x57\x57\xf0\xf2\xd1\x14\xb1\x8b\x21\x32\x26\x1d\x2b\x50\xe3\xd4\x8f\x1b\x32\x95\x49\xc0\x72\x66\xe7\xc1\xe0\xdd\xa4\x71\x2c\x5d\x38\x06\xf7\xea\x3b\x18\x29\x00\xfa\xd0\x90\x31\xb7\x2f\xef\x1c\x30\x2e\x99\x86\xd0\xf8\xc7\xc3\x1b\x9a\xf4\x4d\x9b\x7e\x43\x31\x2d\x37\xc1\x55\x90\xf7\xb7\xd1\xdd\x1a\x83\xfe\xcf\x6b\xc0\xd6\x43\xe2\xde\x5e\xed\xf2\xa4\xf7\xf2\x8c\x7c\x4b\x57\xeb\x5e\x7d\x1e\x0d\x11\x6f\xfd\x3f\xf2\x7e\x1d\xb6\x83\xbb\x5a\xc1\xc0\x1c\x9d\xfa\xd5\x32\xb1\xe5\x84\xb8\xcf\x84\xd0\x13\xe4\x45\xb7\x8a\x06\x83\xa3\x2b\x88\xb7\x8c\x23\x92\xe5\x87\x7c\x31\x53\x34\x86\x8a\x67\x5a\x48\x9b\xc3\xe9\x5f\x2f\xcc\xe9\x50\x6e\xd2\x0c\x24\x5f\x71\xbe\x3a\xe3\xf1\x85\xcc\x97\x07\x1e\x46\x3c\xeb\x56\x49\xbe\xfa\xfe\x79\x75\x12\xf4\xad\x06\x88\x6b\x4d\xed\x8f\xc8\x9a\xbd\x2f\x16\xe0\x2b\x4d\x37\x3b\x33\x37\x85\xc8\x9c\x2d\x69\x4a\xc5\x64\xb1\x38\x5b\x3f\xd3\x58\xf3\x62\xf2\x3b\x0c\x0f\x57\xde\xb8\x3c\x99\x01\x62\x30\x7e\x8f\x19\xe1\x64\xdb\x8c\xb0\x8d\xf4\xe3\x86\x85\x4d\x76\x8a\x9c\xb8\x66\xc5\xa1\x94\x34\xfb\x62\xde\xe0\xf6\x8a\xf3\x36\xeb\x7a\x43\xa0\xb5\x81\x94\x04\x03\x2e\x00\x0b\xd3\xa9\x5b\xf9\x3a\xa0\x81\xe8\x77\xff\x5a\xd3\x55\xdc\xf5\xf2\xd6\x7e\x23\xb0\x21\x86\xd7\x7e\x2d\xb0\x76\xed\xad\xb8\x7b\xe4\x0b\xbc\x0d\x60\x78\x8d\x2d\xc7\x75\x33\xae\xfe\xbc\x6b\x6f\x5e\x73\x8f\x5c\x9e\xc1\xe7\x8f\x6f\x3e\x8e\xc2\x2c\x37\x4c\x24\xda\x27\x05\x7d\xe9\x42\x9d\xa5\x55\x30\x46\xa0\xf9\xca\xd9\xe5\x0f\xa2\xc5\x1b\xb4\x6b\x08\x8f\xc6\x41\x4f\x8d\x16\xd7\x9a\xfa\x93\x16\x7f\xd2\xe2\xa1\xdf\xfc\xa2\xfd\x49\x8b\x3b\xc0\xf8\x11\xb4\xe8\x47\xb4\x9e\x14\x35\x96\xea\x1e\xf9\x71\xc4\xe8\xc7\xc3\x4e\xd0\x1a\xf2\xf2\x1a\x9e\x1e\xcb\x6d\x32\x78\xeb\x67\x32\x8f\xa4\x28\xfa\x54\xe6\x19\xb3\xd4\xcb\xf3\xa7\x45\x54\x87\x24\x9e\xf7\xf3\x6a\xee\x25\x4b\x29\x16\xfe\xf7\xbf\x00\x00\x00\xff\xff\x42\xf5\x55\x7d\x55\x32\x00\x00")

func bindataTemplates04collectionbuildertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates04collectionbuildertmpl,
		"templates/04_collection-builder.tmpl",
	)
}



func bindataTemplates04collectionbuildertmpl() (*asset, error) {
	bytes, err := bindataTemplates04collectionbuildertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/04_collection-builder.tmpl",
		size: 12885,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598911275, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates05modeltmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x3d\x4e\xc6\x30\x10\x44\x7b\x9f\x62\xe4\x3e\xfe\x7a\x5a\x3e\x0a\x9a\x84\x22\x17\x58\xf0\x24\xac\x88\x7f\x14\x1b\x21\x64\xf9\xee\xc8\xa1\x41\xa2\x5b\xe9\xcd\x4a\xef\xb5\x36\xc1\x73\xd3\x48\xd8\x90\x3c\x0f\x8b\xa9\x77\x73\xbb\xe1\x31\x79\x62\x67\xe4\x29\x95\x1e\xaf\xdf\x88\xfc\x3c\xd3\x9e\x22\x8b\x16\x87\xfb\x82\x79\x59\xf1\x74\x7f\x5e\xdd\xd8\xaf\xef\x5a\xb0\xe9\x41\x7c\x49\xf9\xf3\x28\xf5\x61\xe0\xd6\x50\x35\xb0\x54\x09\x19\xbd\x1b\x93\xe5\xed\x43\x76\xa2\x35\xf7\xf2\x7b\xce\x12\x38\xc8\x98\x32\xe4\x43\x2a\x61\x35\xe4\x74\xd6\x62\xe1\xf0\x8f\x5d\xc2\xd3\xa5\xaf\x55\x53\xb4\x70\xbd\x9b\x91\xc4\xe8\x47\xc7\x4f\x00\x00\x00\xff\xff\x31\x40\xd6\x3f\xde\x00\x00\x00")

func bindataTemplates05modeltmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates05modeltmpl,
		"templates/05_model.tmpl",
	)
}



func bindataTemplates05modeltmpl() (*asset, error) {
	bytes, err := bindataTemplates05modeltmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/05_model.tmpl",
		size: 222,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598954715, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates06primarytmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xdb\x6f\xd4\xb8\x17\x7e\x9f\xbf\xe2\x10\x41\x27\xa9\xa6\x01\x5e\x8b\xfa\x00\x3f\x2e\xbf\x6a\xb7\x08\xd1\xb2\x48\x8b\x50\x15\x92\x93\x8e\x45\xe2\x04\xdb\x33\x50\x45\xfe\xdf\x57\xbe\x24\x71\xee\xc3\xa5\x5a\x96\x27\xc6\xb1\xbf\xf3\xf9\xdc\xfc\xd9\xad\xaa\x04\x53\x42\x11\xbc\x92\x91\x3c\x62\xb7\x1e\x9c\x48\xb9\xaa\xaa\x13\xb8\x5f\xec\x04\x9c\x9e\x41\xa8\x47\x1e\x3e\x84\xff\x15\x79\x49\x32\x04\x41\x72\x84\x78\x8b\xf1\x67\x20\x29\x54\x55\xf8\x3a\xca\x51\x4a\x20\x79\x99\x61\x8e\x54\x70\x35\x78\x11\x95\x25\xa1\x37\x52\x5e\x14\x09\x66\x40\xa8\x40\x96\x46\x31\x86\xab\x7d\xc4\xe0\x7a\x64\xca\x19\x1c\x35\x60\x95\x5c\x29\x93\xe7\xfc\x8d\xa1\xf5\x07\xde\xfe\x8d\xac\x38\xd0\x06\xe4\x28\xb6\x45\x12\xae\xd2\x1d\x8d\xc1\xaf\xaa\xf0\x2d\xc6\x48\xf6\xc8\xa4\x84\xe3\xc6\x48\x30\xc0\xf7\x03\xf8\x54\x14\x19\x54\x2b\x00\x00\x86\x62\xc7\xa8\x32\x64\x67\x85\xe7\x5c\xcd\x92\x72\x65\xe8\xbd\x42\xd1\xae\xff\x2b\xca\x76\xf8\xab\x09\x0e\x2d\xf8\x41\x0b\x53\xc9\x01\xd3\x16\x27\x74\x78\x1b\xb8\x31\xd6\x97\x82\x11\x7a\x73\xf7\xdc\x1d\x3b\x7e\x00\x3e\xd7\x3f\x37\x80\x8c\x15\x2c\xb0\xbb\xa8\x2a\x92\x42\xc3\xd9\xac\x78\x85\x42\x20\xd3\x29\xd8\xd9\x28\x18\x04\x64\xe0\x73\xcc\x30\x16\x05\x83\x86\x08\x74\x36\x1e\x8c\x63\x4a\xb9\x01\x4a\x32\x6b\xf9\x04\x30\xe3\x08\x2e\x81\x73\x7e\x85\xdf\xc4\x45\xc4\xf8\x36\xca\x1c\x0e\x24\xd1\xbc\x55\x6d\x2c\x38\x3c\xb4\x8b\x15\x8e\x1f\x98\xc5\xa9\x5e\x7b\xef\x4c\xd9\xb6\xfb\x76\x36\xe6\x79\xd6\x27\x3c\x7c\xcf\xa2\x32\xf5\xdd\x40\xbc\x60\xec\x25\xc1\x2c\xd1\x5e\xdc\x80\x47\xe8\x3e\xca\x48\x02\xb6\x74\x21\x55\x1f\x61\xaf\xbe\x9e\xc2\x83\x3d\x88\x02\xca\x88\x71\xb4\xbe\x0a\xe1\x05\x63\xea\x83\xb7\x59\x22\xae\x49\x18\xc2\x1d\xbf\x1b\x20\x9f\x24\xc1\xa2\xef\x8c\xab\x87\x81\x9b\x77\x98\x59\xe5\x8f\xc1\xf7\x90\x7a\x9e\xea\x3b\x4a\x27\xed\x73\xd5\xdb\x88\x20\x05\xdd\x80\x97\xeb\x34\x5e\x37\x09\xba\x86\x6d\xc4\xa1\xef\xc3\xcf\x58\xfb\x51\xdc\x96\x38\x70\xa1\x17\xb4\xa4\x68\x32\x5e\x52\x4f\x93\x84\x21\xe7\x77\x5a\x4e\xd6\xc6\x5c\x33\x38\xfa\x81\x6e\xf0\xff\x88\x6f\xa3\x4f\x19\xde\x7d\x3f\xe8\x58\x1a\xdd\x46\xb7\x1b\x9c\xf3\x37\x85\x9e\xd3\x96\x61\xba\x94\x4d\x70\x36\x51\x65\x4b\x9e\x69\xf3\xbe\xaa\x90\x26\x8d\xc9\x3e\xa5\x67\xb7\x02\x2f\x33\x12\x0f\x92\xd3\xd6\xc9\xc4\x16\xa4\x3c\xd6\xb8\x52\x2e\x10\xa9\x93\x6d\x2c\xff\x7f\x16\xbb\xb7\xbd\x91\x64\x50\x47\xdd\xdd\x27\x42\x63\x65\xfe\x60\x53\x7d\xf3\x4b\xbb\x5f\x2d\x06\x3c\x4a\x32\x4f\x6d\x74\xc2\x13\x7e\xeb\x89\xfa\xeb\xd5\x6d\x89\x33\x2b\x02\xbb\x62\x64\xe5\x2b\x14\xe6\xec\x9f\xe5\x52\x03\x58\x7f\x5e\xba\x3b\xfd\xd5\x6e\xbc\x1c\x6a\x83\xbd\x09\x57\xeb\xc6\xc0\xf4\xc8\xc3\x4b\xca\x20\x0c\x0a\x67\xb1\xd2\x9a\x7e\xed\x44\xad\x1e\x1a\x2b\x25\x92\xc2\xf5\x7e\x03\xc5\x67\x75\x8c\x6a\xa3\xa1\x3f\x88\x53\xf0\x44\x4d\xf8\x1e\x16\xd7\xfb\x29\x12\x7a\xef\x11\x4d\xc0\xa7\x85\xe8\x1c\x54\xaa\x80\x83\x39\xb7\xc8\xe6\x7c\x9b\xa3\xfc\x2c\xe2\xf8\xa3\xb4\x8f\xe6\x78\x5b\xb7\x55\x15\x8b\xe8\x0d\xc2\xfd\xaf\x2c\x2a\x4b\x4c\xb4\x36\xaf\x91\xde\x9b\x31\x65\x9f\x1f\xc6\xbb\x86\x19\xa3\x4b\x52\xad\xfe\x67\x5c\xa2\xfe\x09\xcc\x4b\x23\x82\xb8\xee\x81\x9d\x25\x8a\x09\x3c\x96\xd2\xbf\xde\x07\x0e\xb2\x9e\xd3\x71\x46\x67\x55\xeb\x10\x05\xee\xac\xeb\x74\xc0\xef\x83\xea\x8d\xb7\x61\xea\x51\xeb\x36\x7a\xf7\x97\xd3\xfc\x33\x04\x3f\x43\xda\x3a\xfe\x69\x26\x90\xd1\x48\x68\x4c\x1e\xc0\x63\x07\xe3\x04\x4c\xa7\x38\x74\x85\xba\x63\xe9\x6b\x55\x54\x4f\xd1\x22\x84\x43\x5a\x30\xb8\x21\x7b\xa4\x46\x9a\x84\x33\x15\x44\x68\x82\xdf\xa6\x8c\xc1\xa3\xff\x46\xb4\x7b\x8a\xef\xa7\xe2\x3d\x1a\xeb\x5a\xbd\x1d\xd6\xb0\x7a\xf7\x92\x38\xa2\xb4\xe7\x9c\xe6\x98\x3a\x88\xa4\x86\x30\xbd\x7a\xf4\x84\x77\x10\x7b\x77\x01\x0d\x36\x79\x1f\x28\x59\xb1\x27\x09\x26\x8d\xa8\xb5\x57\x81\xf5\x83\xab\xb5\xce\x21\xb1\xc5\xde\x65\x41\x8d\x6a\x61\x6c\x66\x79\x9b\x86\xc0\xde\x80\x76\x7a\x57\x73\xba\x8d\x86\xe9\xfb\xd2\x97\x7f\x25\x22\xde\xc2\xb5\xb6\xa3\xf3\xa7\x4d\x63\xb5\xac\xbd\x14\xda\xb6\xd7\xa2\xba\x8d\xaf\x97\xe0\x35\x97\x38\xe2\xa8\xc2\xd1\x2c\x92\xf2\xf4\x27\x52\x7e\xba\x83\xd4\xec\x7f\xdb\xb4\x1f\x23\xe8\xa6\x7f\x93\xe5\x09\xa6\xd1\x2e\x13\xa7\x0b\x29\x78\x67\xe9\xd7\x5e\xcc\xbc\x0d\x38\xc5\xd1\x51\xbd\x94\x64\x33\x0a\xeb\x0e\x1f\x33\xa6\xec\x58\xc9\x65\x04\xff\x9c\xda\x32\x6b\x2e\xbb\xcf\x19\x22\x2f\x9d\xb7\x04\x8b\xf2\x46\x5d\x38\x19\x78\x1a\xd9\x9b\x40\x68\x65\xd4\xdc\x73\x02\x32\xd6\x3f\xc1\x7c\x75\xee\x5b\x13\xdd\xfe\x3d\x6a\x28\x70\xce\xb3\x25\x15\x33\xd0\x6f\xbe\xc8\xcb\x60\xbc\x59\x2c\xa3\x09\x5b\x1b\xdd\x74\x1d\xa8\xa3\xc9\x87\x9b\x77\x34\x1f\x3e\xdd\xa4\x87\xbe\xdc\x34\xab\xf5\xdb\xcd\x87\x8f\x9f\x6e\x85\x8d\x75\x10\x3c\x59\xf2\xf9\xef\xfa\x7c\x33\xe6\x35\x25\x89\x87\xcf\x36\x13\x22\xb9\xa7\x6d\x66\xfa\xe7\x01\x9a\x57\xef\x74\x96\xde\xe1\x60\xf3\x58\xd3\x67\xd6\x30\x66\xff\xee\x43\xd2\x25\x8a\x97\xac\xc8\xdd\xee\xa5\x7e\xdb\xa2\x77\x1e\xd1\x0f\xe8\x57\x6a\xa1\x6f\xc8\x0e\x3a\x60\xb7\x53\x91\xd4\x74\xe1\xc9\x07\x93\x19\xff\xbc\x26\x99\x46\x74\x0f\x00\x85\x61\x00\x45\x01\x1c\x05\xa4\xac\xc8\x3d\x37\x21\xd5\x40\xad\x5d\xf5\xcc\xd0\x77\xd8\xd7\xa4\xee\x75\x94\xea\x90\xcb\x73\x14\x83\x12\xd3\x64\x5e\x17\xe2\x22\x12\xf1\xd6\x25\x65\x08\x25\x05\x72\xba\x16\x90\xab\xcf\xfa\x44\x22\xb4\xdc\x89\x53\x78\x70\xe5\x6d\xcc\x1c\x97\xe7\x71\xd7\xc3\x67\x70\xac\x98\xf7\x13\xcd\xc6\x4e\xb0\x5d\x2c\xda\x12\xe7\x70\x83\x82\x6b\x1b\xe6\x90\x50\xa7\x1d\x2f\x31\x26\x29\xc1\x04\xd6\x3a\x3b\xd6\x07\x84\xb2\x87\xeb\x9b\xb4\x3a\x76\x37\xee\xcc\x09\xc0\x77\x1e\x00\x7a\x4f\xec\x56\x75\x19\x1d\x76\xae\xee\x0a\x1f\x1e\x7d\xec\x2b\x2d\x83\xaf\x54\x96\x03\x3b\xd4\x56\x0e\x88\x94\xa7\x4a\xfe\x35\x83\xce\x13\xd3\x92\x3c\x76\x17\x6c\x86\xb7\xde\x29\x55\x42\x49\x36\xff\x52\x7e\x6e\xea\x51\xa7\x83\xde\xc0\x98\x42\xd1\xc6\x95\x42\xe1\x6b\x47\xa5\x5a\x45\xd2\x11\x24\x2d\x4d\x3f\xa8\x13\x44\xae\x56\xe6\x8c\x7f\x8b\x59\xa4\x9a\x03\xaf\xff\x54\xf6\x27\xe1\xa2\x1e\xd4\x0c\x38\x64\x84\x0b\x0e\x3b\x4a\xbe\xec\x10\x98\xfd\x66\x4c\xf1\xe5\x1c\x18\x02\xfa\x01\x7c\xf8\x38\x54\x36\x9d\x67\xb3\x91\x09\x95\x6e\x39\x36\xd0\x0d\x0d\x15\xeb\x77\x9a\x5a\x8f\x75\x1d\xf3\xa3\xaa\x6a\x66\x4b\x59\xc9\x4d\x13\x20\xe5\x86\xb6\x8b\x35\xff\xfb\x27\x00\x00\xff\xff\xd9\x04\x47\x41\x59\x1c\x00\x00")

func bindataTemplates06primarytmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates06primarytmpl,
		"templates/06_primary.tmpl",
	)
}



func bindataTemplates06primarytmpl() (*asset, error) {
	bytes, err := bindataTemplates06primarytmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/06_primary.tmpl",
		size: 7257,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1599069382, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates07fieldertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x5b\x8f\xdb\xb8\x15\x7e\x9f\x5f\x71\x6a\x6c\xc6\x92\xe1\xc8\xc9\xab\x17\x29\xb0\x97\x74\x1b\x14\xc9\x06\x75\xda\x02\x1d\x0c\x06\x1c\xeb\x78\x4c\xac\x4c\x79\x49\x5a\xbb\x53\x41\xff\xbd\x20\x45\xeb\x42\x51\xb7\x38\xce\x78\x17\xe3\xb7\xb1\xc4\x73\xfd\xce\x77\x0e\x69\x4e\x9a\x86\xb8\xa1\x0c\x61\xb2\xa1\x18\x85\xc8\x27\xf0\x32\xcb\xae\xd2\xf4\x25\x7c\x13\x1f\x24\x2c\xdf\x40\xa0\xbf\x59\x2c\xe0\x87\x78\xb7\xa7\x11\x82\xa4\x3b\x84\xf5\x16\xd7\xbf\x00\xdd\x40\x9a\x06\x1f\xc8\x0e\xb3\x0c\xe8\x6e\x1f\xe1\x0e\x99\x14\x90\xa6\x6a\x75\xf0\x9e\xec\xf7\x94\x3d\x64\xd9\xdf\x72\xe1\x40\x99\x44\xbe\x21\x6b\x0c\xae\x12\xc2\xe1\xae\xf5\xc5\x37\x70\x5d\x08\x4e\xb3\x2b\xa5\xfe\x27\x94\xfa\xa9\xf8\x2e\x0c\x39\x0a\x01\x0f\x28\x05\xc8\x2d\x02\x31\x5f\xc4\x1b\xd8\xf3\x38\xa1\x21\x86\x30\xd5\xfe\x4c\x83\xab\xcd\x81\xad\xc1\x4b\xd3\xe0\x9f\xb8\x46\x9a\x20\xcf\x32\x98\x15\xb2\xfd\x86\x58\x4f\x2f\x54\xaf\xd4\x2d\x5b\x49\x7e\x58\xe7\xaf\xfa\xe0\x15\x8e\xa4\xd9\x1c\x90\xf3\x98\xfb\x90\x5e\x01\x80\xf8\x8d\xca\xf5\x16\xb4\x90\xe0\x1d\x0b\xf1\xf7\x9b\x57\xb7\xf9\x23\x48\x53\x4e\xd8\x03\xc2\x37\xb9\x0a\x15\xdb\x5c\xb5\x8e\xb0\x7a\x63\x4d\x04\xaa\x98\x54\x96\x67\xd9\x12\x16\x8b\xf2\xcb\xdc\x6e\xfd\xb6\xfa\x70\x94\x07\xce\x54\xb4\xb4\xb9\xa5\x93\x81\xb5\x62\x0e\x8c\x46\xc6\x0c\x64\xa1\x52\x99\x4b\x31\x12\x18\x8d\x8c\x27\x22\xf8\x0f\x27\xfb\x8d\x67\x47\xe0\x2d\xe7\xef\x58\x42\x22\x1a\xbe\x8f\x43\x8c\xb4\xe9\x73\x98\x14\x21\xa7\xf9\xc3\xdc\xf7\x25\x4c\x5f\x88\x29\x6c\x62\x0e\x0f\x34\x41\x06\x3b\xb5\x66\x59\xc2\x65\x3a\x99\x43\x69\x9f\xe7\xfb\x57\xf5\x34\xff\x17\x79\xfc\x6f\x12\x1d\x70\x1c\xae\xc4\xe0\x84\x17\x0a\x4e\xcc\xf8\x57\x4f\x79\x9a\x2e\x66\x56\xfa\xd3\x94\x6e\x00\x7f\x35\x6a\x02\xe5\x1a\x4c\x18\x8d\x26\x59\xa6\x1f\x1d\xa5\x8b\x8f\xb1\xf6\x23\xcb\x3c\x8d\x02\xf5\xd8\x3c\xfb\xf4\xb8\xc7\xd6\xb7\x7d\xf3\x76\x63\x95\xd2\x64\x56\xb9\xd5\x1f\x57\x6a\xf8\xcd\x16\x85\xdb\x35\xe3\x6b\xc2\x1c\x40\xd5\x7f\x85\xb8\x21\x87\x48\x2e\xed\xe5\x5f\x18\xb8\xc0\xc8\x0e\x73\xf4\x36\x10\xaa\xb4\x66\x06\xa7\xef\x44\x81\xa2\x91\xcc\xd7\x07\xd0\x8a\xe4\x61\xd0\xbc\x8f\xe3\xe8\x89\x31\x69\xa7\xf2\x9d\x68\x4d\x66\x8d\x75\x36\x24\x12\xf8\xb5\xd2\x97\x27\x6e\x75\x6e\x82\x69\x28\x18\x94\x45\x1d\x82\x27\x63\x94\x9e\xe6\x01\x6f\xec\x2a\x1d\x51\xa0\x5f\xb3\x36\xeb\xbc\x50\xb6\x94\xbf\x13\xb1\x25\xf7\x11\x6a\xf9\x9f\x91\xf5\x21\x5d\xa5\xa9\xe3\x8f\xd7\x59\x1c\xec\x5f\xa3\x6c\x3d\xf0\xf5\x82\xe5\x8d\x0a\xbe\xb1\xd3\xc5\xd6\x47\x4e\x28\x73\xd6\x44\x53\xd3\x9e\xef\x1f\x25\xae\x22\xba\xc6\xda\x3b\x15\xd9\x42\x72\xca\x1e\xbc\x96\x1e\x36\x2b\x7b\x57\xb7\xfd\x7e\xdd\x40\x35\x0b\x63\x24\x5a\xb5\x9e\xaa\xce\xa1\x4d\xad\x7b\xfa\x51\x6d\x3a\x78\x56\x3b\x53\x41\xfd\x71\x0b\xa9\x6c\x87\x7f\x8e\xa1\x7c\x75\xc6\x44\xaf\x46\x26\x7a\x0e\x49\x6e\x45\x99\x6d\x1f\x3c\xe4\xfc\x02\xb8\x33\xe6\x4d\xfa\xf4\x08\x0b\xcb\x6f\x73\x02\xf3\xca\x61\xf9\x3b\xce\xc9\xe3\x8a\xfe\x0f\xe1\x95\xef\xdb\x5c\x9b\x7b\xea\xe4\xd3\x21\x3d\xbb\x4a\x2c\x56\x67\x1c\x42\xbf\x74\x03\x77\xc9\x1c\xe2\x5f\x54\x84\xb4\x29\x81\x67\xed\x17\xfc\x6f\xd5\xe3\xf1\x96\xdd\x25\xbd\x86\xe9\x80\xaa\xd8\x79\x2c\x96\x56\x00\xfd\x66\x98\x2b\x76\x2f\x16\xf0\xc3\xf1\x78\x82\x4a\xa0\x02\x58\xcc\x5e\xee\xcd\x8b\xb9\x23\xc3\x9c\xfc\x9e\x08\x3c\xcd\xd1\xeb\x41\x9e\x96\x8c\x5f\x40\x49\x39\xed\xb9\xf0\x64\x47\xc2\xca\x58\xfe\xf4\x47\x22\xc9\x3d\x11\xf8\x21\x96\x1f\x0e\x51\xe4\xf9\x70\x7d\x7d\x2a\x9a\x5c\x13\xe0\x67\x22\xab\xde\x33\x9b\x4d\x9d\x6e\xe0\x01\x19\x72\xba\xb6\x32\x73\x73\x5b\x2d\x7b\x67\x4e\x6a\x5b\xd1\x4a\x75\x35\xfa\x77\xff\xb4\x03\x27\x4d\x3c\xea\x23\x71\xb7\x57\xe6\xa7\xa9\xd0\x4e\x56\x8a\x07\x5e\xeb\xa3\x2d\x7b\xc5\x20\x50\x29\xb1\xb5\x95\xb6\x67\x76\xc0\xd5\x47\xd1\xfe\xdd\x1c\xa8\xc4\x9d\x32\x29\xa7\x40\x13\xe6\x46\x14\x5b\x66\x1e\xba\x81\x08\x99\x67\x56\xf9\xf0\xd7\x12\x15\x45\xa8\xb3\xcc\x11\x88\x81\x7b\x81\xb2\x13\x54\x9b\x98\x8c\x63\xd8\x11\xf6\x98\xa3\x40\x68\x4f\xe4\x16\x8b\xa6\x66\x45\x68\xe2\x77\xc6\x66\x48\xd6\x4f\xcf\x7c\x42\x78\x9e\xfd\x96\xd4\x7f\xa1\xc4\x8f\x49\x3e\x1d\x91\xfc\x1a\x21\xd5\x62\xa7\x89\x89\xe6\x67\x14\x2a\x8f\x7b\x0c\x57\x15\x07\xfd\xb6\x58\x96\x2c\xab\x8c\x18\x4c\xb2\xd0\x05\xc7\x56\xd1\x5a\xb2\x30\xe6\x29\xe1\x6f\x23\xdc\x19\x0b\xbb\xf4\xa8\xd0\x39\xb5\xc0\x38\x6e\xa9\x2d\x19\x84\x36\xf5\x99\x0d\xc1\x80\x72\x89\x85\x5e\xff\xbb\x73\xb8\x4b\xfc\x16\xab\x3a\xe2\x09\x03\xb1\x68\xec\x38\xd5\x0c\x27\xd0\x06\x1a\x39\x26\xb6\x03\x02\xe6\xdf\xd0\xdb\xe6\x6c\xf2\xe5\x82\xd6\x2f\xbe\x3b\x18\xad\x4f\xd7\x31\x93\x94\x1d\xb0\x87\x19\x8c\x91\x24\x92\xc8\x19\x91\xba\xe8\x84\xaa\x1a\xaf\xf8\x4a\x80\x55\x94\xee\x72\x2e\x89\x00\x7f\x05\x2f\x42\x06\x9e\x25\xd6\xf7\xe1\x55\xc7\xda\xe3\x32\x7b\x15\xbc\x76\xae\x29\x26\xba\xe2\x75\x90\xda\xf8\x63\x27\xb0\x22\x1d\x0c\x63\x09\xaa\xe6\x7a\xdb\x06\x78\xd5\x4e\x10\xd0\x80\x9d\xe2\x95\x3e\xe8\x95\x43\x80\x15\x5c\xa5\xca\x6b\xaf\x0e\x13\xe3\x06\xdd\x7c\x9d\xaa\xd5\xbd\xe6\x5c\xfc\x71\x43\x6f\xdb\xba\x19\x7c\x21\x66\x78\xba\xd0\x39\x3a\x9b\xca\xf2\x59\x63\xd9\xa2\xf3\x29\xa9\xe6\xa4\x91\xaf\x7e\xee\xab\x8a\x7d\x09\xd3\x17\x9f\xa6\xf6\xec\xf7\x42\x4c\xcc\x81\x80\xeb\x40\x78\x70\xa0\xcd\x69\xc1\x5d\x52\xd2\x83\xd4\xec\xe7\x1a\x12\xcc\xe1\x41\x8d\x36\xd4\x3a\x9b\x48\x5c\x8a\x8e\x07\x0b\xb5\x57\xb3\x6c\x79\x6e\xaa\x79\x26\x9a\x67\xa2\xb9\x54\xa2\x69\x87\x79\x5b\x01\xcd\x86\x56\x50\x57\x3d\xcc\x9e\x0b\xa2\x23\x29\x6e\xfe\x6c\x79\x62\x76\x9c\x8d\x5f\x00\xab\x9f\x0b\x6b\x07\x59\x05\x7e\x4d\xb7\xfa\x4f\xb7\x9a\xe1\xa8\xc2\xb8\xb2\xf3\xac\xf7\x81\xe3\x24\x8b\x21\xfc\x96\xbf\x93\x4f\xb2\x41\x45\x8c\xe9\x2f\xc7\xe7\xaa\xb3\xf4\x48\x6d\x39\xc4\x34\x12\xda\x4e\x2f\x87\x6c\x9f\x7a\x0e\xb0\x1a\xa5\xff\x79\xa7\x18\x69\xea\x04\xf5\xa8\x53\xc9\x0e\x3e\x72\x1f\x89\xf4\x9f\x59\x1a\x6c\x34\x8f\x2e\x6b\x5b\x9f\x23\x4b\x58\x3b\x19\x6b\xfb\x53\xdf\xf6\xb8\x97\xbc\x76\x42\x65\xfc\xa6\xc7\x0d\x07\xb3\xdb\x71\xa9\x6e\xdb\xf3\x5c\x16\x46\x5a\xa8\x6f\x14\x4a\x5a\x11\xe2\x22\xb7\x4e\x84\x5c\x08\x9f\x39\xc3\x52\x1b\x67\x0d\x00\xec\x79\xb6\x63\x8e\x75\x42\xa4\x2a\x7f\xd0\x14\x3b\x16\x3c\x43\xea\xf8\x72\x81\xe3\xf6\xd6\x8e\x59\xef\xe0\x32\x6a\x60\x19\x1f\x0f\x57\xd7\xea\x6a\xde\x17\x02\xf2\x46\xd5\xb5\x5f\x99\x38\x7e\xb3\x98\xc1\xa7\x9f\x7f\xfc\x79\x09\x02\xa5\x56\x26\xd6\x84\x31\xe4\x40\xc4\xb1\x3c\x94\x45\x3a\x2d\xd6\xbd\xc4\x34\xed\xbc\xf0\xf1\xd4\xc1\x68\xb9\x22\xa2\xff\x3a\xff\x1d\xac\xca\x1d\x02\x65\x75\x79\x57\x44\xcb\x6c\xbb\x46\x00\x95\x9b\x93\x2b\x94\x1f\x39\xdd\x11\xfe\xf8\x0f\x7c\x5c\xe9\x3b\x3b\xbd\xf7\x0a\xb4\x61\xe5\x4f\xfe\xb0\x43\xb9\x8d\xc3\xfe\xcb\x05\x1f\x09\x17\xf9\x85\x2c\x51\xd1\x34\xe2\x96\x41\x7e\xa7\xe8\xa2\x2e\x97\x54\x99\x26\x77\x6a\x85\xd2\xa6\xd6\xe2\x06\x8a\xf1\x40\x07\x82\xc3\x44\x7b\x35\x71\x2d\xb7\xea\x47\x57\x80\xf9\x05\xbe\xa0\xb5\x4f\xf8\xbb\xfc\x17\xdb\x11\x2e\xb6\x24\xaa\xfe\x16\xad\x1e\xbc\x2f\xbe\x7e\x69\xc9\xea\xeb\x03\x09\xe1\x70\x5f\x8b\x43\xc9\x7a\x57\x36\x33\x5e\xab\x37\xbb\xdb\x5f\x85\x44\xbb\xf9\xb1\x83\x43\xd4\xb4\xc6\x79\x2e\xa5\xc5\x7e\xa5\xa6\xaa\xbf\x57\x5d\xa1\x25\x28\x82\xa8\x02\xe7\xdd\xdc\xde\x3f\x4a\xf4\x74\x6e\x7c\xff\x5b\xad\xf8\x2f\x1d\x97\xe8\x26\x93\xfe\x5b\x41\x35\x16\xaa\x93\x8f\xfd\x7b\xe9\x34\xc7\xba\xaa\xec\x64\x0a\x32\x86\xbd\x02\x8b\x01\x4e\x00\x6f\x39\x5f\xc2\x8b\x64\x32\x1f\x72\x9f\x09\x39\x77\xd1\xf6\xbd\x9c\x9f\x33\x9c\xef\x2b\xc1\xf4\xed\x14\xfe\xb9\x22\x69\x1f\x4e\xb8\x2b\x6a\xc8\x64\xd0\x33\x18\xd4\x2f\x55\xde\x4b\x7f\xee\xbc\x15\x39\x90\x22\x72\xa6\xf9\xa9\x49\x54\xcf\xfc\xf0\xcc\x0f\x43\xf6\x0a\x45\x43\xcb\xd5\xaa\x5e\xa6\xe2\xdb\xd2\xca\x06\x5c\xe1\x15\x95\xc9\x23\xdf\xbc\x1e\x05\x7b\x02\x23\x5c\xcb\x98\x43\xcd\x1d\xa8\xb8\xe2\xf7\x76\xd0\x91\xf5\x57\xab\x36\x93\x96\xfe\x21\xf7\x58\x81\xe5\x55\x2a\xbd\xde\x15\xb8\xa4\x45\xa6\x1d\x16\x37\x84\x5a\x11\xf4\x21\x96\xf9\x68\x31\x37\xff\x42\xe8\x40\x4f\x18\xa3\x60\x53\x09\x5b\x92\x1c\x51\xa3\xa6\x72\x89\x3c\x98\xf4\x8e\xb5\x17\x77\x1f\xb6\xb0\xf3\xff\x01\x00\x00\xff\xff\x91\x2f\x13\xd3\x3c\x39\x00\x00")

func bindataTemplates07fieldertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates07fieldertmpl,
		"templates/07_fielder.tmpl",
	)
}



func bindataTemplates07fieldertmpl() (*asset, error) {
	bytes, err := bindataTemplates07fieldertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/07_fielder.tmpl",
		size: 14652,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1599063149, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates08singlerelationertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x5d\x8b\xd3\x4c\x14\xbe\xcf\xaf\x38\x94\x7d\xb7\x4d\x49\xd3\xf7\xba\xd2\x1b\x17\x95\x82\x2b\xb2\x5d\xf4\x42\x44\x86\xe4\xa4\x3b\xec\x64\x26\x4c\x26\x5d\x65\x98\xff\x2e\x33\x93\x4c\x9a\xb4\xba\xb5\xa8\x98\x8b\xd2\xe6\x7c\x3c\xcf\xf9\x78\x4e\xb5\xce\xb1\xa0\x1c\x61\x52\x53\xbe\x63\xb8\x90\xc8\x88\xa2\x82\xa3\x9c\xc0\xc2\x98\x48\xeb\x05\x5c\x89\x46\xc1\x6a\x0d\xa9\x7b\xb3\x5c\xc2\x8d\x28\x2b\xca\x10\x14\x2d\x11\xb2\x07\xcc\x1e\x81\x16\xa0\x75\xfa\x8e\x94\x68\x0c\xd0\xb2\x62\x58\x22\x57\x35\x68\x6d\xa3\xd3\x5b\x52\x55\x94\xef\x8c\xd9\x3a\x98\xbb\x80\x02\x94\x2b\x94\x05\xc9\x30\x8d\xf6\x44\xc2\x97\xe7\x23\xd6\x70\x1d\xa0\xb4\x89\x2c\xa1\x37\xa8\x3a\x87\x5b\x91\x23\xbb\x94\x41\xd1\xf0\x0c\x66\x5a\xa7\x77\x98\x21\xdd\xa3\x34\x06\xe6\x01\x2c\x3e\xc2\x99\x75\xed\xb2\x5e\x23\x18\x25\x9b\x4c\xbd\xa6\xc8\xf2\xd8\xa6\x1c\x5a\x5d\x74\x02\x28\xa5\x90\x31\xe8\x08\x00\xa0\x7e\xa2\x2a\x7b\x80\x2e\x65\xba\xe1\x39\x7e\xfd\xf4\xff\xe7\xd6\xac\xb5\x24\x7c\x87\x70\x15\x30\xed\x48\x3a\x3a\xb5\x9d\x8d\xd6\xb4\x00\x2e\x54\xef\x93\x6e\xea\x2d\xa3\x19\xba\xc9\xd9\x2c\x19\xa9\xd1\xb6\x64\x88\x62\xcc\x0a\x96\xcb\xc1\x7b\x5f\xb2\x8b\xf1\xe8\xb4\x18\xa4\x7d\x2f\x5c\xdf\x42\x62\xfb\xb8\x25\x70\x85\xf6\xfd\x4b\x8f\x93\xc2\x7a\x0d\x9c\xb2\xb6\xae\xee\x91\xa8\x1a\xc9\xad\x21\xb1\x1f\xc1\x66\xec\x0a\x22\xcf\x0f\x70\x5a\xd7\x93\xe5\x1e\xf0\xba\xd6\xda\xc5\x9d\xc3\xa9\xc7\x74\x41\xbe\x9b\xed\x17\xf7\x3a\xc7\x82\x34\x4c\xad\xc6\x24\x1c\x5f\x37\xc7\x3a\xfd\x28\x49\x55\x1c\xcd\xfa\x95\x94\x1b\xbe\x27\x8c\xe6\xdd\xb0\xdc\x56\x24\x30\xa9\xa4\xd8\xd3\x1c\x73\xa0\xde\x1e\x66\xbf\x82\xe9\x7f\xf5\x14\x0a\x21\xa1\xb4\x9b\x62\x7f\xdf\x4f\x27\x49\x70\x48\x60\xb0\xa4\xb1\x63\x65\x22\xaf\x86\xed\x5f\x52\xc3\x18\xe7\x3c\x35\x24\xbe\xa4\x23\x26\x2e\x45\xec\x5b\xf9\xdb\x14\x11\x85\xdd\xfd\x33\xb2\xa0\x45\x5b\xcd\xc9\x95\x7e\x6e\x41\x47\xce\xe7\x28\x67\x40\xe6\x25\xa9\xf1\xfe\x5b\xe5\xef\xe0\x30\x17\xb2\x1a\x2f\x85\x38\x54\xdf\x40\x11\x3f\xd0\x6b\x2f\x55\x70\xb0\xee\x0c\xf4\x35\xdb\xbc\x76\x32\x33\x25\xde\x8a\x27\x94\x37\xa4\x44\x06\x43\xdc\xd8\x0b\x6e\x14\x64\x65\x29\x1e\x6d\xac\x6b\x72\x3a\x9b\x9f\xae\x3e\x7e\x61\xdd\xc6\xbd\x3f\xb3\x9d\x3f\x1f\xd1\xbc\xbf\x21\x87\xd4\xce\xe8\xc5\xf8\x50\xfc\xe2\x8d\xf8\x40\x58\x83\xa7\x6e\x84\xdf\xb7\xbd\x35\xfb\xb3\xe0\xce\x44\x90\xc0\x71\x95\x93\x56\x71\xf1\x25\xe7\xed\xdf\xb9\x6c\xe1\x6f\xe0\x7b\x00\x00\x00\xff\xff\x73\x95\xb7\x0b\xb4\x08\x00\x00")

func bindataTemplates08singlerelationertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates08singlerelationertmpl,
		"templates/08_single-relationer.tmpl",
	)
}



func bindataTemplates08singlerelationertmpl() (*asset, error) {
	bytes, err := bindataTemplates08singlerelationertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/08_single-relationer.tmpl",
		size: 2228,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1599063149, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates09multirelationertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5d\x6f\xdb\x36\x14\x7d\xf7\xaf\xb8\x33\xba\x58\x0a\x64\x25\x7b\x35\xe0\x01\x59\xd1\x0d\x01\xe2\x61\xa8\x8b\xed\xc1\x30\x0a\x4d\xba\x4a\x08\x53\x94\x40\xd1\xee\x0a\x82\xff\x7d\xa0\x48\xc9\xfa\xb0\x1a\xd9\x71\x0a\x67\x58\x9e\x62\x91\xbc\x1f\xe7\xde\x73\x44\x5d\x29\x23\x8c\x09\x43\x18\x27\x5b\x2a\xc8\x94\x23\x0d\x04\x49\x19\xf2\x31\x4c\x95\x1a\x49\x39\x85\x77\xe9\x56\xc0\x6c\x0e\x7e\xf1\xe4\xe6\x06\xde\xa7\x49\x46\x28\x82\x20\x09\x42\xf8\x84\xe1\x06\xe2\x94\x83\x78\x42\x90\x52\xef\xf6\x17\x41\x96\x11\xf6\xa8\xd4\x42\x5b\xfd\x58\x19\x05\xc2\x04\xf2\x38\x08\x11\x48\x92\x51\x4c\x90\x89\x62\xc9\x1f\xed\x02\x0e\x9f\x9f\x3d\x3f\x87\x2b\x29\xfd\xdf\x83\x04\x95\x92\x6a\xa4\xa3\xb9\x8b\xa2\x72\xc3\x22\x8d\x90\xee\x2d\xe7\xc3\xc3\xf1\x47\xf1\x96\x85\xe0\x48\xe9\x7f\xc4\x10\xc9\x0e\xb9\x52\x70\x5d\xf9\x72\x3b\x6e\x9c\x12\x2a\xbd\xab\xe9\x65\x29\xf8\x36\x14\xbf\x12\xa4\x91\x07\x49\x11\x53\x27\x10\xfd\xd4\x05\xe4\x3c\xe5\x20\x47\x00\x00\xf9\x17\x22\xc2\x27\x28\xcd\xfa\xf7\x2c\xc2\x7f\x56\xb7\x6b\xbb\x2c\x25\x0f\xd8\x23\xc2\xbb\xca\xaf\x2e\x49\x19\x52\xae\x6b\x23\x25\x89\xf7\xeb\xfe\x7d\xbe\xa4\x24\xc4\xa2\x6a\xda\x42\x18\xe4\x45\x81\x9a\x1e\x94\x9a\xc1\xcd\x4d\xe3\xb9\x49\xb9\x38\x63\x3c\xef\x8d\xea\x25\xed\xd8\x11\xe9\x43\xfa\x05\xf9\xfb\x20\x41\x5a\xf3\xf9\x4b\x90\xe3\xa7\xaf\x19\xba\x26\x9e\xc6\x39\xa5\x3c\x48\x37\xfa\x74\x81\x89\xef\x5c\xd7\x9d\x96\x27\x95\x72\x2b\xcf\x24\x86\x1f\xd2\x8d\x05\xa0\xfc\xe3\x28\xb6\x9c\x19\xe8\x72\xff\x2f\x1e\x64\xb1\xd3\x86\xf7\x03\xe7\xf7\x6c\x17\x50\x52\xd5\xec\xcf\x80\x6e\xd1\x83\x71\xc6\xd3\x1d\x89\x30\x02\x62\xd6\x61\xa7\x17\x40\x7c\xcd\x70\x06\x93\x1f\x3f\x4d\xa0\xea\xe5\x58\x17\x70\x06\x93\x2e\x34\x93\xb1\xad\xeb\x3e\xd4\x3a\x5c\xad\x2a\xfc\x91\x16\x6d\x56\xd5\xc1\x66\x66\x63\xde\xb7\x9b\xdf\x75\x04\xf3\x39\x30\x42\x5b\x08\x08\x4c\x32\x0d\x63\x7d\xbf\x81\x4e\xaa\xc6\xc6\x61\x2e\xe0\x4a\x1b\x3c\x98\x09\x20\x8b\x1a\x71\xf7\x26\xa7\xd4\xb5\x94\xc8\xa2\xa2\xea\x43\x9c\x06\x59\x86\x2c\x72\xfa\x0c\x1e\x67\xcf\x33\x81\xb1\x54\x34\x6c\x7d\xa0\x98\x1c\xb2\xd7\xec\x4a\xd7\xf2\xcb\xe6\x5a\xfd\x53\x3c\x8e\x30\x0e\xb6\x54\xcc\x46\x2f\x6b\x3f\x2b\x06\xdd\xf6\x2b\x43\xb1\xcd\x57\xf6\x9e\x51\x8d\x49\xa5\x3f\xad\x8e\x33\xb1\xd9\x50\x18\xa1\x23\x23\x85\xbf\xa1\x68\x68\x54\xfe\x4a\x5a\xd8\xf1\x33\x4c\x0c\x5d\x70\x12\x13\xd6\x6a\x7d\x50\x10\x3d\x0d\xab\x81\xd6\xbd\x7c\x55\x6c\x99\xad\x35\x5b\x83\x32\xba\xa4\x9f\xcb\xf7\xc0\x6c\x0e\x26\xe0\x41\x2c\x69\xd2\xde\x62\x57\x51\xc7\xfc\xfe\xa6\x12\x4d\x01\x69\x8e\x9d\x70\xc8\xab\xc4\x71\xe5\x0c\x31\xb6\x22\x6b\xb7\x37\x58\xcd\xcf\x53\xd8\xc8\x88\xe9\x9d\xb3\x53\x32\x37\x94\x2c\x52\x34\x14\x1d\x7b\xd5\x06\xad\x3a\xb5\x64\x0f\x50\xb3\x84\xa6\x9f\xa2\x77\xe2\x3b\x71\xf4\x4e\x0c\xbd\xb1\x10\x4d\x00\xed\x6a\xcf\xd7\xff\x1e\x5b\xcf\xfe\x52\x7e\x41\x27\x16\x39\x78\x30\x36\xc0\xeb\xdb\x76\x1a\x43\x96\xe6\x39\xf9\x9b\xa2\xe1\xa9\x0f\x0b\xdb\x82\xd6\x9c\x7d\x2d\x78\x50\x14\xed\x40\xea\xe3\xc3\x24\x6b\xbf\xd0\x49\x6c\xeb\xfd\x33\x50\x64\x67\x7a\x1d\xbb\x30\x85\x9f\xde\x22\x3e\x36\xc8\xe7\x2f\x13\x57\x15\x1a\x7d\x78\x39\xc7\x00\xd6\x6f\xc6\xb5\x56\x56\x45\xf2\x6b\x23\x25\x6f\x4a\x21\x5b\xd9\x1f\xab\x92\x0f\xc8\x5e\x5f\x21\x1f\x90\x0d\xbe\xc2\x10\x26\xbc\xff\x55\xaf\xd9\x5d\xb7\xfb\xbe\x7c\x4e\x70\xec\x89\x33\x8a\xcd\xc9\x9c\xb8\xbd\x9c\x3b\x83\x69\xfb\xe5\x77\xba\xbf\x77\xfc\x1c\x35\xcc\xc8\xc1\xf7\xfd\xb7\x3c\xd0\x28\xbf\x9f\x93\x60\x83\xce\x6a\xdd\x33\x86\xf0\x8a\x1e\x35\x19\xd7\x6e\xac\xad\xcf\xc7\xc1\xc3\x90\xe6\x05\xbc\xf3\x3d\x50\x5e\xb4\xda\xdf\xef\x2f\x1b\xa0\x40\xdf\x10\x05\x2e\x76\x90\xd2\xd4\x8f\xb2\x5c\x2b\xb2\x86\x79\x17\x8f\x53\xc7\x2f\x27\x0d\x46\x0e\x7e\x4e\x0d\xb4\xd4\x32\x54\x57\xa7\x0b\x18\x3c\xe4\xdf\x1e\x3c\x54\xe9\x2c\x05\x27\xec\xd1\x71\x7b\x87\x10\x56\xb6\xff\x0d\x00\x00\xff\xff\xc5\x45\xdd\x0e\x56\x16\x00\x00")

func bindataTemplates09multirelationertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates09multirelationertmpl,
		"templates/09_multi-relationer.tmpl",
	)
}



func bindataTemplates09multirelationertmpl() (*asset, error) {
	bytes, err := bindataTemplates09multirelationertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/09_multi-relationer.tmpl",
		size: 5718,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1599063149, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates10modeldefinitiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x0e\xc2\x30\x0c\x45\x77\x4e\xf1\x95\xdd\x3d\x06\x1b\x0b\x9c\x20\x52\x7e\x90\x25\x27\xad\x42\x18\x50\xd4\xbb\xa3\x06\x94\x01\xd1\x6e\xb6\xff\xfb\xcf\xad\x09\x02\xa3\x66\xc2\xa5\x39\xd0\xa4\x6f\x5a\x75\xce\x0e\xb2\xae\xa7\xd6\x50\x99\x16\xf3\x95\x70\x4b\xd1\xe4\xcb\xcb\x61\x42\x8f\x34\x62\x3a\x2b\x2d\xb0\xe0\x97\x8d\x9f\xfb\x60\x05\xcc\x61\xb4\x6e\x9a\xef\xc6\x2b\xcd\x6f\xaf\xfe\xd4\x1f\x1d\x90\x32\x88\x1d\xd1\xe5\x69\x55\x0f\x3c\x69\xcb\x8f\x35\xdf\xe9\x1d\x00\x00\xff\xff\xdd\x47\x50\x16\x0c\x01\x00\x00")

func bindataTemplates10modeldefinitiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates10modeldefinitiontmpl,
		"templates/10_model-definition.tmpl",
	)
}



func bindataTemplates10modeldefinitiontmpl() (*asset, error) {
	bytes, err := bindataTemplates10modeldefinitiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/10_model-definition.tmpl",
		size: 268,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1597612013, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates11singlefilemodelstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x3f\x4b\x04\x31\x10\xc5\xfb\x7c\x8a\xc7\x22\x56\x6e\xb6\x3f\xb8\xca\xb3\xb0\xf0\xce\xe2\x3a\x11\x19\xdd\xb9\x35\xb8\xf9\x43\x12\x15\x19\xf2\xdd\x25\xc9\x15\x87\x60\x37\xe4\x37\x6f\xe6\xbd\x8c\xc8\x88\x99\x4f\xc6\x31\x86\x64\xdc\xb2\xf2\x78\x32\x2b\x8f\xd6\xcf\xbc\xa6\x01\x63\x29\x6a\x9a\x70\xeb\x67\xc6\xc2\x8e\x23\x65\x9e\xf1\xfa\x03\xc7\x9f\xd1\x2f\xde\x71\x32\x49\x63\x77\xc0\xfe\x70\xc4\xdd\xee\xfe\xa8\x6b\xff\xf1\xdd\x24\xd4\x41\xf8\xa6\x74\x21\xa4\xbc\xa9\x58\x04\xd9\x58\x4e\x99\x6c\x40\x29\x4a\x05\x7a\xfb\xa0\x85\x21\xa2\x1f\x7b\xb9\x27\xcb\x95\x88\x64\xb6\x61\xa5\xcc\x18\x8c\x0d\x3e\xe6\x34\x40\x57\x32\x4d\xd8\x57\x13\xee\xe5\xa1\x99\x45\xca\x3e\x72\x02\xad\xeb\xc5\xc6\x1e\x04\xc6\x21\x57\x4f\xe7\x45\x5a\x7d\x51\xfc\x23\xdf\xe2\xe9\xd9\x52\x08\xc6\x2d\xba\x3d\x09\xea\xef\x44\x72\x0b\xe3\xaa\xcd\xc1\x66\x8b\xce\x52\x29\x0a\x00\xae\x45\x3a\xd2\xdd\xb0\x94\x1b\x11\x76\x73\x29\xaa\x28\x91\x7f\xc4\x35\xf3\x65\xb0\xc6\xc7\x76\x07\x93\x8d\x77\xc3\x59\xd2\xda\x46\xf4\x79\xe7\xaa\x9e\xe4\x37\x00\x00\xff\xff\x9d\x86\x26\xa3\xb6\x01\x00\x00")

func bindataTemplates11singlefilemodelstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates11singlefilemodelstmpl,
		"templates/11_single-file-models.tmpl",
	)
}



func bindataTemplates11singlefilemodelstmpl() (*asset, error) {
	bytes, err := bindataTemplates11singlefilemodelstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/11_single-file-models.tmpl",
		size: 438,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598966105, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates12singlefilecollectionstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\xbd\x6e\xc3\x30\x10\x83\x77\x3f\x05\x61\x74\x95\xb2\x07\xe8\x94\x74\xe8\x92\x74\xf0\x0b\x5c\x6d\x46\x3d\x54\x3f\x86\xa5\xa2\x28\x04\xbf\x7b\x21\x67\xb0\x37\x02\x24\x3f\xf0\xae\x56\x83\x89\x0f\x8d\x44\x9f\x35\x3a\x4f\xf3\x50\x4f\x33\x26\xef\x39\x16\x4d\x31\xf7\x30\xeb\xda\x9d\x4e\xb8\xa4\x89\x70\x8c\x5c\xa4\x70\xc2\xe7\x1f\x22\x7f\x96\xe4\x52\x64\xd6\x6c\x71\xbd\xe3\x76\x1f\xf0\x76\x7d\x1f\x6c\xcb\x0f\x5f\x9a\xd1\x68\xf8\x95\x7c\x28\x4a\x39\x37\xbb\x56\x14\x0d\xcc\x45\xc2\x8c\x75\xed\xba\x59\xc6\x6f\x71\x44\xad\xf6\xe3\x29\x6f\x12\xd8\x9c\x5a\x0b\xc3\xec\xa5\x10\xbd\x86\x39\x2d\x25\xf7\xb0\x4f\x67\x91\xe8\x88\x97\x7d\x30\xce\xaf\xb0\x97\x7d\x7f\x63\x1f\x01\x7b\xd2\x6c\x97\x6b\x93\xfd\x91\xb0\x15\x0c\x18\xa7\x5d\x6d\x4f\xf8\x0f\x00\x00\xff\xff\xa9\x2d\xfd\x9e\x2e\x01\x00\x00")

func bindataTemplates12singlefilecollectionstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates12singlefilecollectionstmpl,
		"templates/12_single-file-collections.tmpl",
	)
}



func bindataTemplates12singlefilecollectionstmpl() (*asset, error) {
	bytes, err := bindataTemplates12singlefilecollectionstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/12_single-file-collections.tmpl",
		size: 302,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598954715, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates13collectiondefinitiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xca\xb1\x0a\x85\x30\x0c\x46\xe1\xbd\x4f\x11\xba\xf7\xbe\xd3\xb5\xfd\x85\x40\x6c\xa5\x26\x53\xc8\xbb\x8b\xe2\xe2\xe0\x76\x38\x7c\xee\x0d\x2b\x77\x50\xae\x43\x04\x55\x79\xf4\x72\x2f\xbe\x32\x53\x89\x48\xee\x8a\x6d\x97\xbf\xbe\xd9\xa1\xd3\xaa\xda\x44\xa6\x1f\x45\xa4\x2f\xb7\x18\x4b\xc3\x7c\x94\x7b\x21\xf4\x16\x71\x06\x00\x00\xff\xff\xd1\xbc\x4d\x93\x7b\x00\x00\x00")

func bindataTemplates13collectiondefinitiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates13collectiondefinitiontmpl,
		"templates/13_collection-definition.tmpl",
	)
}



func bindataTemplates13collectiondefinitiontmpl() (*asset, error) {
	bytes, err := bindataTemplates13collectiondefinitiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/13_collection-definition.tmpl",
		size: 123,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1597612013, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates14collectionpackagestructuretmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdd\x6f\xdb\x38\x12\x7f\xf7\x5f\x31\x35\xda\x5a\x2a\x1c\x39\x0f\x87\x7b\x30\xe0\x03\x9a\xa4\xed\x05\x87\xf6\xee\x9a\xec\x2e\xb0\x41\x10\xc8\xd6\xc8\x16\x22\x93\x2a\x49\xa7\xf1\x0a\xfa\xdf\x17\xfc\x90\x28\x4a\xf2\x47\x12\x27\xdd\x05\xda\x87\x18\x12\xc9\x99\xe1\x6f\x7e\xf3\x41\xaa\x79\x1e\x61\x9c\x10\x84\xfe\x8c\xa6\x29\xce\x44\x42\xc9\x51\x16\xce\x6e\xc3\x39\x1e\x71\xc1\x56\x33\xb1\x62\xd8\x87\xa3\xa2\xe8\xdd\x85\x0c\x6e\x96\x17\xea\x25\xbc\x5b\x86\x59\x96\x90\x79\xf0\x99\x46\x98\xea\x97\xbd\x5e\xbc\x22\x33\x58\xda\x37\xde\x4d\x34\x85\x28\x14\xe1\x34\xe4\x18\x9c\x9d\xf8\xe0\x75\x2d\x1c\x02\x32\x46\x99\x0f\x79\x0f\x00\x20\x89\xad\x9e\x57\x13\x20\x49\x6a\x06\xe4\x3f\x86\x62\xc5\x48\x35\x61\x28\x87\xd5\x60\xa1\xfe\x2e\x6b\x12\x61\x3c\x81\x9b\x68\xaa\x35\x7d\x0e\x33\xcf\xaf\x2b\xf5\xde\xe6\xb9\x7e\xfe\x12\x2e\xb1\x28\xf2\xc2\x2f\xb5\xcb\xb5\x9b\x14\x93\x24\x55\xc2\x6b\x3a\x2b\x63\x27\xa5\xfa\x5e\x6d\x81\x63\x68\xd1\xeb\x8d\x46\x70\x49\x95\x5e\x0e\x33\x4a\xee\x90\x09\x0e\x62\x81\x90\x90\x6c\x25\x80\xa7\xc9\x0c\x81\xc6\xe0\x5a\x07\x09\x11\x14\xae\xae\x1d\xf4\x34\xde\xa5\x34\x4f\x0b\x08\x82\xe0\x9d\xbb\xd6\x07\xaf\xb1\xb0\x44\x9a\xae\x84\x5c\x32\x9e\xc0\x32\xbc\xc5\xe6\xac\x21\xa4\x48\xb4\x54\x5f\x63\x13\x53\x06\x89\x9c\xce\x42\x32\x2f\x2d\xb6\x10\x69\x71\x57\xc9\x35\x4c\xf4\xd8\x55\x72\x5d\xc3\xc9\x00\xa2\x67\x19\x28\x3e\x32\xba\xdc\x0c\x86\x63\x4e\x09\x41\x63\x77\x81\x46\xc1\x0a\xb2\x38\x34\xf6\xec\xb5\xd6\x6e\xc4\xa1\x31\xef\x20\x48\x04\x5e\x53\xfb\x0e\x6c\xfe\xbf\x42\xb6\x86\x19\xc3\x50\xa0\x46\xe5\x9b\x7a\x23\x75\xcb\xa7\x4e\x1c\xd4\x22\xcf\x0d\xbb\xa1\x8e\x49\xde\xc9\x0d\xf9\xe2\xb4\x0a\xfe\x40\xad\x3f\x59\x25\x69\x84\xac\x28\xcc\x96\x64\xe8\x2b\xdd\xc6\x55\x4d\x1e\x9a\xb8\x91\x20\x69\x4d\x3e\xfc\x0b\x8e\x6b\x78\xd4\x17\x6f\x23\x9b\x59\xed\x57\x0b\x15\xce\xc6\x7e\x0b\xb7\xd9\x8e\x95\xdf\xd0\xa1\x81\x5f\x56\xb6\x59\x9c\xbb\xb3\x44\x3d\x65\x45\x53\xad\x7d\xaa\x31\x90\xc3\xd1\x54\xc3\xe2\x55\xeb\xea\xfb\x09\x82\xc0\xaf\xfb\xf0\xed\x36\x40\x73\x23\x76\x5c\xca\x57\x36\x8c\xe5\x9f\xa2\xee\xf6\x53\x71\xbf\xb7\xe7\xe1\x7b\x22\x16\x90\x31\x7a\x97\x44\x18\xc1\x60\x26\xee\x07\x32\x9a\x04\xde\x8b\x3a\x2b\x4e\xc5\xbd\x37\x93\x72\xcd\xd0\xa9\xfe\x1d\xc2\x4f\xb6\x3c\x07\x5b\x0c\xdc\x43\x78\x11\xd6\x9c\x13\x8e\x4c\x40\xa2\x7e\x78\x67\xf5\xa8\x7c\xac\x39\xa1\x57\x3c\x99\x11\xaa\x74\xdb\xca\x5d\xf7\xea\x64\xe2\xb8\xd5\xec\x54\x2d\xe0\xc1\x6f\x2c\xcc\x3c\x85\x48\xf0\x81\xb1\x2f\xa6\x88\x0d\xa1\x4f\xa8\x58\x24\x64\x0e\x82\x9a\xdd\xf4\xfd\x07\x3a\x63\x47\x09\x77\xab\x77\xdd\x29\x5b\x0b\xa1\xc3\xb6\x3d\x99\xb6\x85\x65\x4e\xde\x8f\xa6\x81\x75\x47\x37\x63\x14\x61\xb4\xaf\x7f\xc9\xa2\x50\x20\xac\xd4\x4f\xcb\xd7\xc6\x88\x2e\x97\xeb\x85\x4f\x76\xb9\x97\x10\xf1\xcf\x7f\xb4\xbb\xb6\xdd\xbe\x3f\x1e\xfe\x78\xf7\x1f\x37\xfb\xb7\xbf\x0a\x03\xac\x77\x76\x32\xe0\x0c\x53\x14\x08\x91\xfa\xd9\xcc\x80\xa6\xff\xf5\xb2\x43\xf9\xff\xa7\xfb\x0f\xea\x7e\xeb\x9c\x9d\xee\xff\x8a\x31\x43\xbe\x38\x64\x87\x60\x44\x1e\xb4\x1c\x3c\xa2\x11\x78\x72\xc9\x60\x7a\x1f\x2f\x57\x33\x7e\x20\x63\x6a\x3e\xdb\x4e\x99\x5e\x9e\xbf\xa6\xfa\x80\x13\xa8\xb3\x7c\x9e\x6b\xed\xaf\x19\xa6\xa1\x6c\x38\xd4\x90\x5a\x14\x7c\x35\xaf\xb8\x9a\xd9\xcb\xf3\x24\xb6\xf3\x82\x73\x7e\xa1\x4e\xa8\x72\x6c\x34\x82\xf7\x51\x94\xe7\x76\xd4\xd0\x2d\x8c\x22\x4d\xca\x41\x7b\x70\x00\xe5\x0b\xbe\x48\x32\x85\x4a\x45\x4c\x7d\x8c\x1a\x68\x4c\x06\x86\x99\x9d\x2a\x1e\xc0\x53\xd9\xb3\xca\xdd\xbb\x07\xba\xca\x08\xc3\x62\xab\xe0\x24\xe4\x78\xb9\xce\xba\x9a\x1b\x2d\x6f\xb2\x99\x23\x5b\x59\x5a\x6d\x53\xae\x56\xa2\x1c\x96\x9a\x48\xa8\x0c\x7b\x7c\x30\x54\x9b\x2b\xd9\x55\x6a\x7e\xde\xa8\x28\xb5\x7e\x4c\x30\x8d\xac\x58\x2d\xb2\xa2\xd5\xc9\xfa\x9c\x44\x78\xef\xd5\x21\x57\x6f\x8a\xfd\x2e\x60\xba\x75\xee\x93\xbf\x2d\xb2\x9d\x67\x78\xcb\x88\xba\xce\xba\x78\x1d\x8f\xd5\x3c\xf7\x76\xe3\x9b\x94\xa4\xfd\xf1\x05\xbf\x5f\xcc\x68\x86\xf6\xbc\xa8\xb0\xf5\x1d\x8b\xdf\x47\xaa\x8f\xa7\xb7\xe6\xcc\xe0\x55\xcc\x55\xbd\xff\xd7\xfa\xb4\x0a\x98\x57\xf4\x76\x2b\x21\xce\x50\xc4\x96\x14\xe7\x44\x20\x23\x61\x3a\x84\xfe\xd9\x09\x44\x14\x39\x19\x08\x48\x96\x59\x8a\x4b\x24\x02\xda\x8a\x64\xd7\x88\x2c\x0e\x65\x80\xc3\x9b\xcb\xbe\x0c\xa9\x8e\x6b\x0a\x67\x0f\xda\xde\xf7\x51\x54\x25\x0e\x9d\x90\xbe\x0d\x9b\x8c\x70\xd1\x34\xc9\x29\xcf\x91\x44\x3a\xd5\x8c\x46\x70\x9a\x62\xc8\xda\xe1\x5e\x8a\x86\x99\x1c\x7f\x54\x6e\xd1\xa1\x10\xc0\x47\xca\x9c\x59\x1c\x68\x0c\x62\x9d\xe1\x58\xea\x3f\xc1\x94\x92\x39\xbf\xa4\x43\xf8\x77\xc8\xff\x4b\x50\xfd\x7e\x0e\xc9\x5a\xc2\x1f\x53\x86\xc9\x9c\xc0\x2d\xae\x21\xe1\x40\xa8\x00\xb2\x4a\xd3\x70\x9a\x22\x88\x45\x48\x94\x5d\x32\x69\x29\x5b\xbf\xd3\x55\x1a\x95\x90\x85\xc6\x4f\x26\xa9\xed\xd8\xe7\x23\xca\x70\x33\xc5\x6d\x68\xd3\x9f\xa3\x83\x2a\x37\xf1\x6c\x31\xdf\xd2\xa8\xac\x3e\x2f\xb9\xfa\xe0\xbe\x6d\x4b\xf9\x6d\x48\xae\x95\xe0\x46\xbc\xf3\x9d\xf1\x6e\xa5\xd4\x0e\xfb\x7a\xf7\xca\xfd\xfb\x84\xbf\x99\xb8\x3d\x01\xb8\x6d\xf5\x0b\xe7\x00\x63\xa1\xb9\xf3\x90\x0f\x8d\x3c\xc0\x6d\xe0\xeb\x66\x64\x34\x82\x4f\x28\x3a\xda\x86\x39\x8a\x27\xb7\x0d\x65\xd7\xd0\xa9\xe1\x60\x5d\x83\x4a\x68\x1c\xd5\x2d\x33\x17\x2c\x21\x73\x1f\xbc\xcd\x9d\xd2\xd5\x75\x9e\x1f\x81\xc9\x73\x1b\x9a\x8d\xf6\x71\x7a\x7b\xb7\x51\x7e\x88\x78\x4a\xcb\x21\x13\xee\x02\x67\xb7\x52\x5b\xc6\x92\x65\xc8\xd6\x2a\xb7\x2d\x42\x0e\x7f\x20\xa3\x70\x17\xa6\x2b\x0c\x1c\x83\x82\x73\xfe\x3f\x3d\xf5\x3f\xb8\xfe\x1d\x19\xf5\xfc\x3d\x8c\x2b\xc3\xf2\x03\x63\x0a\xbb\x5f\xa5\xe0\x21\xf4\xb5\xcf\xf8\x58\xb9\xbc\x01\xf7\xc0\xb1\x49\x99\xd2\xb0\xec\xd0\xfd\x4c\xc7\xc7\x9d\x97\x69\x6a\x1a\x8a\xab\xd3\x53\xac\x78\x06\x57\xd7\xd5\x67\x33\xad\x58\x59\xd3\x6e\x80\x54\x5e\xab\x1b\x6c\x9b\xf9\x45\x92\x79\xbe\x7e\xc4\xa8\xfe\x19\xcc\xef\x6a\x3e\x4b\x7e\xb7\x7a\x50\x63\xd0\xc4\xd5\x1b\xe8\xf9\x46\x56\x01\x98\x72\xac\x2f\xa2\x0c\x6e\x86\x7a\x6d\xbb\xdf\xaa\x62\xc9\xbd\xa0\xe5\x06\x71\x9d\x21\x3b\xd4\x9d\xac\x25\x4d\x3c\x25\xd5\x77\x96\xb6\xf2\xe4\x0e\x76\xc6\x75\x7a\x9e\x93\xbb\x30\x4d\x34\x44\xc6\x04\xd9\x52\x2b\x35\x63\x18\xbc\xe1\x03\x88\xe9\x8a\x44\xd5\x51\x5b\xf1\x6c\xec\xe6\x2c\x1b\xd6\x83\xbe\xd9\xb8\x6b\x62\xe1\x3c\x55\xa8\x86\x59\x86\x24\xd2\x7b\xe2\x43\x83\x81\xdf\xba\x95\x76\x3c\xcf\x2b\x56\x46\xd3\xe0\x13\x8a\x46\xfa\xad\xc2\xa2\x51\x1b\x73\x65\x77\x33\xa7\x19\x63\x6d\xc5\x7a\x78\xc4\xec\x3c\xc7\x6c\x39\x51\x36\xa4\xab\x0f\x71\x5d\xa8\xe6\x85\xfd\xf0\xab\x45\x1e\x69\xd2\x75\x08\x51\x26\xb6\x26\x93\xa8\xa8\xdf\xf1\xef\xb0\x89\x21\x5f\xa5\x8d\x0f\x84\xdd\x49\x7c\xe3\x41\xc3\x02\xbd\xeb\xc8\x21\x55\xb9\x47\x0d\xf5\xe9\xb0\xf3\x84\xda\x55\x97\xe5\x7a\xbb\xe3\x16\x34\x8d\xfa\xcd\xaf\x8e\xaf\x37\xcb\x6f\xc8\x51\xa8\x99\x1a\x7e\xd1\x59\xc3\xf9\x01\x6a\x78\x75\xf4\xef\x54\x71\xb0\x22\xbe\xd9\xe7\xaa\xa7\x2e\x81\x2b\x0a\xd8\x5d\xbd\x5f\xf6\xaa\xe0\xd9\xea\xf6\xdf\xaf\x64\xff\xf8\x2b\x88\x7d\x0f\xfe\x8a\x6e\xf2\xc8\xb8\x39\xcd\x24\x31\xd4\xc6\x0e\xe3\xae\x2a\xeb\x74\x06\xa4\xa6\xa9\xeb\xa2\xca\x87\xaa\x14\xf4\xfd\x0e\x7c\x2f\x50\x88\x7d\x8e\x2f\x7a\xde\x4b\x5c\x5f\x68\x4d\xf6\xec\x32\xde\xe3\xe8\xa2\xd7\x68\x8b\x2f\x5a\x85\x73\xf3\xfd\x85\xdf\x9d\x58\x5f\xfa\x02\xef\xc9\x77\x5f\xfb\x96\xa4\xbd\x69\xf9\x40\x6a\x52\xa2\xfe\xa7\xd3\x81\x18\x0a\x4e\x5b\xb5\xed\xe6\xee\x27\xa1\x37\x5f\xc8\x35\x4b\xbd\xbd\x9e\xab\xde\xfe\x19\x00\x00\xff\xff\xbc\xdd\xda\xb8\x35\x28\x00\x00")

func bindataTemplates14collectionpackagestructuretmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates14collectionpackagestructuretmpl,
		"templates/14_collection-package-structure.tmpl",
	)
}



func bindataTemplates14collectionpackagestructuretmpl() (*asset, error) {
	bytes, err := bindataTemplates14collectionpackagestructuretmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/14_collection-package-structure.tmpl",
		size: 10293,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1599063149, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates15collectionpackagetmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x3d\x4e\xc3\x40\x14\x84\x7b\x9f\x62\xe4\xde\x4e\x4f\x4b\x28\x68\x12\x0a\x5f\x60\xe3\x9d\x98\x27\xf6\xc7\xda\x7d\x16\x42\x4f\x7b\x77\x64\xe1\x02\x41\x91\x6e\xa4\xef\x1b\xcd\x98\x79\xde\x25\x11\xfd\x9c\x43\xe0\xac\x92\xd3\xb0\xba\xf9\xc3\x2d\xec\x31\xb4\xd6\x9d\x4e\x78\xce\x9e\x58\x98\x58\x9c\xd2\xe3\xf6\x85\xc4\xad\xe4\x25\x27\x56\xa9\x23\xce\x57\x5c\xae\x13\x5e\xce\xaf\xd3\xb8\xfb\xd3\xbb\x54\xdc\x25\x10\x9f\xae\xfe\x2a\x3a\x7d\xda\xb1\x19\x54\x22\xab\xba\xb8\xa2\xb5\xae\x3b\xf6\x60\x36\xbe\xfd\xc4\x8b\x8b\xdc\x89\x99\x32\xae\xc1\x29\xd1\x4b\x5c\x73\xd1\xda\x63\xc4\x5f\xf4\xff\xfb\x50\xb5\x6c\xb3\x6e\x85\x0f\xfc\xdb\x26\xc1\xb3\x1c\x96\xd9\x00\x26\xdf\xda\x77\x00\x00\x00\xff\xff\x2e\x73\xe6\x5f\x18\x01\x00\x00")

func bindataTemplates15collectionpackagetmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates15collectionpackagetmpl,
		"templates/15_collection-package.tmpl",
	)
}



func bindataTemplates15collectionpackagetmpl() (*asset, error) {
	bytes, err := bindataTemplates15collectionpackagetmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/15_collection-package.tmpl",
		size: 280,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1598963773, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"templates/00_imports.tmpl":                      bindataTemplates00importstmpl,
	"templates/01_initialize_collections.tmpl":       bindataTemplates01initializecollectionstmpl,
	"templates/02_collection.tmpl":                   bindataTemplates02collectiontmpl,
	"templates/03_collection-structure.tmpl":         bindataTemplates03collectionstructuretmpl,
	"templates/04_collection-builder.tmpl":           bindataTemplates04collectionbuildertmpl,
	"templates/05_model.tmpl":                        bindataTemplates05modeltmpl,
	"templates/06_primary.tmpl":                      bindataTemplates06primarytmpl,
	"templates/07_fielder.tmpl":                      bindataTemplates07fieldertmpl,
	"templates/08_single-relationer.tmpl":            bindataTemplates08singlerelationertmpl,
	"templates/09_multi-relationer.tmpl":             bindataTemplates09multirelationertmpl,
	"templates/10_model-definition.tmpl":             bindataTemplates10modeldefinitiontmpl,
	"templates/11_single-file-models.tmpl":           bindataTemplates11singlefilemodelstmpl,
	"templates/12_single-file-collections.tmpl":      bindataTemplates12singlefilecollectionstmpl,
	"templates/13_collection-definition.tmpl":        bindataTemplates13collectiondefinitiontmpl,
	"templates/14_collection-package-structure.tmpl": bindataTemplates14collectionpackagestructuretmpl,
	"templates/15_collection-package.tmpl":           bindataTemplates15collectionpackagetmpl,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"templates": {Func: nil, Children: map[string]*bintree{
		"00_imports.tmpl": {Func: bindataTemplates00importstmpl, Children: map[string]*bintree{}},
		"01_initialize_collections.tmpl": {Func: bindataTemplates01initializecollectionstmpl, Children: map[string]*bintree{}},
		"02_collection.tmpl": {Func: bindataTemplates02collectiontmpl, Children: map[string]*bintree{}},
		"03_collection-structure.tmpl": {Func: bindataTemplates03collectionstructuretmpl, Children: map[string]*bintree{}},
		"04_collection-builder.tmpl": {Func: bindataTemplates04collectionbuildertmpl, Children: map[string]*bintree{}},
		"05_model.tmpl": {Func: bindataTemplates05modeltmpl, Children: map[string]*bintree{}},
		"06_primary.tmpl": {Func: bindataTemplates06primarytmpl, Children: map[string]*bintree{}},
		"07_fielder.tmpl": {Func: bindataTemplates07fieldertmpl, Children: map[string]*bintree{}},
		"08_single-relationer.tmpl": {Func: bindataTemplates08singlerelationertmpl, Children: map[string]*bintree{}},
		"09_multi-relationer.tmpl": {Func: bindataTemplates09multirelationertmpl, Children: map[string]*bintree{}},
		"10_model-definition.tmpl": {Func: bindataTemplates10modeldefinitiontmpl, Children: map[string]*bintree{}},
		"11_single-file-models.tmpl": {Func: bindataTemplates11singlefilemodelstmpl, Children: map[string]*bintree{}},
		"12_single-file-collections.tmpl": {Func: bindataTemplates12singlefilecollectionstmpl, Children: map[string]*bintree{}},
		"13_collection-definition.tmpl": {Func: bindataTemplates13collectiondefinitiontmpl, Children: map[string]*bintree{}},
		"14_collection-package-structure.tmpl": {Func: bindataTemplates14collectionpackagestructuretmpl, Children: map[string]*bintree{}},
		"15_collection-package.tmpl": {Func: bindataTemplates15collectionpackagetmpl, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
